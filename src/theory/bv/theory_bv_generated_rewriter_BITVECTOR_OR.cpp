#include "options/bv_options.h"
#include "options/main_options.h"
#include "theory/bv/theory_bv_special_rewriter.h"
#include "theory/theory.h"
#include "theory/bv/theory_bv_utils.h"

using namespace CVC4;
using namespace CVC4::theory;
using namespace CVC4::theory::bv;

Node rewrite_658_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_72(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_73(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_74(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_75(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_76(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_77(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_78(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_79(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_80(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_81(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_82(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_83(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_84(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_85(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_86(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_87(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_88(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_89(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_90(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_91(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_92(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_93(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_94(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_95(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_96(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_97(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_98(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_99(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_100(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_101(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_102(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_103(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_104(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_105(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_106(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_107(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_108(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_109(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_110(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_111(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_112(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_113(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_114(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_115(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_116(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_117(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_118(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_119(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_120(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_121(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_122(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_123(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_124(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_125(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_126(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_127(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_128(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_129(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_130(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_131(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_132(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_133(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_134(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_135(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_136(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_137(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_138(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_139(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_140(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_141(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_142(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_658_143(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[658]++;
  return utils::mkSpecialFixedWidth(children, 658);
}
Node rewrite_478_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_72(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_73(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_74(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_75(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_76(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_77(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_78(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_79(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_80(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_81(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_82(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_83(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_84(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_85(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_86(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_87(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_88(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_89(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_90(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_91(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_92(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_93(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_94(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_95(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_96(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_97(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_98(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_99(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_100(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_101(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_102(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_103(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_104(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_105(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_106(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_107(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_108(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_109(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_110(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_111(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_112(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_113(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_114(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_115(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_116(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_117(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_118(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_119(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_120(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_121(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_122(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_123(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_124(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_125(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_126(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_127(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_128(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_129(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_130(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_131(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_132(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_133(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_134(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_135(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_136(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_137(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_138(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_139(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_140(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_141(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_142(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_478_143(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[478]++;
  return utils::mkSpecialFixedWidth(children, 478);
}
Node rewrite_681_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_72(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_73(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_74(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_75(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_76(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_77(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_78(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_79(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_80(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_81(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_82(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_83(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_84(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_85(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_86(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_87(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_88(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_89(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_90(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_91(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_92(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_93(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_94(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_681_95(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[681]++;
  return utils::mkSpecialFixedWidth(children, 681);
}
Node rewrite_682_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_72(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_73(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_74(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_75(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_76(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_77(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_78(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_79(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_80(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_81(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_82(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_83(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_84(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_85(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_86(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_87(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_88(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_89(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_90(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_91(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_92(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_93(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_94(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_682_95(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[682]++;
  return utils::mkSpecialFixedWidth(children, 682);
}
Node rewrite_543_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_543_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[543]++;
  return utils::mkSpecialFixedWidth(children, 543);
}
Node rewrite_552_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_552_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[552]++;
  return utils::mkSpecialFixedWidth(children, 552);
}
Node rewrite_561_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_561_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[561]++;
  return utils::mkSpecialFixedWidth(children, 561);
}
Node rewrite_562_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_562_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[562]++;
  return utils::mkSpecialFixedWidth(children, 562);
}
Node rewrite_567_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_567_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[567]++;
  return utils::mkSpecialFixedWidth(children, 567);
}
Node rewrite_572_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_572_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[572]++;
  return utils::mkSpecialFixedWidth(children, 572);
}
Node rewrite_582_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_582_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[582]++;
  return utils::mkSpecialFixedWidth(children, 582);
}
Node rewrite_585_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_585_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[585]++;
  return utils::mkSpecialFixedWidth(children, 585);
}
Node rewrite_587_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_587_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[587]++;
  return utils::mkSpecialFixedWidth(children, 587);
}
Node rewrite_596_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_596_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[596]++;
  return utils::mkSpecialFixedWidth(children, 596);
}
Node rewrite_604_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_604_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[604]++;
  return utils::mkSpecialFixedWidth(children, 604);
}
Node rewrite_605_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_605_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[605]++;
  return utils::mkSpecialFixedWidth(children, 605);
}
Node rewrite_609_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_609_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[609]++;
  return utils::mkSpecialFixedWidth(children, 609);
}
Node rewrite_612_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_612_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[612]++;
  return utils::mkSpecialFixedWidth(children, 612);
}
Node rewrite_616_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_616_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[616]++;
  return utils::mkSpecialFixedWidth(children, 616);
}
Node rewrite_625_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_625_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[625]++;
  return utils::mkSpecialFixedWidth(children, 625);
}
Node rewrite_633_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_633_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[633]++;
  return utils::mkSpecialFixedWidth(children, 633);
}
Node rewrite_642_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_642_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[642]++;
  return utils::mkSpecialFixedWidth(children, 642);
}
Node rewrite_648_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][1]);
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0][1]);
  children.push_back(node[0][2][1][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0][1]);
  children.push_back(node[1][2][1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][1]);
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0][1]);
  children.push_back(node[0][2][1][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][1]);
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][1]);
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0][0]);
  children.push_back(node[0][2][1][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0][1]);
  children.push_back(node[1][2][1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][1]);
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0][0]);
  children.push_back(node[1][2][1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0][0]);
  children.push_back(node[0][2][1][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0][0]);
  children.push_back(node[1][2][1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][1]);
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][1]);
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][1]);
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_648_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[648]++;
  return utils::mkSpecialFixedWidth(children, 648);
}
Node rewrite_659_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_659_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[659]++;
  return utils::mkSpecialFixedWidth(children, 659);
}
Node rewrite_660_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_660_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[660]++;
  return utils::mkSpecialFixedWidth(children, 660);
}
Node rewrite_669_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_669_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[669]++;
  return utils::mkSpecialFixedWidth(children, 669);
}
Node rewrite_671_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_671_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[671]++;
  return utils::mkSpecialFixedWidth(children, 671);
}
Node rewrite_676_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_676_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[676]++;
  return utils::mkSpecialFixedWidth(children, 676);
}
Node rewrite_696_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2][0]);
  children.push_back(node[1][1][0][2][1]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2][0]);
  children.push_back(node[0][0][0][2][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2][1]);
  children.push_back(node[1][0][0][2][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2][1]);
  children.push_back(node[0][1][0][2][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_696_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[696]++;
  return utils::mkSpecialFixedWidth(children, 696);
}
Node rewrite_702_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1][0]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1][0]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1][0]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_702_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[702]++;
  return utils::mkSpecialFixedWidth(children, 702);
}
Node rewrite_538_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_538_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[538]++;
  return utils::mkSpecialFixedWidth(children, 538);
}
Node rewrite_540_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_540_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[540]++;
  return utils::mkSpecialFixedWidth(children, 540);
}
Node rewrite_541_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_541_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[541]++;
  return utils::mkSpecialFixedWidth(children, 541);
}
Node rewrite_548_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_548_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[548]++;
  return utils::mkSpecialFixedWidth(children, 548);
}
Node rewrite_549_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_549_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[549]++;
  return utils::mkSpecialFixedWidth(children, 549);
}
Node rewrite_551_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_551_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[551]++;
  return utils::mkSpecialFixedWidth(children, 551);
}
Node rewrite_558_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_558_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[558]++;
  return utils::mkSpecialFixedWidth(children, 558);
}
Node rewrite_569_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_569_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[569]++;
  return utils::mkSpecialFixedWidth(children, 569);
}
Node rewrite_570_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_570_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[570]++;
  return utils::mkSpecialFixedWidth(children, 570);
}
Node rewrite_576_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_576_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[576]++;
  return utils::mkSpecialFixedWidth(children, 576);
}
Node rewrite_581_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_581_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[581]++;
  return utils::mkSpecialFixedWidth(children, 581);
}
Node rewrite_594_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_594_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[594]++;
  return utils::mkSpecialFixedWidth(children, 594);
}
Node rewrite_595_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_595_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[595]++;
  return utils::mkSpecialFixedWidth(children, 595);
}
Node rewrite_606_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_606_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[606]++;
  return utils::mkSpecialFixedWidth(children, 606);
}
Node rewrite_615_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_615_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[615]++;
  return utils::mkSpecialFixedWidth(children, 615);
}
Node rewrite_618_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][1]);
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][1]);
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_618_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[618]++;
  return utils::mkSpecialFixedWidth(children, 618);
}
Node rewrite_619_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1][0]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1][0]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_619_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[619]++;
  return utils::mkSpecialFixedWidth(children, 619);
}
Node rewrite_627_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_627_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[627]++;
  return utils::mkSpecialFixedWidth(children, 627);
}
Node rewrite_631_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_631_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[631]++;
  return utils::mkSpecialFixedWidth(children, 631);
}
Node rewrite_634_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][2]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][2]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][2]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][2]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][2]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][2]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][2]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][2]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][2]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][2]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][2]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][2]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][2]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][2]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][2]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_634_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][2]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[634]++;
  return utils::mkSpecialFixedWidth(children, 634);
}
Node rewrite_636_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][1]);
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0][0]);
  children.push_back(node[0][1][1][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0][1]);
  children.push_back(node[1][1][1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_636_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[636]++;
  return utils::mkSpecialFixedWidth(children, 636);
}
Node rewrite_641_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_641_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[641]++;
  return utils::mkSpecialFixedWidth(children, 641);
}
Node rewrite_644_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1][0]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1][0]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_644_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[644]++;
  return utils::mkSpecialFixedWidth(children, 644);
}
Node rewrite_651_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2][0][1]);
  children.push_back(node[1][0][2][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2][0][0]);
  children.push_back(node[1][0][2][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2][0][0]);
  children.push_back(node[0][0][2][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2][0][1]);
  children.push_back(node[1][0][2][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2][0][1]);
  children.push_back(node[0][0][2][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2][0][1]);
  children.push_back(node[0][0][2][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2][0][0]);
  children.push_back(node[1][0][2][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0][1]);
  children.push_back(node[0][0][1][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2][0][0]);
  children.push_back(node[0][0][2][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0][0]);
  children.push_back(node[1][0][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_651_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[651]++;
  return utils::mkSpecialFixedWidth(children, 651);
}
Node rewrite_653_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_653_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[653]++;
  return utils::mkSpecialFixedWidth(children, 653);
}
Node rewrite_654_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][1]);
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][1]);
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][1]);
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][1][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][1]);
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][0][1]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][0][1]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_654_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[654]++;
  return utils::mkSpecialFixedWidth(children, 654);
}
Node rewrite_413_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_413_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[413]++;
  return utils::mkSpecialFixedWidth(children, 413);
}
Node rewrite_427_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][1]);
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_427_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[427]++;
  return utils::mkSpecialFixedWidth(children, 427);
}
Node rewrite_450_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][2]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][2]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_450_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[450]++;
  return utils::mkSpecialFixedWidth(children, 450);
}
Node rewrite_460_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][2]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_460_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[460]++;
  return utils::mkSpecialFixedWidth(children, 460);
}
Node rewrite_475_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_475_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[475]++;
  return utils::mkSpecialFixedWidth(children, 475);
}
Node rewrite_501_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_501_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[501]++;
  return utils::mkSpecialFixedWidth(children, 501);
}
Node rewrite_506_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_506_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[506]++;
  return utils::mkSpecialFixedWidth(children, 506);
}
Node rewrite_507_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_507_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[507]++;
  return utils::mkSpecialFixedWidth(children, 507);
}
Node rewrite_509_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_509_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[509]++;
  return utils::mkSpecialFixedWidth(children, 509);
}
Node rewrite_510_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0][0]);
  children.push_back(node[2][2][0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0][0]);
  children.push_back(node[2][1][0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0][1]);
  children.push_back(node[2][0][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_510_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[510]++;
  return utils::mkSpecialFixedWidth(children, 510);
}
Node rewrite_517_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_517_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[517]++;
  return utils::mkSpecialFixedWidth(children, 517);
}
Node rewrite_519_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_519_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[519]++;
  return utils::mkSpecialFixedWidth(children, 519);
}
Node rewrite_525_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_525_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[525]++;
  return utils::mkSpecialFixedWidth(children, 525);
}
Node rewrite_532_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_532_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[532]++;
  return utils::mkSpecialFixedWidth(children, 532);
}
Node rewrite_553_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_553_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[553]++;
  return utils::mkSpecialFixedWidth(children, 553);
}
Node rewrite_555_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_555_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[555]++;
  return utils::mkSpecialFixedWidth(children, 555);
}
Node rewrite_590_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_590_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[590]++;
  return utils::mkSpecialFixedWidth(children, 590);
}
Node rewrite_591_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_591_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[591]++;
  return utils::mkSpecialFixedWidth(children, 591);
}
Node rewrite_592_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_592_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[592]++;
  return utils::mkSpecialFixedWidth(children, 592);
}
Node rewrite_610_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_610_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[610]++;
  return utils::mkSpecialFixedWidth(children, 610);
}
Node rewrite_624_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_624_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[624]++;
  return utils::mkSpecialFixedWidth(children, 624);
}
Node rewrite_630_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_630_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[630]++;
  return utils::mkSpecialFixedWidth(children, 630);
}
Node rewrite_632_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1][0]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1][0]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1][0]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_632_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1][0]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[632]++;
  return utils::mkSpecialFixedWidth(children, 632);
}
Node rewrite_667_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_667_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[667]++;
  return utils::mkSpecialFixedWidth(children, 667);
}
Node rewrite_693_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_693_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[693]++;
  return utils::mkSpecialFixedWidth(children, 693);
}
Node rewrite_374_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_374_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[374]++;
  return utils::mkSpecialFixedWidth(children, 374);
}
Node rewrite_388_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_388_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[388]++;
  return utils::mkSpecialFixedWidth(children, 388);
}
Node rewrite_392_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][1]);
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_392_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[392]++;
  return utils::mkSpecialFixedWidth(children, 392);
}
Node rewrite_399_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_399_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[399]++;
  return utils::mkSpecialFixedWidth(children, 399);
}
Node rewrite_407_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_407_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[407]++;
  return utils::mkSpecialFixedWidth(children, 407);
}
Node rewrite_416_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_416_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[416]++;
  return utils::mkSpecialFixedWidth(children, 416);
}
Node rewrite_419_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_419_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[419]++;
  return utils::mkSpecialFixedWidth(children, 419);
}
Node rewrite_437_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_437_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[437]++;
  return utils::mkSpecialFixedWidth(children, 437);
}
Node rewrite_439_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][2]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][2]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_439_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][2]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[439]++;
  return utils::mkSpecialFixedWidth(children, 439);
}
Node rewrite_456_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0][1]);
  children.push_back(node[0][2][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0][0]);
  children.push_back(node[1][2][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_456_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[456]++;
  return utils::mkSpecialFixedWidth(children, 456);
}
Node rewrite_482_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_482_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[482]++;
  return utils::mkSpecialFixedWidth(children, 482);
}
Node rewrite_505_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_505_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[505]++;
  return utils::mkSpecialFixedWidth(children, 505);
}
Node rewrite_597_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[597]++;
  return utils::mkSpecialFixedWidth(children, 597);
}
Node rewrite_597_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[597]++;
  return utils::mkSpecialFixedWidth(children, 597);
}
Node rewrite_597_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[597]++;
  return utils::mkSpecialFixedWidth(children, 597);
}
Node rewrite_597_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[597]++;
  return utils::mkSpecialFixedWidth(children, 597);
}
Node rewrite_376_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_376_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[376]++;
  return utils::mkSpecialFixedWidth(children, 376);
}
Node rewrite_377_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_377_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[377]++;
  return utils::mkSpecialFixedWidth(children, 377);
}
Node rewrite_395_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_395_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[395]++;
  return utils::mkSpecialFixedWidth(children, 395);
}
Node rewrite_403_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_403_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[403]++;
  return utils::mkSpecialFixedWidth(children, 403);
}
Node rewrite_410_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_410_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[410]++;
  return utils::mkSpecialFixedWidth(children, 410);
}
Node rewrite_438_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_438_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[438]++;
  return utils::mkSpecialFixedWidth(children, 438);
}
Node rewrite_443_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_443_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[443]++;
  return utils::mkSpecialFixedWidth(children, 443);
}
Node rewrite_447_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][1]);
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][1][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_447_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[447]++;
  return utils::mkSpecialFixedWidth(children, 447);
}
Node rewrite_451_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_36(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_37(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_38(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_39(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_40(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_41(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_42(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_43(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_44(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_45(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_46(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_47(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_48(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_49(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_50(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_51(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_52(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_53(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_54(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_55(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_56(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_57(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_58(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_59(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_60(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_61(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_62(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_63(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_64(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_65(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_66(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_67(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_68(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_69(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_70(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_451_71(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[451]++;
  return utils::mkSpecialFixedWidth(children, 451);
}
Node rewrite_464_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_464_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[464]++;
  return utils::mkSpecialFixedWidth(children, 464);
}
Node rewrite_465_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0][1]);
  children.push_back(node[0][1][0][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0][1]);
  children.push_back(node[1][1][0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][1]);
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_465_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][1]);
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[465]++;
  return utils::mkSpecialFixedWidth(children, 465);
}
Node rewrite_477_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_477_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[477]++;
  return utils::mkSpecialFixedWidth(children, 477);
}
Node rewrite_367_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_367_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[367]++;
  return utils::mkSpecialFixedWidth(children, 367);
}
Node rewrite_387_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[387]++;
  return utils::mkSpecialFixedWidth(children, 387);
}
Node rewrite_387_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[387]++;
  return utils::mkSpecialFixedWidth(children, 387);
}
Node rewrite_387_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[387]++;
  return utils::mkSpecialFixedWidth(children, 387);
}
Node rewrite_387_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[387]++;
  return utils::mkSpecialFixedWidth(children, 387);
}
Node rewrite_411_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[411]++;
  return utils::mkSpecialFixedWidth(children, 411);
}
Node rewrite_411_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[411]++;
  return utils::mkSpecialFixedWidth(children, 411);
}
Node rewrite_411_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[411]++;
  return utils::mkSpecialFixedWidth(children, 411);
}
Node rewrite_411_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[411]++;
  return utils::mkSpecialFixedWidth(children, 411);
}
Node rewrite_444_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1][0]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[444]++;
  return utils::mkSpecialFixedWidth(children, 444);
}
Node rewrite_444_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[444]++;
  return utils::mkSpecialFixedWidth(children, 444);
}
Node rewrite_444_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[444]++;
  return utils::mkSpecialFixedWidth(children, 444);
}
Node rewrite_444_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1][0]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[444]++;
  return utils::mkSpecialFixedWidth(children, 444);
}
Node rewrite_471_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_471_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[471]++;
  return utils::mkSpecialFixedWidth(children, 471);
}
Node rewrite_476_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_476_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[476]++;
  return utils::mkSpecialFixedWidth(children, 476);
}
Node rewrite_488_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_488_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[488]++;
  return utils::mkSpecialFixedWidth(children, 488);
}
Node rewrite_500_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][1]);
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][1]);
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_500_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[500]++;
  return utils::mkSpecialFixedWidth(children, 500);
}
Node rewrite_512_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][2]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_512_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][2]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[512]++;
  return utils::mkSpecialFixedWidth(children, 512);
}
Node rewrite_526_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_526_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[526]++;
  return utils::mkSpecialFixedWidth(children, 526);
}
Node rewrite_369_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_369_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1][0]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[369]++;
  return utils::mkSpecialFixedWidth(children, 369);
}
Node rewrite_371_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_371_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[371]++;
  return utils::mkSpecialFixedWidth(children, 371);
}
Node rewrite_400_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_400_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[400]++;
  return utils::mkSpecialFixedWidth(children, 400);
}
Node rewrite_430_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_430_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[430]++;
  return utils::mkSpecialFixedWidth(children, 430);
}
Node rewrite_440_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][1]);
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][1]);
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][1][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_440_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[440]++;
  return utils::mkSpecialFixedWidth(children, 440);
}
Node rewrite_462_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_462_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][2]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[462]++;
  return utils::mkSpecialFixedWidth(children, 462);
}
Node rewrite_372_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1][0]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[372]++;
  return utils::mkSpecialFixedWidth(children, 372);
}
Node rewrite_372_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1][0]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[372]++;
  return utils::mkSpecialFixedWidth(children, 372);
}
Node rewrite_372_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[372]++;
  return utils::mkSpecialFixedWidth(children, 372);
}
Node rewrite_372_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[372]++;
  return utils::mkSpecialFixedWidth(children, 372);
}
Node rewrite_405_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[405]++;
  return utils::mkSpecialFixedWidth(children, 405);
}
Node rewrite_405_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[405]++;
  return utils::mkSpecialFixedWidth(children, 405);
}
Node rewrite_405_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[405]++;
  return utils::mkSpecialFixedWidth(children, 405);
}
Node rewrite_405_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1][0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[405]++;
  return utils::mkSpecialFixedWidth(children, 405);
}
Node rewrite_415_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][0]);
  children.push_back(node[0][0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[415]++;
  return utils::mkSpecialFixedWidth(children, 415);
}
Node rewrite_415_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0][1]);
  children.push_back(node[0][0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[415]++;
  return utils::mkSpecialFixedWidth(children, 415);
}
Node rewrite_415_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][1]);
  children.push_back(node[1][0][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[415]++;
  return utils::mkSpecialFixedWidth(children, 415);
}
Node rewrite_415_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0][0]);
  children.push_back(node[1][0][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[415]++;
  return utils::mkSpecialFixedWidth(children, 415);
}
Node rewrite_463_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_12(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_13(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_14(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_15(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_16(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_17(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_18(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_19(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_20(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_21(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_22(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_23(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_24(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_25(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_26(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_27(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_28(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_29(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][2]);
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_30(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_31(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[2][2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_32(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_33(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_34(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_463_35(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[463]++;
  return utils::mkSpecialFixedWidth(children, 463);
}
Node rewrite_370_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][1]);
  children.push_back(node[2][0]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[2][0]);
  children.push_back(node[2][1]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_370_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[370]++;
  return utils::mkSpecialFixedWidth(children, 370);
}
Node rewrite_442_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][2]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_6(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[0][2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_7(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[1][2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_8(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_9(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_10(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][2]);
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_442_11(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][2]);
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[442]++;
  return utils::mkSpecialFixedWidth(children, 442);
}
Node rewrite_375_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[1][1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[375]++;
  return utils::mkSpecialFixedWidth(children, 375);
}
Node rewrite_375_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][1]);
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[375]++;
  return utils::mkSpecialFixedWidth(children, 375);
}
Node rewrite_375_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][1]);
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[375]++;
  return utils::mkSpecialFixedWidth(children, 375);
}
Node rewrite_375_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[0][1]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[375]++;
  return utils::mkSpecialFixedWidth(children, 375);
}
Node rewrite_394_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1][0]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[394]++;
  return utils::mkSpecialFixedWidth(children, 394);
}
Node rewrite_394_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0][0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[394]++;
  return utils::mkSpecialFixedWidth(children, 394);
}
Node rewrite_534_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[534]++;
  return utils::mkSpecialFixedWidth(children, 534);
}
Node rewrite_534_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[534]++;
  return utils::mkSpecialFixedWidth(children, 534);
}
Node rewrite_534_2(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[2]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[534]++;
  return utils::mkSpecialFixedWidth(children, 534);
}
Node rewrite_534_3(Node node) {
  std::vector<Node> children;
  children.push_back(node[2]);
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[534]++;
  return utils::mkSpecialFixedWidth(children, 534);
}
Node rewrite_534_4(Node node) {
  std::vector<Node> children;
  children.push_back(node[0]);
  children.push_back(node[2]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[534]++;
  return utils::mkSpecialFixedWidth(children, 534);
}
Node rewrite_534_5(Node node) {
  std::vector<Node> children;
  children.push_back(node[0]);
  children.push_back(node[1]);
  children.push_back(node[2]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[534]++;
  return utils::mkSpecialFixedWidth(children, 534);
}
Node rewrite_704_0(Node node) {
  std::vector<Node> children;
  children.push_back(node[1]);
  children.push_back(node[0]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[704]++;
  return utils::mkSpecialFixedWidth(children, 704);
}
Node rewrite_704_1(Node node) {
  std::vector<Node> children;
  children.push_back(node[0]);
  children.push_back(node[1]);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[704]++;
  return utils::mkSpecialFixedWidth(children, 704);
}
Node rewrite_704(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][1] == node[2][1][0][0] && predicates[90] && node[0][0][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_0(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && predicates[128] && node[1][1][0][1] == node[2][0] && predicates[77] && node[1][1][0][0][0] == node[2][1][0]) {
    return rewrite_658_1(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][0] == node[2][1][0][0] && predicates[90] && node[1][1][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_2(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && predicates[117] && predicates[159] && node[0][0][0][1][0] == node[1][0][0] && node[0][0][0][0] == node[1][1] && true) {
    return rewrite_658_3(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && predicates[128] && node[1][2][0][1] == node[2][0] && predicates[77] && node[1][2][0][0][0] == node[2][1][0]) {
    return rewrite_658_4(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && predicates[117] && node[0][1][0][1] == node[1][0] && predicates[25] && node[0][1][0][0][0] == node[1][1][0] && true) {
    return rewrite_658_5(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && predicates[117] && node[0][0][0][0] == node[1][0] && predicates[25] && node[0][0][0][1][0] == node[1][1][0] && true) {
    return rewrite_658_6(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && predicates[128] && predicates[144] && node[1][0][0][1][0] == node[2][0][0] && node[1][0][0][0] == node[2][1]) {
    return rewrite_658_7(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[1][0][0] == node[2][0][0][0][0] && node[1][1] == node[2][0][0][1] && true && true) {
    return rewrite_658_8(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && predicates[128] && predicates[144] && node[1][1][0][0][0] == node[2][0][0] && node[1][1][0][1] == node[2][1]) {
    return rewrite_658_9(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][0] == node[1][1][0][0] && predicates[115] && node[0][1][0] == node[1][1][0][1][0] && true && true) {
    return rewrite_658_10(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][0] == node[1][2][0][0] && predicates[88] && node[0][1][0] == node[1][2][0][1][0] && true) {
    return rewrite_658_11(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][1] == node[2][1][0][0] && predicates[90] && node[0][0][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_12(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && predicates[128] && node[0][1][0][1] == node[2][0] && predicates[77] && node[0][1][0][0][0] == node[2][1][0]) {
    return rewrite_658_13(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[1][1][0] == node[2][0][0][0][0] && node[1][0] == node[2][0][0][1] && true && true) {
    return rewrite_658_14(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && predicates[117] && node[0][0][0][1] == node[1][0] && predicates[25] && node[0][0][0][0][0] == node[1][1][0] && true) {
    return rewrite_658_15(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[0][1][0] == node[2][2][0][0][0] && node[0][0] == node[2][2][0][1]) {
    return rewrite_658_16(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && predicates[117] && node[0][1][0][1] == node[1][0] && predicates[25] && node[0][1][0][0][0] == node[1][1][0] && true) {
    return rewrite_658_17(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[1][1][0] == node[2][1][0][0][0] && node[1][0] == node[2][1][0][1] && true) {
    return rewrite_658_18(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && predicates[128] && node[1][2][0][1] == node[2][0] && predicates[77] && node[1][2][0][0][0] == node[2][1][0]) {
    return rewrite_658_19(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && predicates[128] && node[0][1][0][1] == node[2][0] && predicates[77] && node[0][1][0][0][0] == node[2][1][0]) {
    return rewrite_658_20(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && predicates[128] && node[1][1][0][1] == node[2][0] && predicates[77] && node[1][1][0][0][0] == node[2][1][0]) {
    return rewrite_658_21(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && predicates[159] && predicates[137] && node[0][0] == node[1][0][0][0] && predicates[68] && node[0][1][0] == node[1][0][0][1][0] && true && true && true) {
    return rewrite_658_22(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && predicates[128] && predicates[144] && node[1][0][0][0][0] == node[2][0][0] && node[1][0][0][1] == node[2][1]) {
    return rewrite_658_23(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][1] == node[2][0][0][0] && predicates[125] && node[1][0][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_24(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && node[0][0][0] == node[1][1][0][0][0] && node[0][1] == node[1][1][0][1] && true && true) {
    return rewrite_658_25(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[1][1][0] == node[2][2][0][0][0] && node[1][0] == node[2][2][0][1]) {
    return rewrite_658_26(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[0][0][0] == node[2][1][0][0][0] && node[0][1] == node[2][1][0][1] && true) {
    return rewrite_658_27(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && predicates[128] && node[1][2][0][0] == node[2][0] && predicates[77] && node[1][2][0][1][0] == node[2][1][0]) {
    return rewrite_658_28(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && predicates[117] && node[0][0][0][1] == node[1][0] && predicates[25] && node[0][0][0][0][0] == node[1][1][0] && true) {
    return rewrite_658_29(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[1][0][0] == node[2][0][0][0][0] && node[1][1] == node[2][0][0][1] && true && true) {
    return rewrite_658_30(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && predicates[117] && predicates[159] && node[0][2][0][0][0] == node[1][0][0] && node[0][2][0][1] == node[1][1] && true) {
    return rewrite_658_31(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][0] == node[2][0][0][0] && predicates[125] && node[0][1][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_32(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && predicates[117] && node[0][2][0][0] == node[1][0] && predicates[25] && node[0][2][0][1][0] == node[1][1][0] && true) {
    return rewrite_658_33(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && predicates[159] && predicates[137] && node[0][0] == node[1][0][0][0] && predicates[68] && node[0][1][0] == node[1][0][0][1][0] && true && true && true) {
    return rewrite_658_34(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && predicates[117] && predicates[159] && node[0][2][0][1][0] == node[1][0][0] && node[0][2][0][0] == node[1][1] && true) {
    return rewrite_658_35(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][0] == node[2][1][0][0] && predicates[90] && node[1][1][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_36(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[0][1][0] == node[2][2][0][0][0] && node[0][0] == node[2][2][0][1]) {
    return rewrite_658_37(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && predicates[128] && node[0][2][0][1] == node[2][0] && predicates[77] && node[0][2][0][0][0] == node[2][1][0]) {
    return rewrite_658_38(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && node[0][0][0] == node[1][2][0][0][0] && node[0][1] == node[1][2][0][1] && true) {
    return rewrite_658_39(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && predicates[144] && predicates[106] && node[1][0] == node[2][0][0][0] && predicates[125] && node[1][1][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_40(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][1] == node[2][2][0][0] && predicates[19] && node[1][0][0] == node[2][2][0][1][0]) {
    return rewrite_658_41(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && predicates[117] && predicates[159] && node[0][0][0][0][0] == node[1][0][0] && node[0][0][0][1] == node[1][1] && true) {
    return rewrite_658_42(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && predicates[117] && node[0][1][0][0] == node[1][0] && predicates[25] && node[0][1][0][1][0] == node[1][1][0] && true) {
    return rewrite_658_43(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && predicates[117] && node[0][2][0][0] == node[1][0] && predicates[25] && node[0][2][0][1][0] == node[1][1][0] && true) {
    return rewrite_658_44(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[1][0][0] == node[2][1][0][0][0] && node[1][1] == node[2][1][0][1] && true) {
    return rewrite_658_45(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][0] == node[1][2][0][0] && predicates[88] && node[0][1][0] == node[1][2][0][1][0] && true) {
    return rewrite_658_46(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][0] == node[1][1][0][0] && predicates[115] && node[0][1][0] == node[1][1][0][1][0] && true && true) {
    return rewrite_658_47(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && predicates[128] && predicates[144] && node[0][2][0][0][0] == node[2][0][0] && node[0][2][0][1] == node[2][1]) {
    return rewrite_658_48(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && predicates[128] && predicates[144] && node[1][0][0][1][0] == node[2][0][0] && node[1][0][0][0] == node[2][1]) {
    return rewrite_658_49(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][1] == node[1][1][0][0] && predicates[115] && node[0][0][0] == node[1][1][0][1][0] && true && true) {
    return rewrite_658_50(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && predicates[128] && node[0][1][0][0] == node[2][0] && predicates[77] && node[0][1][0][1][0] == node[2][1][0]) {
    return rewrite_658_51(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && node[0][1][0] == node[1][1][0][0][0] && node[0][0] == node[1][1][0][1] && true && true) {
    return rewrite_658_52(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][1] == node[2][0][0][0] && predicates[125] && node[0][0][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_53(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && predicates[128] && predicates[144] && node[0][2][0][0][0] == node[2][0][0] && node[0][2][0][1] == node[2][1]) {
    return rewrite_658_54(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && predicates[128] && predicates[144] && node[1][1][0][0][0] == node[2][0][0] && node[1][1][0][1] == node[2][1]) {
    return rewrite_658_55(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && predicates[128] && node[1][0][0][0] == node[2][0] && predicates[77] && node[1][0][0][1][0] == node[2][1][0]) {
    return rewrite_658_56(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && node[0][0][0] == node[1][0][0][0][0] && node[0][1] == node[1][0][0][1] && true && true && true) {
    return rewrite_658_57(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && predicates[128] && node[1][0][0][0] == node[2][0] && predicates[77] && node[1][0][0][1][0] == node[2][1][0]) {
    return rewrite_658_58(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && predicates[128] && node[1][1][0][0] == node[2][0] && predicates[77] && node[1][1][0][1][0] == node[2][1][0]) {
    return rewrite_658_59(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[1][1][0] == node[2][2][0][0][0] && node[1][0] == node[2][2][0][1]) {
    return rewrite_658_60(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][1] == node[2][0][0][0] && predicates[125] && node[1][0][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_61(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && predicates[128] && predicates[144] && node[0][0][0][1][0] == node[2][0][0] && node[0][0][0][0] == node[2][1]) {
    return rewrite_658_62(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[0][0][0] == node[2][0][0][0][0] && node[0][1] == node[2][0][0][1] && true && true) {
    return rewrite_658_63(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][1] == node[1][0][0][0] && predicates[68] && node[0][0][0] == node[1][0][0][1][0] && true && true && true) {
    return rewrite_658_64(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && node[0][1][0] == node[1][0][0][0][0] && node[0][0] == node[1][0][0][1] && true && true && true) {
    return rewrite_658_65(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][0] == node[2][2][0][0] && predicates[19] && node[1][1][0] == node[2][2][0][1][0]) {
    return rewrite_658_66(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && predicates[117] && node[0][0][0][0] == node[1][0] && predicates[25] && node[0][0][0][1][0] == node[1][1][0] && true) {
    return rewrite_658_67(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && predicates[117] && predicates[159] && node[0][1][0][1][0] == node[1][0][0] && node[0][1][0][0] == node[1][1] && true) {
    return rewrite_658_68(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && predicates[128] && node[0][2][0][1] == node[2][0] && predicates[77] && node[0][2][0][0][0] == node[2][1][0]) {
    return rewrite_658_69(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && predicates[128] && predicates[144] && node[1][2][0][0][0] == node[2][0][0] && node[1][2][0][1] == node[2][1]) {
    return rewrite_658_70(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][1] == node[2][2][0][0] && predicates[19] && node[1][0][0] == node[2][2][0][1][0]) {
    return rewrite_658_71(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && predicates[128] && node[0][0][0][0] == node[2][0] && predicates[77] && node[0][0][0][1][0] == node[2][1][0]) {
    return rewrite_658_72(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[0][0][0] == node[2][2][0][0][0] && node[0][1] == node[2][2][0][1]) {
    return rewrite_658_73(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && predicates[117] && predicates[159] && node[0][1][0][0][0] == node[1][0][0] && node[0][1][0][1] == node[1][1] && true) {
    return rewrite_658_74(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && predicates[128] && node[1][0][0][1] == node[2][0] && predicates[77] && node[1][0][0][0][0] == node[2][1][0]) {
    return rewrite_658_75(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && predicates[128] && predicates[144] && node[1][2][0][1][0] == node[2][0][0] && node[1][2][0][0] == node[2][1]) {
    return rewrite_658_76(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && predicates[128] && node[0][0][0][0] == node[2][0] && predicates[77] && node[0][0][0][1][0] == node[2][1][0]) {
    return rewrite_658_77(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && predicates[117] && predicates[159] && node[0][2][0][1][0] == node[1][0][0] && node[0][2][0][0] == node[1][1] && true) {
    return rewrite_658_78(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && predicates[117] && predicates[159] && node[0][0][0][1][0] == node[1][0][0] && node[0][0][0][0] == node[1][1] && true) {
    return rewrite_658_79(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && predicates[128] && predicates[144] && node[0][1][0][0][0] == node[2][0][0] && node[0][1][0][1] == node[2][1]) {
    return rewrite_658_80(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && predicates[117] && predicates[159] && node[0][1][0][0][0] == node[1][0][0] && node[0][1][0][1] == node[1][1] && true) {
    return rewrite_658_81(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && node[0][1][0] == node[1][0][0][0][0] && node[0][0] == node[1][0][0][1] && true && true && true) {
    return rewrite_658_82(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && predicates[128] && predicates[144] && node[1][0][0][0][0] == node[2][0][0] && node[1][0][0][1] == node[2][1]) {
    return rewrite_658_83(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][0] == node[2][1][0][0] && predicates[90] && node[0][1][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_84(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][1] == node[1][2][0][0] && predicates[88] && node[0][0][0] == node[1][2][0][1][0] && true) {
    return rewrite_658_85(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][1] == node[2][2][0][0] && predicates[19] && node[0][0][0] == node[2][2][0][1][0]) {
    return rewrite_658_86(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[1][1][0] == node[2][1][0][0][0] && node[1][0] == node[2][1][0][1] && true) {
    return rewrite_658_87(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && predicates[128] && node[0][2][0][0] == node[2][0] && predicates[77] && node[0][2][0][1][0] == node[2][1][0]) {
    return rewrite_658_88(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && predicates[117] && predicates[159] && node[0][0][0][0][0] == node[1][0][0] && node[0][0][0][1] == node[1][1] && true) {
    return rewrite_658_89(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && predicates[128] && predicates[144] && node[0][0][0][0][0] == node[2][0][0] && node[0][0][0][1] == node[2][1]) {
    return rewrite_658_90(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][1] == node[1][0][0][0] && predicates[68] && node[0][0][0] == node[1][0][0][1][0] && true && true && true) {
    return rewrite_658_91(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && predicates[128] && node[0][0][0][1] == node[2][0] && predicates[77] && node[0][0][0][0][0] == node[2][1][0]) {
    return rewrite_658_92(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[0][1][0] == node[2][0][0][0][0] && node[0][0] == node[2][0][0][1] && true && true) {
    return rewrite_658_93(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[0][0][0] == node[2][0][0][0][0] && node[0][1] == node[2][0][0][1] && true && true) {
    return rewrite_658_94(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[1][0][0] == node[2][2][0][0][0] && node[1][1] == node[2][2][0][1]) {
    return rewrite_658_95(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && node[0][0][0] == node[1][0][0][0][0] && node[0][1] == node[1][0][0][1] && true && true && true) {
    return rewrite_658_96(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][1] == node[1][2][0][0] && predicates[88] && node[0][0][0] == node[1][2][0][1][0] && true) {
    return rewrite_658_97(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[1][0][0] == node[2][2][0][0][0] && node[1][1] == node[2][2][0][1]) {
    return rewrite_658_98(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && predicates[128] && predicates[144] && node[0][2][0][1][0] == node[2][0][0] && node[0][2][0][0] == node[2][1]) {
    return rewrite_658_99(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && predicates[128] && node[0][1][0][0] == node[2][0] && predicates[77] && node[0][1][0][1][0] == node[2][1][0]) {
    return rewrite_658_100(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && predicates[128] && node[1][0][0][1] == node[2][0] && predicates[77] && node[1][0][0][0][0] == node[2][1][0]) {
    return rewrite_658_101(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][1] == node[1][1][0][0] && predicates[115] && node[0][0][0] == node[1][1][0][1][0] && true && true) {
    return rewrite_658_102(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[1][0][0] == node[2][1][0][0][0] && node[1][1] == node[2][1][0][1] && true) {
    return rewrite_658_103(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][0] == node[2][2][0][0] && predicates[19] && node[0][1][0] == node[2][2][0][1][0]) {
    return rewrite_658_104(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && node[0][1][0] == node[1][1][0][0][0] && node[0][0] == node[1][1][0][1] && true && true) {
    return rewrite_658_105(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && predicates[128] && predicates[144] && node[0][1][0][1][0] == node[2][0][0] && node[0][1][0][0] == node[2][1]) {
    return rewrite_658_106(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[0][0][0] == node[2][1][0][0][0] && node[0][1] == node[2][1][0][1] && true) {
    return rewrite_658_107(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && node[0][0][0] == node[2][2][0][0][0] && node[0][1] == node[2][2][0][1]) {
    return rewrite_658_108(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && predicates[117] && predicates[159] && node[0][1][0][1][0] == node[1][0][0] && node[0][1][0][0] == node[1][1] && true) {
    return rewrite_658_109(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[0][1][0] == node[2][1][0][0][0] && node[0][0] == node[2][1][0][1] && true) {
    return rewrite_658_110(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && node[0][1][0] == node[1][2][0][0][0] && node[0][0] == node[1][2][0][1] && true) {
    return rewrite_658_111(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][0] == node[2][2][0][0] && predicates[19] && node[0][1][0] == node[2][2][0][1][0]) {
    return rewrite_658_112(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && predicates[128] && predicates[144] && node[0][0][0][0][0] == node[2][0][0] && node[0][0][0][1] == node[2][1]) {
    return rewrite_658_113(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && predicates[128] && predicates[144] && node[0][1][0][0][0] == node[2][0][0] && node[0][1][0][1] == node[2][1]) {
    return rewrite_658_114(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && predicates[128] && predicates[144] && node[0][2][0][1][0] == node[2][0][0] && node[0][2][0][0] == node[2][1]) {
    return rewrite_658_115(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && predicates[117] && predicates[159] && node[0][2][0][0][0] == node[1][0][0] && node[0][2][0][1] == node[1][1] && true) {
    return rewrite_658_116(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][0] == node[2][0][0][0] && predicates[125] && node[0][1][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_117(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && predicates[128] && predicates[144] && node[0][1][0][1][0] == node[2][0][0] && node[0][1][0][0] == node[2][1]) {
    return rewrite_658_118(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && predicates[128] && node[0][0][0][1] == node[2][0] && predicates[77] && node[0][0][0][0][0] == node[2][1][0]) {
    return rewrite_658_119(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && predicates[128] && node[0][2][0][0] == node[2][0] && predicates[77] && node[0][2][0][1][0] == node[2][1][0]) {
    return rewrite_658_120(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][1] == node[2][0][0][0] && predicates[125] && node[0][0][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_121(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[0][1][0] == node[2][0][0][0][0] && node[0][0] == node[2][0][0][1] && true && true) {
    return rewrite_658_122(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && predicates[128] && predicates[144] && node[0][0][0][1][0] == node[2][0][0] && node[0][0][0][0] == node[2][1]) {
    return rewrite_658_123(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][0] == node[2][1][0][0] && predicates[90] && node[0][1][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_124(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && node[0][0][0] == node[1][2][0][0][0] && node[0][1] == node[1][2][0][1] && true) {
    return rewrite_658_125(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][1] == node[2][2][0][0] && predicates[19] && node[0][0][0] == node[2][2][0][1][0]) {
    return rewrite_658_126(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && predicates[128] && predicates[144] && node[1][2][0][0][0] == node[2][0][0] && node[1][2][0][1] == node[2][1]) {
    return rewrite_658_127(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && node[0][0][0] == node[1][1][0][0][0] && node[0][1] == node[1][1][0][1] && true && true) {
    return rewrite_658_128(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && predicates[117] && node[0][2][0][1] == node[1][0] && predicates[25] && node[0][2][0][0][0] == node[1][1][0] && true) {
    return rewrite_658_129(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && predicates[117] && node[0][1][0][0] == node[1][0] && predicates[25] && node[0][1][0][1][0] == node[1][1][0] && true) {
    return rewrite_658_130(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && node[1][1][0] == node[2][0][0][0][0] && node[1][0] == node[2][0][0][1] && true && true) {
    return rewrite_658_131(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][1] == node[2][1][0][0] && predicates[90] && node[1][0][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_132(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && predicates[128] && predicates[144] && node[1][2][0][1][0] == node[2][0][0] && node[1][2][0][0] == node[2][1]) {
    return rewrite_658_133(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && predicates[128] && node[1][1][0][0] == node[2][0] && predicates[77] && node[1][1][0][1][0] == node[2][1][0]) {
    return rewrite_658_134(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][0] == node[2][2][0][0] && predicates[19] && node[1][1][0] == node[2][2][0][1][0]) {
    return rewrite_658_135(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][1] == node[2][1][0][0] && predicates[90] && node[1][0][0] == node[2][1][0][1][0] && true) {
    return rewrite_658_136(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && predicates[128] && predicates[144] && node[1][1][0][1][0] == node[2][0][0] && node[1][1][0][0] == node[2][1]) {
    return rewrite_658_137(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && node[0][1][0] == node[2][1][0][0][0] && node[0][0] == node[2][1][0][1] && true) {
    return rewrite_658_138(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && predicates[117] && node[0][2][0][1] == node[1][0] && predicates[25] && node[0][2][0][0][0] == node[1][1][0] && true) {
    return rewrite_658_139(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && node[0][1][0] == node[1][2][0][0][0] && node[0][0] == node[1][2][0][1] && true) {
    return rewrite_658_140(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && predicates[128] && predicates[144] && node[1][1][0][1][0] == node[2][0][0] && node[1][1][0][0] == node[2][1]) {
    return rewrite_658_141(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && predicates[128] && node[1][2][0][0] == node[2][0] && predicates[77] && node[1][2][0][1][0] == node[2][1][0]) {
    return rewrite_658_142(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && predicates[144] && predicates[106] && node[1][0] == node[2][0][0][0] && predicates[125] && node[1][1][0] == node[2][0][0][1][0] && true && true) {
    return rewrite_658_143(node);
  }
  else {
    return node;
  }
}
Node rewrite_658(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][0] == node[2][1][0][0] && node[0][1] == node[2][1][0][1] && true) {
    return rewrite_478_0(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][1] == node[1][0] && node[0][2][0][0] == node[1][1] && true) {
    return rewrite_478_1(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][1] == node[2][2][0][0] && node[1][0] == node[2][2][0][1]) {
    return rewrite_478_2(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][1] == node[1][2][0][0] && node[0][0] == node[1][2][0][1] && true) {
    return rewrite_478_3(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][1] == node[2][0] && node[0][0][0][0] == node[2][1]) {
    return rewrite_478_4(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][1] == node[2][0][0][0] && node[1][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_5(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][1] == node[2][0] && node[0][1][0][0] == node[2][1]) {
    return rewrite_478_6(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][0] == node[2][1][0][0] && node[1][1] == node[2][1][0][1] && true) {
    return rewrite_478_7(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][1] == node[2][0] && node[0][0][0][0] == node[2][1]) {
    return rewrite_478_8(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][1] == node[2][0] && node[0][0][0][0] == node[2][1]) {
    return rewrite_478_9(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][1] == node[1][2][0][0] && node[0][0] == node[1][2][0][1] && true) {
    return rewrite_478_10(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][1] == node[2][0][0][0] && node[0][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_11(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][1] == node[2][0] && node[0][0][0][0] == node[2][1]) {
    return rewrite_478_12(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][1] == node[2][2][0][0] && node[1][0] == node[2][2][0][1]) {
    return rewrite_478_13(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][1] == node[1][0] && node[0][1][0][0] == node[1][1] && true) {
    return rewrite_478_14(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][1] == node[1][1][0][0] && node[0][0] == node[1][1][0][1] && true && true) {
    return rewrite_478_15(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][1] == node[1][0][0][0] && node[0][0] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_16(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][0] == node[1][2][0][0] && node[0][1] == node[1][2][0][1] && true) {
    return rewrite_478_17(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][1] == node[2][0] && node[0][1][0][0] == node[2][1]) {
    return rewrite_478_18(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][1] == node[2][2][0][0] && node[0][0] == node[2][2][0][1]) {
    return rewrite_478_19(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][1] == node[2][2][0][0] && node[0][0] == node[2][2][0][1]) {
    return rewrite_478_20(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][0] == node[2][0] && node[1][0][0][1] == node[2][1]) {
    return rewrite_478_21(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][1] == node[2][2][0][0] && node[0][0] == node[2][2][0][1]) {
    return rewrite_478_22(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][0] == node[1][0] && node[0][1][0][1] == node[1][1] && true) {
    return rewrite_478_23(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][1] == node[1][1][0][0] && node[0][0] == node[1][1][0][1] && true && true) {
    return rewrite_478_24(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][0] == node[1][1][0][0] && node[0][1] == node[1][1][0][1] && true && true) {
    return rewrite_478_25(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][0] == node[2][0][0][0] && node[1][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_26(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][0] == node[2][1][0][0] && node[1][1] == node[2][1][0][1] && true) {
    return rewrite_478_27(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][1] == node[2][2][0][0] && node[0][0] == node[2][2][0][1]) {
    return rewrite_478_28(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][0] == node[2][0][0][0] && node[1][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_29(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][0] == node[1][1][0][0] && node[0][1] == node[1][1][0][1] && true && true) {
    return rewrite_478_30(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][0] == node[2][2][0][0] && node[1][1] == node[2][2][0][1]) {
    return rewrite_478_31(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][0] == node[1][1][0][0] && node[0][1] == node[1][1][0][1] && true && true) {
    return rewrite_478_32(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][0] == node[1][0][0][0] && node[0][1] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_33(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][1] == node[2][1][0][0] && node[0][0] == node[2][1][0][1] && true) {
    return rewrite_478_34(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][0] == node[2][0] && node[0][1][0][1] == node[2][1]) {
    return rewrite_478_35(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][1] == node[1][0] && node[0][2][0][0] == node[1][1] && true) {
    return rewrite_478_36(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][0] == node[2][0] && node[1][1][0][1] == node[2][1]) {
    return rewrite_478_37(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][1] == node[2][0] && node[1][2][0][0] == node[2][1]) {
    return rewrite_478_38(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][0] == node[2][0] && node[0][0][0][1] == node[2][1]) {
    return rewrite_478_39(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][1] == node[2][1][0][0] && node[1][0] == node[2][1][0][1] && true) {
    return rewrite_478_40(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][0] == node[1][0] && node[0][2][0][1] == node[1][1] && true) {
    return rewrite_478_41(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][0] == node[1][2][0][0] && node[0][1] == node[1][2][0][1] && true) {
    return rewrite_478_42(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][1] == node[1][0] && node[0][1][0][0] == node[1][1] && true) {
    return rewrite_478_43(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][1] == node[2][0] && node[0][2][0][0] == node[2][1]) {
    return rewrite_478_44(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][0] == node[2][0] && node[1][2][0][1] == node[2][1]) {
    return rewrite_478_45(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][0] == node[1][0][0][0] && node[0][1] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_46(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][1] == node[2][2][0][0] && node[1][0] == node[2][2][0][1]) {
    return rewrite_478_47(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][0] == node[2][0] && node[0][1][0][1] == node[2][1]) {
    return rewrite_478_48(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][0] == node[2][0] && node[1][0][0][1] == node[2][1]) {
    return rewrite_478_49(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][1] == node[2][2][0][0] && node[1][0] == node[2][2][0][1]) {
    return rewrite_478_50(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][1] == node[1][0] && node[0][1][0][0] == node[1][1] && true) {
    return rewrite_478_51(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][1] == node[1][0] && node[0][0][0][0] == node[1][1] && true) {
    return rewrite_478_52(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][0] == node[1][0][0][0] && node[0][1] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_53(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][0] == node[2][0] && node[1][1][0][1] == node[2][1]) {
    return rewrite_478_54(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][1] == node[1][1][0][0] && node[0][0] == node[1][1][0][1] && true && true) {
    return rewrite_478_55(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][0] == node[2][0] && node[1][2][0][1] == node[2][1]) {
    return rewrite_478_56(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][1] == node[2][1][0][0] && node[1][0] == node[2][1][0][1] && true) {
    return rewrite_478_57(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][0] == node[2][0] && node[1][1][0][1] == node[2][1]) {
    return rewrite_478_58(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][0] == node[1][0] && node[0][0][0][1] == node[1][1] && true) {
    return rewrite_478_59(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][0] == node[1][0][0][0] && node[0][1] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_60(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][1] == node[1][1][0][0] && node[0][0] == node[1][1][0][1] && true && true) {
    return rewrite_478_61(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][0] == node[2][0] && node[0][2][0][1] == node[2][1]) {
    return rewrite_478_62(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][1] == node[2][0] && node[1][0][0][0] == node[2][1]) {
    return rewrite_478_63(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][0] == node[2][0] && node[0][1][0][1] == node[2][1]) {
    return rewrite_478_64(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][1] == node[2][1][0][0] && node[1][0] == node[2][1][0][1] && true) {
    return rewrite_478_65(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][0] == node[1][0] && node[0][2][0][1] == node[1][1] && true) {
    return rewrite_478_66(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][0] == node[2][0][0][0] && node[1][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_67(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][0] == node[2][1][0][0] && node[1][1] == node[2][1][0][1] && true) {
    return rewrite_478_68(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][0] == node[2][0][0][0] && node[0][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_69(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][1] == node[1][0][0][0] && node[0][0] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_70(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][1] == node[2][0] && node[0][1][0][0] == node[2][1]) {
    return rewrite_478_71(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][0] == node[2][2][0][0] && node[1][1] == node[2][2][0][1]) {
    return rewrite_478_72(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][1] == node[1][0] && node[0][0][0][0] == node[1][1] && true) {
    return rewrite_478_73(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][1] == node[2][1][0][0] && node[0][0] == node[2][1][0][1] && true) {
    return rewrite_478_74(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][1] == node[2][0] && node[1][1][0][0] == node[2][1]) {
    return rewrite_478_75(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][0] == node[2][2][0][0] && node[0][1] == node[2][2][0][1]) {
    return rewrite_478_76(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][1] == node[1][0] && node[0][0][0][0] == node[1][1] && true) {
    return rewrite_478_77(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][0] == node[2][0] && node[1][1][0][1] == node[2][1]) {
    return rewrite_478_78(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][0] == node[2][0] && node[0][2][0][1] == node[2][1]) {
    return rewrite_478_79(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][0] == node[2][0] && node[0][0][0][1] == node[2][1]) {
    return rewrite_478_80(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][1] == node[2][1][0][0] && node[0][0] == node[2][1][0][1] && true) {
    return rewrite_478_81(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][0] == node[2][0] && node[0][2][0][1] == node[2][1]) {
    return rewrite_478_82(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][0] == node[1][0] && node[0][2][0][1] == node[1][1] && true) {
    return rewrite_478_83(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][0] == node[2][1][0][0] && node[0][1] == node[2][1][0][1] && true) {
    return rewrite_478_84(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][0] == node[2][0] && node[0][2][0][1] == node[2][1]) {
    return rewrite_478_85(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][0] == node[2][1][0][0] && node[0][1] == node[2][1][0][1] && true) {
    return rewrite_478_86(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][0] == node[2][0] && node[1][2][0][1] == node[2][1]) {
    return rewrite_478_87(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][1] == node[2][0] && node[1][1][0][0] == node[2][1]) {
    return rewrite_478_88(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][1] == node[1][2][0][0] && node[0][0] == node[1][2][0][1] && true) {
    return rewrite_478_89(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][0] == node[2][0] && node[0][0][0][1] == node[2][1]) {
    return rewrite_478_90(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][0] == node[1][0] && node[0][2][0][1] == node[1][1] && true) {
    return rewrite_478_91(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][0] == node[2][1][0][0] && node[1][1] == node[2][1][0][1] && true) {
    return rewrite_478_92(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][0] == node[2][2][0][0] && node[0][1] == node[2][2][0][1]) {
    return rewrite_478_93(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][1] == node[1][0] && node[0][2][0][0] == node[1][1] && true) {
    return rewrite_478_94(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][1] == node[2][0] && node[1][1][0][0] == node[2][1]) {
    return rewrite_478_95(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && predicates[5] && node[0][0] == node[1][1][0][0] && node[0][1] == node[1][1][0][1] && true && true) {
    return rewrite_478_96(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][1] == node[2][0][0][0] && node[0][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_97(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][1] == node[2][0][0][0] && node[1][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_98(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][1] == node[1][0] && node[0][1][0][0] == node[1][1] && true) {
    return rewrite_478_99(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][1] == node[2][0] && node[0][2][0][0] == node[2][1]) {
    return rewrite_478_100(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][0] == node[2][2][0][0] && node[1][1] == node[2][2][0][1]) {
    return rewrite_478_101(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][0] == node[1][0] && node[0][1][0][1] == node[1][1] && true) {
    return rewrite_478_102(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][0] == node[2][0][0][0] && node[0][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_103(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][1] == node[2][0] && node[0][1][0][0] == node[2][1]) {
    return rewrite_478_104(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][0] == node[2][2][0][0] && node[0][1] == node[2][2][0][1]) {
    return rewrite_478_105(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][1] == node[1][0][0][0] && node[0][0] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_106(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][1] == node[2][0] && node[1][2][0][0] == node[2][1]) {
    return rewrite_478_107(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[1][0] == node[2][2][0][0] && node[1][1] == node[2][2][0][1]) {
    return rewrite_478_108(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][0] == node[1][0] && node[0][1][0][1] == node[1][1] && true) {
    return rewrite_478_109(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][0] == node[2][0][0][0] && node[0][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_110(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][0] == node[2][0] && node[1][0][0][1] == node[2][1]) {
    return rewrite_478_111(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && predicates[128] && node[0][0][0][0] == node[2][0] && node[0][0][0][1] == node[2][1]) {
    return rewrite_478_112(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][1] == node[2][0][0][0] && node[1][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_113(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][0] == node[2][0] && node[1][0][0][1] == node[2][1]) {
    return rewrite_478_114(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][1] == node[2][0] && node[1][0][0][0] == node[2][1]) {
    return rewrite_478_115(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[1][1] == node[2][1][0][0] && node[1][0] == node[2][1][0][1] && true) {
    return rewrite_478_116(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][1] == node[2][0][0][0] && node[1][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_117(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && node[0][0] == node[2][2][0][0] && node[0][1] == node[2][2][0][1]) {
    return rewrite_478_118(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[117] && node[0][1][0][0] == node[1][0] && node[0][1][0][1] == node[1][1] && true) {
    return rewrite_478_119(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][0] == node[1][2][0][0] && node[0][1] == node[1][2][0][1] && true) {
    return rewrite_478_120(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][0] == node[2][0] && node[1][2][0][1] == node[2][1]) {
    return rewrite_478_121(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][0] == node[2][0][0][0] && node[0][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_122(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && predicates[128] && node[0][1][0][0] == node[2][0] && node[0][1][0][1] == node[2][1]) {
    return rewrite_478_123(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][1] == node[2][0][0][0] && node[0][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_124(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][0] == node[1][2][0][0] && node[0][1] == node[1][2][0][1] && true) {
    return rewrite_478_125(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][0] == node[1][0] && node[0][0][0][1] == node[1][1] && true) {
    return rewrite_478_126(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && predicates[128] && node[1][1][0][1] == node[2][0] && node[1][1][0][0] == node[2][1]) {
    return rewrite_478_127(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][1] == node[2][0] && node[0][2][0][0] == node[2][1]) {
    return rewrite_478_128(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && predicates[106] && node[0][1] == node[2][0][0][0] && node[0][0] == node[2][0][0][1] && true && true) {
    return rewrite_478_129(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][1] == node[2][1][0][0] && node[0][0] == node[2][1][0][1] && true) {
    return rewrite_478_130(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && predicates[137] && node[0][1] == node[1][0][0][0] && node[0][0] == node[1][0][0][1] && true && true && true) {
    return rewrite_478_131(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][1] == node[1][0] && node[0][0][0][0] == node[1][1] && true) {
    return rewrite_478_132(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][0] == node[1][0] && node[0][0][0][1] == node[1][1] && true) {
    return rewrite_478_133(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && predicates[106] && node[1][0] == node[2][0][0][0] && node[1][1] == node[2][0][0][1] && true && true) {
    return rewrite_478_134(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[117] && node[0][2][0][1] == node[1][0] && node[0][2][0][0] == node[1][1] && true) {
    return rewrite_478_135(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && predicates[35] && node[0][0] == node[2][1][0][0] && node[0][1] == node[2][1][0][1] && true) {
    return rewrite_478_136(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][1] == node[2][0] && node[1][2][0][0] == node[2][1]) {
    return rewrite_478_137(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && predicates[128] && node[0][2][0][1] == node[2][0] && node[0][2][0][0] == node[2][1]) {
    return rewrite_478_138(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][1] == node[2][0] && node[1][0][0][0] == node[2][1]) {
    return rewrite_478_139(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && predicates[128] && node[1][2][0][1] == node[2][0] && node[1][2][0][0] == node[2][1]) {
    return rewrite_478_140(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && predicates[128] && node[1][0][0][1] == node[2][0] && node[1][0][0][0] == node[2][1]) {
    return rewrite_478_141(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[117] && node[0][0][0][0] == node[1][0] && node[0][0][0][1] == node[1][1] && true) {
    return rewrite_478_142(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && predicates[38] && node[0][1] == node[1][2][0][0] && node[0][0] == node[1][2][0][1] && true) {
    return rewrite_478_143(node);
  }
  else {
    return node;
  }
}
Node rewrite_478(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][0] == node[1][1][0] && node[0][0] == node[1][1][1] && node[0][1][1] == node[1][1][2]) {
    return rewrite_681_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && predicates[52] && node[0][0][2] == node[1][1][0] && node[0][0][0] == node[1][1][1]) {
    return rewrite_681_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && node[0][0][0] == node[1][1][1] && node[0][0][1] == node[1][1][2]) {
    return rewrite_681_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][1] == node[1][1][0] && node[0][1][0] == node[1][1][1] && node[0][0] == node[1][1][2]) {
    return rewrite_681_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][0] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][0][2] == node[1][1]) {
    return rewrite_681_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][2] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][0][0] == node[1][1]) {
    return rewrite_681_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && predicates[52] && node[0][1][1] == node[1][1][0] && node[0][1][2] == node[1][1][1]) {
    return rewrite_681_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][0] == node[1][0][0] && node[0][1][2] == node[1][0][1] && node[0][1][1] == node[1][1]) {
    return rewrite_681_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][1] == node[1][0][0] && node[0][0] == node[1][0][1] && node[0][1][0] == node[1][0][2] && true) {
    return rewrite_681_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][0] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][1] == node[1][0][2] && true) {
    return rewrite_681_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][1][0] == node[1][0][2] && true) {
    return rewrite_681_10(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][1] == node[1][1][0] && node[0][0] == node[1][1][1] && node[0][1][0] == node[1][1][2]) {
    return rewrite_681_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][2] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][1][1] == node[1][1]) {
    return rewrite_681_12(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][0] == node[1][1][0] && node[0][1][1] == node[1][1][1] && node[0][0] == node[1][1][2]) {
    return rewrite_681_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][1] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][0][2] == node[1][1]) {
    return rewrite_681_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && predicates[52] && node[0][1][0] == node[1][1][0] && node[0][1][2] == node[1][1][1]) {
    return rewrite_681_15(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][1][0] == node[1][0][2] && true) {
    return rewrite_681_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][0] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][0][2] == node[1][1]) {
    return rewrite_681_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && node[0][0][1] == node[1][1][1] && node[0][0][0] == node[1][1][2]) {
    return rewrite_681_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][2] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][0][0] == node[1][1]) {
    return rewrite_681_19(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && predicates[52] && node[0][0][1] == node[1][1][0] && node[0][0][2] == node[1][1][1]) {
    return rewrite_681_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][0] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][1] == node[1][0][2] && true) {
    return rewrite_681_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && predicates[52] && node[0][1][2] == node[1][1][0] && node[0][1][0] == node[1][1][1]) {
    return rewrite_681_22(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][2] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][0][1] == node[1][1]) {
    return rewrite_681_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][2] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][0][1] == node[1][1]) {
    return rewrite_681_24(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][1] == node[1][0][0] && node[0][1] == node[1][0][1] && node[0][0][0] == node[1][0][2] && true) {
    return rewrite_681_25(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && predicates[52] && node[0][0][2] == node[1][1][0] && node[0][0][0] == node[1][1][1]) {
    return rewrite_681_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && predicates[52] && node[0][0][0] == node[1][1][0] && node[0][0][1] == node[1][1][1]) {
    return rewrite_681_27(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][1] == node[1][0][0] && node[0][0][2] == node[1][0][1] && node[0][0][0] == node[1][1]) {
    return rewrite_681_28(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][1] == node[1][0][0] && node[0][0] == node[1][0][1] && node[0][1][0] == node[1][0][2] && true) {
    return rewrite_681_29(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][2] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][1][1] == node[1][1]) {
    return rewrite_681_30(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][0] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][1][2] == node[1][1]) {
    return rewrite_681_31(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && node[0][1][0] == node[1][1][1] && node[0][1][1] == node[1][1][2]) {
    return rewrite_681_32(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && predicates[52] && node[0][0][0] == node[1][1][0] && node[0][0][2] == node[1][1][1]) {
    return rewrite_681_33(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][0] == node[1][1][0] && node[0][1] == node[1][1][1] && node[0][0][1] == node[1][1][2]) {
    return rewrite_681_34(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][1] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][0] == node[1][0][2] && true) {
    return rewrite_681_35(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][0] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][0] == node[1][0][2] && true) {
    return rewrite_681_36(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][1] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][0][2] == node[1][1]) {
    return rewrite_681_37(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && predicates[52] && node[0][1][2] == node[1][1][0] && node[0][1][1] == node[1][1][1]) {
    return rewrite_681_38(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && predicates[52] && node[0][1][2] == node[1][1][0] && node[0][1][0] == node[1][1][1]) {
    return rewrite_681_39(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][0] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][1][2] == node[1][1]) {
    return rewrite_681_40(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][1] == node[1][1][0] && node[0][0][0] == node[1][1][1] && node[0][1] == node[1][1][2]) {
    return rewrite_681_41(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && predicates[52] && node[0][1][0] == node[1][1][0] && node[0][1][1] == node[1][1][1]) {
    return rewrite_681_42(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][1] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][1] == node[1][0][2] && true) {
    return rewrite_681_43(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][0] == node[1][0][0] && node[0][0] == node[1][0][1] && node[0][1][1] == node[1][0][2] && true) {
    return rewrite_681_44(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][0] == node[1][0][0] && node[0][0][2] == node[1][0][1] && node[0][0][1] == node[1][1]) {
    return rewrite_681_45(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][1] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][1][2] == node[1][1]) {
    return rewrite_681_46(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][1] == node[1][1][0] && node[0][1] == node[1][1][1] && node[0][0][0] == node[1][1][2]) {
    return rewrite_681_47(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][0][0] == node[1][0][2] && true) {
    return rewrite_681_48(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && predicates[52] && node[0][0][1] == node[1][1][0] && node[0][0][2] == node[1][1][1]) {
    return rewrite_681_49(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && node[0][0][0] == node[1][1][1] && node[0][0][1] == node[1][1][2]) {
    return rewrite_681_50(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && predicates[52] && node[0][1][0] == node[1][1][0] && node[0][1][2] == node[1][1][1]) {
    return rewrite_681_51(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && predicates[52] && node[0][1][1] == node[1][1][0] && node[0][1][2] == node[1][1][1]) {
    return rewrite_681_52(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][0] == node[1][1][0] && node[0][0][1] == node[1][1][1] && node[0][1] == node[1][1][2]) {
    return rewrite_681_53(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][1] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][0] == node[1][0][2] && true) {
    return rewrite_681_54(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][1] == node[1][1][0] && node[0][0][0] == node[1][1][1] && node[0][1] == node[1][1][2]) {
    return rewrite_681_55(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][1] == node[1][1][0] && node[0][0] == node[1][1][1] && node[0][1][0] == node[1][1][2]) {
    return rewrite_681_56(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][1] == node[1][1][0] && node[0][1] == node[1][1][1] && node[0][0][0] == node[1][1][2]) {
    return rewrite_681_57(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && predicates[52] && node[0][0][1] == node[1][1][0] && node[0][0][0] == node[1][1][1]) {
    return rewrite_681_58(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][0] == node[1][1][0] && node[0][1][1] == node[1][1][1] && node[0][0] == node[1][1][2]) {
    return rewrite_681_59(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][1] == node[1][0][0] && node[0][1] == node[1][0][1] && node[0][0][0] == node[1][0][2] && true) {
    return rewrite_681_60(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && predicates[52] && node[0][1][1] == node[1][1][0] && node[0][1][0] == node[1][1][1]) {
    return rewrite_681_61(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][1] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][1][2] == node[1][1]) {
    return rewrite_681_62(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][0][1] == node[1][0][2] && true) {
    return rewrite_681_63(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && predicates[52] && node[0][1][2] == node[1][1][0] && node[0][1][1] == node[1][1][1]) {
    return rewrite_681_64(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][0] == node[1][0][0] && node[0][1] == node[1][0][1] && node[0][0][1] == node[1][0][2] && true) {
    return rewrite_681_65(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][1] == node[1][1][0] && node[0][1][0] == node[1][1][1] && node[0][0] == node[1][1][2]) {
    return rewrite_681_66(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][0] == node[1][0][0] && node[0][1] == node[1][0][1] && node[0][0][1] == node[1][0][2] && true) {
    return rewrite_681_67(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][1][1] == node[1][0][2] && true) {
    return rewrite_681_68(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && predicates[52] && node[0][0][0] == node[1][1][0] && node[0][0][1] == node[1][1][1]) {
    return rewrite_681_69(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][2] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][1][0] == node[1][1]) {
    return rewrite_681_70(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][0][1] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][1] == node[1][0][2] && true) {
    return rewrite_681_71(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][1] == node[1][0][0] && node[0][0][2] == node[1][0][1] && node[0][0][0] == node[1][1]) {
    return rewrite_681_72(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][1] == node[1][0][0] && node[0][1][2] == node[1][0][1] && node[0][1][0] == node[1][1]) {
    return rewrite_681_73(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && predicates[50] && node[0][0][0] == node[1][0][0] && node[0][0][2] == node[1][0][1] && node[0][0][1] == node[1][1]) {
    return rewrite_681_74(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && node[0][0][1] == node[1][1][1] && node[0][0][0] == node[1][1][2]) {
    return rewrite_681_75(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && predicates[52] && node[0][0][2] == node[1][1][0] && node[0][0][1] == node[1][1][1]) {
    return rewrite_681_76(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && predicates[52] && node[0][0][2] == node[1][1][0] && node[0][0][1] == node[1][1][1]) {
    return rewrite_681_77(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][1][0] == node[1][1][0] && node[0][0] == node[1][1][1] && node[0][1][1] == node[1][1][2]) {
    return rewrite_681_78(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && node[0][1][0] == node[1][1][1] && node[0][1][1] == node[1][1][2]) {
    return rewrite_681_79(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && node[0][0][0] == node[1][0][1] && node[0][0][1] == node[1][0][2] && true) {
    return rewrite_681_80(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && predicates[52] && node[0][0][0] == node[1][1][0] && node[0][0][2] == node[1][1][1]) {
    return rewrite_681_81(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && predicates[52] && node[0][1][0] == node[1][1][0] && node[0][1][1] == node[1][1][1]) {
    return rewrite_681_82(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && predicates[52] && node[0][0][1] == node[1][1][0] && node[0][0][0] == node[1][1][1]) {
    return rewrite_681_83(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][2] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][1][0] == node[1][1]) {
    return rewrite_681_84(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][0] == node[1][0][0] && node[0][0] == node[1][0][1] && node[0][1][1] == node[1][0][2] && true) {
    return rewrite_681_85(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][0] == node[1][0][0] && node[0][1][2] == node[1][0][1] && node[0][1][1] == node[1][1]) {
    return rewrite_681_86(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][0] == node[1][1][0] && node[0][1] == node[1][1][1] && node[0][0][1] == node[1][1][2]) {
    return rewrite_681_87(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && node[0][1][1] == node[1][1][1] && node[0][1][0] == node[1][1][2]) {
    return rewrite_681_88(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][1][0] == node[1][0][0] && node[0][1][1] == node[1][0][1] && node[0][0] == node[1][0][2] && true) {
    return rewrite_681_89(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && node[0][0][1] == node[1][0][1] && node[0][0][0] == node[1][0][2] && true) {
    return rewrite_681_90(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && predicates[52] && node[0][1][1] == node[1][1][0] && node[0][1][0] == node[1][1][1]) {
    return rewrite_681_91(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && predicates[50] && node[0][1][1] == node[1][0][0] && node[0][1][2] == node[1][0][1] && node[0][1][0] == node[1][1]) {
    return rewrite_681_92(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && node[0][1][1] == node[1][1][1] && node[0][1][0] == node[1][1][2]) {
    return rewrite_681_93(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && node[0][1][0] == node[1][0][1] && node[0][1][1] == node[1][0][2] && true) {
    return rewrite_681_94(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[126] && node[0][0][0] == node[1][1][0] && node[0][0][1] == node[1][1][1] && node[0][1] == node[1][1][2]) {
    return rewrite_681_95(node);
  }
  else {
    return node;
  }
}
Node rewrite_681(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_682_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_682_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_682_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_682_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_682_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_682_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_682_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_682_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_682_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_682_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_682_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_682_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_682_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_682_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_15(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_682_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_682_19(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_682_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_682_21(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_682_22(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_682_23(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_24(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_682_25(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_682_27(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_682_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_682_29(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_682_31(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_682_32(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_682_33(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_34(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_682_35(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_682_36(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_682_37(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_682_38(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_682_39(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_682_40(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_682_41(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_682_42(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_682_43(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_44(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_682_45(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_682_46(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_682_47(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_682_48(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_682_49(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_50(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_682_51(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_52(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_53(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_54(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_682_55(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_682_56(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_682_57(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_682_58(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_682_59(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_682_60(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_682_61(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_682_62(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_682_63(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_682_64(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_682_65(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_66(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_682_67(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_68(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_682_69(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_70(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_682_71(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_72(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_73(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_682_74(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_682_75(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_76(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_682_77(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_682_78(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_682_79(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_682_80(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_682_81(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && predicates[52] && true && true) {
    return rewrite_682_82(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_83(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_682_84(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_85(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_682_86(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && predicates[52] && true && true) {
    return rewrite_682_87(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_682_88(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_682_89(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_682_90(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_682_91(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_682_92(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && predicates[52] && true && true) {
    return rewrite_682_93(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_682_94(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_682_95(node);
  }
  else {
    return node;
  }
}
Node rewrite_682(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_4(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_6(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_8(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_9(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_11(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_12(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_16(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_17(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_18(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_19(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_20(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_21(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_22(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_23(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_24(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_25(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_26(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_27(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_28(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_29(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_30(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_31(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_32(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_33(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_34(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_35(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_36(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_37(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_38(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_39(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_543_40(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_41(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_42(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_543_43(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_543_44(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_45(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_46(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_543_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_543(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_0(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_8(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_10(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_11(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_13(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_17(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_18(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_20(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_22(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_23(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_24(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_25(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_26(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_27(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_28(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_29(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_30(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_31(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_32(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_33(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_34(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_35(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_37(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_38(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_552_39(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_552_41(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_42(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_43(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_44(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_552_45(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_552_46(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_552_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_552(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && predicates[109] && true) {
    return rewrite_561_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && predicates[109] && true) {
    return rewrite_561_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_561_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_561_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_561_4(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && predicates[109] && true) {
    return rewrite_561_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_561_6(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && predicates[109] && true) {
    return rewrite_561_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_561_8(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_561_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_561_10(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_561_11(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_561_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_561_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_561_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_561_16(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && predicates[109] && true) {
    return rewrite_561_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && predicates[109] && true) {
    return rewrite_561_18(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_561_19(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_561_20(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_561_21(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_22(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_561_23(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_561_24(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_561_25(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_561_26(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_561_27(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_28(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && predicates[109] && true) {
    return rewrite_561_29(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_561_30(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_31(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_32(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && predicates[109] && true) {
    return rewrite_561_33(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_561_34(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && predicates[109] && true) {
    return rewrite_561_35(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_561_36(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_37(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_38(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_561_39(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_561_40(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && predicates[109] && true) {
    return rewrite_561_41(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && predicates[109] && true) {
    return rewrite_561_42(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_561_43(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_561_44(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_561_45(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && predicates[109] && true) {
    return rewrite_561_46(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && predicates[109] && true) {
    return rewrite_561_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_561(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && predicates[52] && true && true) {
    return rewrite_562_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_562_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_562_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_562_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_562_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_562_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && predicates[87] && true && true && true) {
    return rewrite_562_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_562_7(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_562_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && predicates[52] && true && true) {
    return rewrite_562_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_562_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && predicates[87] && true && true && true) {
    return rewrite_562_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_562_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_562_13(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && predicates[52] && true && true) {
    return rewrite_562_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_562_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_562_16(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_562_17(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_562_18(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && predicates[52] && true && true) {
    return rewrite_562_19(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_562_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_562_21(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && predicates[52] && true && true) {
    return rewrite_562_22(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && predicates[87] && true && true && true) {
    return rewrite_562_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_562_24(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && predicates[52] && true && true) {
    return rewrite_562_25(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_562_26(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && predicates[52] && true && true) {
    return rewrite_562_27(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_562_28(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && predicates[52] && true && true) {
    return rewrite_562_29(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && predicates[87] && true && true && true) {
    return rewrite_562_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_562_31(node);
  }
  else {
    return node;
  }
}
Node rewrite_562(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_0(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_2(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_4(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_5(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_7(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_8(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_11(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_12(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_13(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_16(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_17(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_20(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_22(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_23(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_24(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_25(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_26(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_27(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_28(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_29(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_30(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_31(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_32(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_33(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_34(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_35(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_37(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_567_38(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_567_39(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_40(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_41(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_42(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_43(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_567_44(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_567_45(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_567_46(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_567_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_567(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && predicates[40] && true) {
    return rewrite_572_0(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_572_1(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_572_2(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_572_3(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_572_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_572_5(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && predicates[121] && true && true) {
    return rewrite_572_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_572_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_572_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && predicates[147] && true && true && true && true) {
    return rewrite_572_9(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && predicates[40] && true) {
    return rewrite_572_10(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && predicates[25] && true && true) {
    return rewrite_572_11(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && predicates[40] && true) {
    return rewrite_572_12(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_572_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && predicates[40] && true) {
    return rewrite_572_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_572_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && predicates[121] && true && true) {
    return rewrite_572_16(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && predicates[40] && true) {
    return rewrite_572_17(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && predicates[121] && true && true) {
    return rewrite_572_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && predicates[40] && true) {
    return rewrite_572_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && predicates[121] && true && true) {
    return rewrite_572_20(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && predicates[25] && true && true) {
    return rewrite_572_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && predicates[81] && true && true && true && true && true) {
    return rewrite_572_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_572_23(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_572_24(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && predicates[40] && true) {
    return rewrite_572_25(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && predicates[25] && true && true) {
    return rewrite_572_26(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && predicates[81] && true && true && true && true && true) {
    return rewrite_572_27(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_572_28(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && predicates[121] && true && true) {
    return rewrite_572_29(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && predicates[121] && true && true) {
    return rewrite_572_30(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && predicates[113] && true && true && true) {
    return rewrite_572_31(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_572_32(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_572_33(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_572_34(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && predicates[121] && true && true) {
    return rewrite_572_35(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && predicates[25] && true && true) {
    return rewrite_572_36(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && predicates[121] && true && true) {
    return rewrite_572_37(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_572_38(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && predicates[113] && true && true && true) {
    return rewrite_572_39(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && predicates[40] && true) {
    return rewrite_572_40(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_572_41(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && predicates[113] && true && true && true) {
    return rewrite_572_42(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_572_43(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && predicates[147] && true && true && true && true) {
    return rewrite_572_44(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && predicates[113] && true && true && true) {
    return rewrite_572_45(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_572_46(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_572_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_572(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_1(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_2(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_5(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_9(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_10(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_13(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_14(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_15(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_16(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_18(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_19(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_20(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_21(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && predicates[112] && true && true && true) {
    return rewrite_582_22(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_23(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_24(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_25(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_27(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && predicates[147] && true && true && true) {
    return rewrite_582_28(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && predicates[61] && true && true) {
    return rewrite_582_29(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && predicates[66] && true && true && true && true) {
    return rewrite_582_31(node);
  }
  else {
    return node;
  }
}
Node rewrite_582(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_11(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_13(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_16(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_19(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_20(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_21(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_22(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_24(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_25(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_26(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_27(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_29(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_30(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_31(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_32(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_33(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_34(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_35(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_36(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_37(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_38(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_585_39(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_40(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_41(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_42(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_43(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_44(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_585_45(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_585_46(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && predicates[52] && true && true) {
    return rewrite_585_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_585(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_587_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && predicates[109] && true) {
    return rewrite_587_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_587_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_587_4(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && predicates[109] && true) {
    return rewrite_587_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_587_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_7(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_587_8(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_587_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_587_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_587_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_587_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_16(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_587_17(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && predicates[109] && true) {
    return rewrite_587_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_19(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_587_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_587_21(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_587_22(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_587_23(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && predicates[109] && true) {
    return rewrite_587_24(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_25(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_587_26(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_587_27(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_587_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_587_29(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_587_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_587_31(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_587_32(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_33(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_34(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_587_35(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && predicates[109] && true) {
    return rewrite_587_36(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_587_37(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_587_38(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_39(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_587_40(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && predicates[109] && true) {
    return rewrite_587_41(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_587_42(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && predicates[109] && true) {
    return rewrite_587_43(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_587_44(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_587_45(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_587_46(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_587_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_587(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && predicates[17] && true && true && true) {
    return rewrite_596_0(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && predicates[103] && true && true && true) {
    return rewrite_596_1(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && predicates[34] && true && true && true) {
    return rewrite_596_2(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && predicates[12] && true && true) {
    return rewrite_596_3(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && predicates[147] && true && true && true && true) {
    return rewrite_596_4(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && predicates[76] && true && true && true && true) {
    return rewrite_596_5(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && predicates[34] && true && true && true) {
    return rewrite_596_6(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && predicates[103] && true && true && true) {
    return rewrite_596_7(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && predicates[34] && true && true && true) {
    return rewrite_596_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && predicates[61] && true && true && true) {
    return rewrite_596_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && predicates[17] && true && true && true) {
    return rewrite_596_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && predicates[12] && true && true) {
    return rewrite_596_11(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && predicates[103] && true && true && true) {
    return rewrite_596_12(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && predicates[92] && true && true) {
    return rewrite_596_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && predicates[61] && true && true && true) {
    return rewrite_596_14(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && predicates[103] && true && true && true) {
    return rewrite_596_15(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && predicates[16] && true) {
    return rewrite_596_16(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && predicates[61] && true && true && true) {
    return rewrite_596_17(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && predicates[16] && true) {
    return rewrite_596_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_596_19(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && predicates[37] && true && true) {
    return rewrite_596_20(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && predicates[12] && true && true) {
    return rewrite_596_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_596_22(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && predicates[37] && true && true) {
    return rewrite_596_23(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && predicates[92] && true && true) {
    return rewrite_596_24(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && predicates[92] && true && true) {
    return rewrite_596_25(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && predicates[112] && true && true && true && true) {
    return rewrite_596_26(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && predicates[76] && true && true && true && true) {
    return rewrite_596_27(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && predicates[12] && true && true) {
    return rewrite_596_28(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && predicates[17] && true && true && true) {
    return rewrite_596_29(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && predicates[37] && true && true) {
    return rewrite_596_30(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && predicates[17] && true && true && true) {
    return rewrite_596_31(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && predicates[112] && true && true && true && true) {
    return rewrite_596_32(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && predicates[76] && true && true && true && true) {
    return rewrite_596_33(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && predicates[147] && true && true && true && true) {
    return rewrite_596_34(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && predicates[16] && true) {
    return rewrite_596_35(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && predicates[16] && true) {
    return rewrite_596_36(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && predicates[147] && true && true && true && true) {
    return rewrite_596_37(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && predicates[34] && true && true && true) {
    return rewrite_596_38(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && predicates[147] && true && true && true && true) {
    return rewrite_596_39(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_596_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_596_41(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && predicates[61] && true && true && true) {
    return rewrite_596_42(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && predicates[37] && true && true) {
    return rewrite_596_43(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && predicates[112] && true && true && true && true) {
    return rewrite_596_44(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && predicates[112] && true && true && true && true) {
    return rewrite_596_45(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && predicates[76] && true && true && true && true) {
    return rewrite_596_46(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && predicates[92] && true && true) {
    return rewrite_596_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_596(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && predicates[16] && node[1][1][1] == node[1][2][1][0]) {
    return rewrite_604_0(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && predicates[12] && node[1][0][1] == node[1][1][1][0] && true) {
    return rewrite_604_1(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && predicates[65] && node[1][1][1][0] == node[1][2][0] && true) {
    return rewrite_604_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && predicates[145] && true && node[0][1][1][0] == node[0][2][1] && true) {
    return rewrite_604_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && predicates[145] && node[0][0][0][0] == node[0][2][0] && true && true) {
    return rewrite_604_4(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && predicates[103] && node[0][0][0] == node[0][1][1][0] && true && true) {
    return rewrite_604_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && predicates[9] && node[1][1][1] == node[1][2][0][0] && true) {
    return rewrite_604_6(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && predicates[107] && node[1][0][1] == node[1][1][0][0] && true && true) {
    return rewrite_604_7(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && predicates[16] && node[1][0][0] == node[1][2][1][0]) {
    return rewrite_604_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && predicates[87] && node[0][0][0][0] == node[0][1][0] && true && true && true) {
    return rewrite_604_9(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && predicates[9] && node[1][0][0] == node[1][2][0][0] && true) {
    return rewrite_604_10(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && predicates[52] && node[1][0][1][0] == node[1][1][0] && true && true) {
    return rewrite_604_11(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && predicates[10] && node[0][1][0] == node[0][2][0][0] && true && true) {
    return rewrite_604_12(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && predicates[65] && true && node[1][0][1][0] == node[1][2][1]) {
    return rewrite_604_13(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && predicates[87] && true && node[0][0][0][0] == node[0][1][1] && true && true) {
    return rewrite_604_14(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && predicates[16] && node[1][0][1] == node[1][2][1][0]) {
    return rewrite_604_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && predicates[145] && node[0][0][1][0] == node[0][2][0] && true && true) {
    return rewrite_604_16(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && predicates[37] && node[0][1][1] == node[0][2][1][0] && true) {
    return rewrite_604_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && predicates[37] && node[0][1][0] == node[0][2][1][0] && true) {
    return rewrite_604_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && predicates[10] && node[0][0][0] == node[0][2][0][0] && true && true) {
    return rewrite_604_19(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && predicates[16] && node[1][1][0] == node[1][2][1][0]) {
    return rewrite_604_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && predicates[87] && true && node[0][0][1][0] == node[0][1][1] && true && true) {
    return rewrite_604_21(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && predicates[52] && node[1][0][0][0] == node[1][1][0] && true && true) {
    return rewrite_604_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && predicates[145] && node[0][1][0][0] == node[0][2][0] && true && true) {
    return rewrite_604_23(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && predicates[154] && node[0][0][1] == node[0][1][0][0] && true && true && true) {
    return rewrite_604_24(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && predicates[12] && node[1][0][0] == node[1][1][1][0] && true) {
    return rewrite_604_25(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && predicates[65] && node[1][1][0][0] == node[1][2][0] && true) {
    return rewrite_604_26(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && predicates[52] && true && node[1][0][0][0] == node[1][1][1] && true) {
    return rewrite_604_27(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && predicates[107] && node[1][0][0] == node[1][1][0][0] && true && true) {
    return rewrite_604_28(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && predicates[65] && true && node[1][1][1][0] == node[1][2][1]) {
    return rewrite_604_29(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && predicates[103] && node[0][0][1] == node[0][1][1][0] && true && true) {
    return rewrite_604_30(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && predicates[65] && node[1][0][0][0] == node[1][2][0] && true) {
    return rewrite_604_31(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && predicates[145] && true && node[0][1][0][0] == node[0][2][1] && true) {
    return rewrite_604_32(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && predicates[37] && node[0][0][0] == node[0][2][1][0] && true) {
    return rewrite_604_33(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && predicates[145] && true && node[0][0][1][0] == node[0][2][1] && true) {
    return rewrite_604_34(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && predicates[9] && node[1][0][1] == node[1][2][0][0] && true) {
    return rewrite_604_35(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && predicates[145] && true && node[0][0][0][0] == node[0][2][1] && true) {
    return rewrite_604_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && predicates[10] && node[0][0][1] == node[0][2][0][0] && true && true) {
    return rewrite_604_37(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && predicates[145] && node[0][1][1][0] == node[0][2][0] && true && true) {
    return rewrite_604_38(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && predicates[65] && true && node[1][1][0][0] == node[1][2][1]) {
    return rewrite_604_39(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && predicates[37] && node[0][0][1] == node[0][2][1][0] && true) {
    return rewrite_604_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && predicates[154] && node[0][0][0] == node[0][1][0][0] && true && true && true) {
    return rewrite_604_41(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && predicates[87] && node[0][0][1][0] == node[0][1][0] && true && true && true) {
    return rewrite_604_42(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && predicates[65] && true && node[1][0][0][0] == node[1][2][1]) {
    return rewrite_604_43(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && predicates[52] && true && node[1][0][1][0] == node[1][1][1] && true) {
    return rewrite_604_44(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && predicates[10] && node[0][1][1] == node[0][2][0][0] && true && true) {
    return rewrite_604_45(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && predicates[9] && node[1][1][0] == node[1][2][0][0] && true) {
    return rewrite_604_46(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && predicates[65] && node[1][0][1][0] == node[1][2][0] && true) {
    return rewrite_604_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_604(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_605_0(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && predicates[145] && true && true && true) {
    return rewrite_605_1(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && predicates[65] && true && true) {
    return rewrite_605_2(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_605_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && predicates[52] && true && true && true) {
    return rewrite_605_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && predicates[52] && true && true && true) {
    return rewrite_605_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_605_6(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_605_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_605_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_605_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && predicates[154] && true && true && true && true) {
    return rewrite_605_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_605_11(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_605_12(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && predicates[145] && true && true && true) {
    return rewrite_605_13(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_605_14(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && predicates[65] && true && true) {
    return rewrite_605_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_605_16(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && predicates[65] && true && true) {
    return rewrite_605_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_605_18(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && predicates[65] && true && true) {
    return rewrite_605_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_605_20(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_605_21(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && predicates[52] && true && true && true) {
    return rewrite_605_22(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && predicates[103] && true && true && true) {
    return rewrite_605_23(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_605_24(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_605_25(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && predicates[154] && true && true && true && true) {
    return rewrite_605_26(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && predicates[65] && true && true) {
    return rewrite_605_27(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_605_28(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_605_29(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && predicates[145] && true && true && true) {
    return rewrite_605_30(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_605_31(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_605_32(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_605_33(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_605_34(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && predicates[65] && true && true) {
    return rewrite_605_35(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && predicates[145] && true && true && true) {
    return rewrite_605_36(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && predicates[145] && true && true && true) {
    return rewrite_605_37(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && predicates[87] && true && true && true && true) {
    return rewrite_605_38(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && predicates[145] && true && true && true) {
    return rewrite_605_39(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_605_40(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && predicates[52] && true && true && true) {
    return rewrite_605_41(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && predicates[65] && true && true) {
    return rewrite_605_42(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && predicates[65] && true && true) {
    return rewrite_605_43(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && predicates[103] && true && true && true) {
    return rewrite_605_44(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_605_45(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_605_46(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && predicates[87] && true && true && true && true) {
    return rewrite_605_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_605(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_609_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && predicates[99] && true && true && true && true && true) {
    return rewrite_609_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && predicates[148] && true && true && true && true) {
    return rewrite_609_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && predicates[36] && true && true && true && true && true) {
    return rewrite_609_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && predicates[57] && true && true && true && true) {
    return rewrite_609_4(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && predicates[89] && true && true && true && true) {
    return rewrite_609_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && predicates[119] && true && true && true) {
    return rewrite_609_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && predicates[36] && true && true && true && true && true) {
    return rewrite_609_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && predicates[119] && true && true && true) {
    return rewrite_609_8(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && predicates[108] && true && true) {
    return rewrite_609_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && predicates[119] && true && true && true) {
    return rewrite_609_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && predicates[73] && true && true && true) {
    return rewrite_609_11(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && predicates[148] && true && true && true && true) {
    return rewrite_609_12(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && predicates[22] && true && true && true) {
    return rewrite_609_13(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && predicates[108] && true && true) {
    return rewrite_609_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && predicates[136] && true && true && true && true) {
    return rewrite_609_15(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && predicates[97] && true && true && true && true && true) {
    return rewrite_609_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && predicates[36] && true && true && true && true && true) {
    return rewrite_609_17(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && predicates[57] && true && true && true && true) {
    return rewrite_609_18(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && predicates[99] && true && true && true && true && true) {
    return rewrite_609_19(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && predicates[108] && true && true) {
    return rewrite_609_20(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && predicates[22] && true && true && true) {
    return rewrite_609_21(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && predicates[108] && true && true) {
    return rewrite_609_22(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && predicates[89] && true && true && true && true) {
    return rewrite_609_23(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && predicates[99] && true && true && true && true && true) {
    return rewrite_609_24(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && predicates[57] && true && true && true && true) {
    return rewrite_609_25(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && predicates[99] && true && true && true && true && true) {
    return rewrite_609_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_609_27(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && predicates[73] && true && true && true) {
    return rewrite_609_28(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && predicates[148] && true && true && true && true) {
    return rewrite_609_29(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && predicates[22] && true && true && true) {
    return rewrite_609_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && predicates[136] && true && true && true && true) {
    return rewrite_609_31(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && predicates[73] && true && true && true) {
    return rewrite_609_32(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && predicates[36] && true && true && true && true && true) {
    return rewrite_609_33(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_609_34(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && predicates[73] && true && true && true) {
    return rewrite_609_35(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && predicates[119] && true && true && true) {
    return rewrite_609_36(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && predicates[22] && true && true && true) {
    return rewrite_609_37(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && predicates[148] && true && true && true && true) {
    return rewrite_609_38(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && predicates[97] && true && true && true && true && true) {
    return rewrite_609_39(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && predicates[136] && true && true && true && true) {
    return rewrite_609_40(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && predicates[97] && true && true && true && true && true) {
    return rewrite_609_41(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && predicates[57] && true && true && true && true) {
    return rewrite_609_42(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_609_43(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && predicates[89] && true && true && true && true) {
    return rewrite_609_44(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && predicates[97] && true && true && true && true && true) {
    return rewrite_609_45(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && predicates[136] && true && true && true && true) {
    return rewrite_609_46(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && predicates[89] && true && true && true && true) {
    return rewrite_609_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_609(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_612_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && predicates[69] && true && true && true && true) {
    return rewrite_612_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_612_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && predicates[28] && true && true && true && true) {
    return rewrite_612_3(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && predicates[141] && true && true && true) {
    return rewrite_612_4(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && predicates[141] && true && true && true) {
    return rewrite_612_5(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && predicates[141] && true && true && true) {
    return rewrite_612_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && predicates[34] && true && true) {
    return rewrite_612_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && predicates[69] && true && true && true && true) {
    return rewrite_612_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_612_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && predicates[34] && true && true) {
    return rewrite_612_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && predicates[28] && true && true && true && true) {
    return rewrite_612_11(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && predicates[28] && true && true && true && true) {
    return rewrite_612_12(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && predicates[141] && true && true && true) {
    return rewrite_612_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && predicates[76] && true && true && true) {
    return rewrite_612_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_612_15(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && predicates[103] && true && true) {
    return rewrite_612_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_612_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_612_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && predicates[76] && true && true && true) {
    return rewrite_612_19(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && predicates[12] && true) {
    return rewrite_612_20(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && predicates[141] && true && true && true) {
    return rewrite_612_21(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && predicates[28] && true && true && true && true) {
    return rewrite_612_22(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && predicates[69] && true && true && true && true) {
    return rewrite_612_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && predicates[76] && true && true && true) {
    return rewrite_612_24(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && predicates[12] && true) {
    return rewrite_612_25(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && predicates[12] && true) {
    return rewrite_612_26(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && predicates[103] && true && true) {
    return rewrite_612_27(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && predicates[34] && true && true) {
    return rewrite_612_28(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && predicates[34] && true && true) {
    return rewrite_612_29(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && predicates[103] && true && true) {
    return rewrite_612_30(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && predicates[103] && true && true) {
    return rewrite_612_31(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && predicates[34] && true && true) {
    return rewrite_612_32(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && predicates[69] && true && true && true && true) {
    return rewrite_612_33(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && predicates[12] && true) {
    return rewrite_612_34(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && predicates[69] && true && true && true && true) {
    return rewrite_612_35(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && predicates[34] && true && true) {
    return rewrite_612_36(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && predicates[103] && true && true) {
    return rewrite_612_37(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && predicates[28] && true && true && true && true) {
    return rewrite_612_38(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && predicates[69] && true && true && true && true) {
    return rewrite_612_39(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && predicates[76] && true && true && true) {
    return rewrite_612_40(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && predicates[76] && true && true && true) {
    return rewrite_612_41(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && predicates[28] && true && true && true && true) {
    return rewrite_612_42(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && predicates[141] && true && true && true) {
    return rewrite_612_43(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && predicates[76] && true && true && true) {
    return rewrite_612_44(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && predicates[12] && true) {
    return rewrite_612_45(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && predicates[12] && true) {
    return rewrite_612_46(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && predicates[103] && true && true) {
    return rewrite_612_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_612(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_2(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_3(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_4(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_7(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_8(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_15(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_16(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_18(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_19(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_20(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_21(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_22(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_23(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_24(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_25(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_26(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_27(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_28(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_29(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_30(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_31(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_32(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_33(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_34(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_35(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_36(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_37(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_38(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_39(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_41(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_42(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_43(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_44(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_45(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_46(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_47(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_48(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_49(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_50(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_51(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_52(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_53(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_54(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_55(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_56(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_57(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_58(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_59(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && predicates[109] && true) {
    return rewrite_616_60(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_61(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_62(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_63(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && predicates[109] && true) {
    return rewrite_616_64(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_65(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_616_66(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_616_67(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_68(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && predicates[109] && true) {
    return rewrite_616_69(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_70(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_616_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_616(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_0(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_625_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_2(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_625_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && predicates[52] && true && true && true) {
    return rewrite_625_5(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_6(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_7(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_8(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_625_10(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && predicates[52] && true && true && true) {
    return rewrite_625_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_625_12(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_625_13(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_14(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && predicates[65] && true && true) {
    return rewrite_625_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_625_16(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && predicates[65] && true && true) {
    return rewrite_625_17(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_625_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && predicates[65] && true && true) {
    return rewrite_625_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_625_20(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && predicates[65] && true && true) {
    return rewrite_625_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_625_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && predicates[145] && true && true && true) {
    return rewrite_625_23(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && predicates[65] && true && true) {
    return rewrite_625_24(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_625_25(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_625_26(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && predicates[52] && true && true && true) {
    return rewrite_625_27(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_28(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_625_29(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && predicates[145] && true && true && true) {
    return rewrite_625_30(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && predicates[145] && true && true && true) {
    return rewrite_625_31(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_32(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_625_33(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_625_34(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && predicates[52] && true && true && true) {
    return rewrite_625_35(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && predicates[145] && true && true && true) {
    return rewrite_625_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_625_37(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && predicates[65] && true && true) {
    return rewrite_625_38(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_39(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_40(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && predicates[65] && true && true) {
    return rewrite_625_41(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_42(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_625_43(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_625_44(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && predicates[65] && true && true) {
    return rewrite_625_45(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_46(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_625_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_625(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && predicates[115] && true && true && true) {
    return rewrite_633_0(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && predicates[143] && true && true && true && true) {
    return rewrite_633_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && predicates[53] && true && true && true && true && true) {
    return rewrite_633_2(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && predicates[44] && true && true) {
    return rewrite_633_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && predicates[30] && true && true && true && true && true) {
    return rewrite_633_4(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && predicates[62] && true && true && true && true) {
    return rewrite_633_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && predicates[143] && true && true && true && true) {
    return rewrite_633_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_633_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && predicates[129] && true && true && true) {
    return rewrite_633_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && predicates[75] && true && true && true) {
    return rewrite_633_9(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && predicates[43] && true && true && true) {
    return rewrite_633_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_633_11(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && predicates[68] && true && true && true && true) {
    return rewrite_633_12(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && predicates[105] && true && true && true && true && true) {
    return rewrite_633_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && predicates[115] && true && true && true) {
    return rewrite_633_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && predicates[30] && true && true && true && true && true) {
    return rewrite_633_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && predicates[139] && true && true && true && true) {
    return rewrite_633_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && predicates[62] && true && true && true && true) {
    return rewrite_633_17(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && predicates[151] && true) {
    return rewrite_633_18(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && predicates[58] && true && true && true && true) {
    return rewrite_633_19(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && predicates[88] && true && true) {
    return rewrite_633_20(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && predicates[75] && true && true && true) {
    return rewrite_633_21(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && predicates[68] && true && true && true && true) {
    return rewrite_633_22(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && predicates[43] && true && true && true) {
    return rewrite_633_23(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && predicates[133] && true && true && true) {
    return rewrite_633_24(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && predicates[44] && true && true) {
    return rewrite_633_25(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && predicates[133] && true && true && true) {
    return rewrite_633_26(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && predicates[63] && true && true && true && true) {
    return rewrite_633_27(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && predicates[8] && true && true) {
    return rewrite_633_28(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && predicates[60] && true && true) {
    return rewrite_633_29(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && predicates[140] && true && true && true) {
    return rewrite_633_30(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && predicates[88] && true && true) {
    return rewrite_633_31(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && predicates[63] && true && true && true && true) {
    return rewrite_633_32(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && predicates[32] && true && true && true) {
    return rewrite_633_33(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && predicates[140] && true && true && true) {
    return rewrite_633_34(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && predicates[32] && true && true && true) {
    return rewrite_633_35(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && predicates[60] && true && true) {
    return rewrite_633_36(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && predicates[53] && true && true && true && true && true) {
    return rewrite_633_37(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && predicates[157] && true && true && true && true) {
    return rewrite_633_38(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && predicates[105] && true && true && true && true && true) {
    return rewrite_633_39(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_633_40(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && predicates[58] && true && true && true && true) {
    return rewrite_633_41(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && predicates[139] && true && true && true && true) {
    return rewrite_633_42(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && predicates[8] && true && true) {
    return rewrite_633_43(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && predicates[129] && true && true && true) {
    return rewrite_633_44(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && predicates[151] && true) {
    return rewrite_633_45(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_633_46(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && predicates[157] && true && true && true && true) {
    return rewrite_633_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_633(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_642_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && predicates[86] && true && true && true) {
    return rewrite_642_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && predicates[30] && true && true && true && true && true) {
    return rewrite_642_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && predicates[133] && true && true && true) {
    return rewrite_642_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && predicates[86] && true && true && true) {
    return rewrite_642_4(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && predicates[116] && true && true) {
    return rewrite_642_5(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && predicates[8] && true && true) {
    return rewrite_642_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && predicates[93] && true && true && true) {
    return rewrite_642_7(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && predicates[96] && true && true) {
    return rewrite_642_8(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && predicates[143] && true && true && true && true) {
    return rewrite_642_9(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && predicates[1] && true && true && true && true) {
    return rewrite_642_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && predicates[68] && true && true && true && true) {
    return rewrite_642_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && predicates[58] && true && true && true && true) {
    return rewrite_642_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && predicates[93] && true && true && true) {
    return rewrite_642_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && predicates[30] && true && true && true && true && true) {
    return rewrite_642_14(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && predicates[105] && true && true && true && true && true) {
    return rewrite_642_15(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && predicates[63] && true && true && true && true) {
    return rewrite_642_16(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && predicates[133] && true && true && true) {
    return rewrite_642_17(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && predicates[43] && true && true && true) {
    return rewrite_642_18(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && predicates[58] && true && true && true && true) {
    return rewrite_642_19(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && predicates[68] && true && true && true && true) {
    return rewrite_642_20(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && predicates[143] && true && true && true && true) {
    return rewrite_642_21(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && predicates[42] && true) {
    return rewrite_642_22(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && predicates[62] && true && true && true && true) {
    return rewrite_642_23(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && predicates[142] && true && true) {
    return rewrite_642_24(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && predicates[42] && true) {
    return rewrite_642_25(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && predicates[105] && true && true && true && true && true) {
    return rewrite_642_26(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && predicates[63] && true && true && true && true) {
    return rewrite_642_27(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && predicates[139] && true && true && true && true) {
    return rewrite_642_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_642_29(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && predicates[139] && true && true && true && true) {
    return rewrite_642_30(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && predicates[32] && true && true && true) {
    return rewrite_642_31(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_642_32(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && predicates[8] && true && true) {
    return rewrite_642_33(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && predicates[32] && true && true && true) {
    return rewrite_642_34(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_642_35(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && predicates[155] && true && true && true) {
    return rewrite_642_36(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && predicates[115] && true && true && true) {
    return rewrite_642_37(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && predicates[53] && true && true && true && true && true) {
    return rewrite_642_38(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && predicates[62] && true && true && true && true) {
    return rewrite_642_39(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && predicates[96] && true && true) {
    return rewrite_642_40(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && predicates[53] && true && true && true && true && true) {
    return rewrite_642_41(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && predicates[1] && true && true && true && true) {
    return rewrite_642_42(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && predicates[142] && true && true) {
    return rewrite_642_43(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && predicates[43] && true && true && true) {
    return rewrite_642_44(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && predicates[116] && true && true) {
    return rewrite_642_45(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && predicates[115] && true && true && true) {
    return rewrite_642_46(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && predicates[155] && true && true && true) {
    return rewrite_642_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_642(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && predicates[138] && true && true && true && true) {
    return rewrite_648_0(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && predicates[82] && true && true && true && true && true) {
    return rewrite_648_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && predicates[64] && true && true && true && true) {
    return rewrite_648_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && predicates[64] && true && true && true && true) {
    return rewrite_648_3(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && predicates[84] && true && true && true) {
    return rewrite_648_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && predicates[29] && true && true && true) {
    return rewrite_648_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && predicates[89] && true && true && true && true) {
    return rewrite_648_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && predicates[82] && true && true && true && true && true) {
    return rewrite_648_7(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && predicates[21] && true && true) {
    return rewrite_648_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_648_9(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && predicates[122] && true && true && true) {
    return rewrite_648_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_648_11(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && predicates[122] && true && true && true) {
    return rewrite_648_12(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && predicates[82] && true && true && true && true && true) {
    return rewrite_648_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && predicates[84] && true && true && true) {
    return rewrite_648_14(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && predicates[29] && true && true && true) {
    return rewrite_648_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && predicates[99] && true && true && true && true && true) {
    return rewrite_648_16(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && predicates[64] && true && true && true && true) {
    return rewrite_648_17(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && predicates[55] && true && true && true && true) {
    return rewrite_648_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && predicates[84] && true && true && true) {
    return rewrite_648_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && predicates[82] && true && true && true && true && true) {
    return rewrite_648_20(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && predicates[97] && true && true && true && true && true) {
    return rewrite_648_21(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && predicates[122] && true && true && true) {
    return rewrite_648_22(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && predicates[138] && true && true && true && true) {
    return rewrite_648_23(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && predicates[55] && true && true && true && true) {
    return rewrite_648_24(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && predicates[89] && true && true && true && true) {
    return rewrite_648_25(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && predicates[29] && true && true && true) {
    return rewrite_648_26(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && predicates[21] && true && true) {
    return rewrite_648_27(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && predicates[138] && true && true && true && true) {
    return rewrite_648_28(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && predicates[138] && true && true && true && true) {
    return rewrite_648_29(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && predicates[55] && true && true && true && true) {
    return rewrite_648_30(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && predicates[21] && true && true) {
    return rewrite_648_31(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && predicates[97] && true && true && true && true && true) {
    return rewrite_648_32(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && predicates[89] && true && true && true && true) {
    return rewrite_648_33(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && predicates[29] && true && true && true) {
    return rewrite_648_34(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && predicates[21] && true && true) {
    return rewrite_648_35(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && predicates[122] && true && true && true) {
    return rewrite_648_36(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && predicates[84] && true && true && true) {
    return rewrite_648_37(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && predicates[55] && true && true && true && true) {
    return rewrite_648_38(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && predicates[99] && true && true && true && true && true) {
    return rewrite_648_39(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && predicates[64] && true && true && true && true) {
    return rewrite_648_40(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && predicates[89] && true && true && true && true) {
    return rewrite_648_41(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_648_42(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && predicates[120] && true && true && true && true && true && true) {
    return rewrite_648_43(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && predicates[99] && true && true && true && true && true) {
    return rewrite_648_44(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && predicates[97] && true && true && true && true && true) {
    return rewrite_648_45(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && predicates[99] && true && true && true && true && true) {
    return rewrite_648_46(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && predicates[97] && true && true && true && true && true) {
    return rewrite_648_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_648(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_659_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_659_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_659_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && predicates[117] && true && true) {
    return rewrite_659_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_659_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_659_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_659_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_659_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_659_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_659_12(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && predicates[117] && true && true) {
    return rewrite_659_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_659_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_659_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_659_16(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_659_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_659_18(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && predicates[117] && true && true) {
    return rewrite_659_19(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_20(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_659_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_659_23(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_24(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_659_25(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_659_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_27(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_659_28(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && predicates[117] && true && true) {
    return rewrite_659_29(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_659_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && predicates[117] && true && true) {
    return rewrite_659_31(node);
  }
  else {
    return node;
  }
}
Node rewrite_659(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_660_0(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_660_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_660_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_660_4(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_5(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_660_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_660_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_660_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_660_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_660_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_660_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_660_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_660_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_660_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_660_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_19(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_660_20(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_660_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_660_23(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_24(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_660_25(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_26(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_660_27(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_28(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_29(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_30(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_660_31(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_660_32(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_660_33(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_660_34(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_660_35(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_37(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_660_38(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_660_39(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_660_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_660_41(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_660_42(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_660_43(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_660_44(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_660_45(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_660_46(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_660_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_660(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_669_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && predicates[117] && true && true) {
    return rewrite_669_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && predicates[117] && true && true) {
    return rewrite_669_3(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_669_5(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_669_6(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && predicates[117] && true && true) {
    return rewrite_669_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_669_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_669_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_669_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_669_11(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && predicates[117] && true && true) {
    return rewrite_669_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_669_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_669_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_669_15(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_669_16(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_669_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_669_18(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && predicates[117] && true && true) {
    return rewrite_669_19(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && predicates[117] && true && true) {
    return rewrite_669_20(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_669_21(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_669_23(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_669_24(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_669_25(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_26(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_669_27(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_669_28(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_669_29(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_669_30(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && predicates[117] && true && true) {
    return rewrite_669_31(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_669_32(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && predicates[117] && true && true) {
    return rewrite_669_33(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_669_34(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && predicates[117] && true && true) {
    return rewrite_669_35(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_36(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && predicates[117] && true && true) {
    return rewrite_669_37(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_38(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && predicates[117] && true && true) {
    return rewrite_669_39(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_669_40(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && predicates[117] && true && true) {
    return rewrite_669_41(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_42(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_669_43(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_669_44(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && predicates[117] && true && true) {
    return rewrite_669_45(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_669_46(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_669_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_669(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_0(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_1(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_671_2(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_3(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_4(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_5(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_6(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_671_7(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_8(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_9(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_10(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_11(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_12(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_13(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_14(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_671_15(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_16(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_17(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_18(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_671_19(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_671_20(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_21(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_671_22(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_671_23(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_671_24(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_671_25(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_26(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_27(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_28(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_671_29(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_30(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_31(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_32(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_33(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_34(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_35(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_36(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_671_37(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_38(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_39(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_40(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_41(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_42(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_671_43(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_671_44(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_45(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_671_46(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_47(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_48(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_49(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_671_50(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_671_51(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_52(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_53(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_54(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_671_55(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_671_56(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_57(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_671_58(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_59(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_671_60(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_671_61(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_671_62(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_671_63(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_64(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_671_65(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_66(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_671_67(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_671_68(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_671_69(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_671_70(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_671_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_671(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_8(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_12(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_15(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_17(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_19(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_22(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_24(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_25(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_676_26(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_27(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_29(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_30(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_676_31(node);
  }
  else {
    return node;
  }
}
Node rewrite_676(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && predicates[33] && true && true && true) {
    return rewrite_696_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && predicates[23] && true && true && true && true && true) {
    return rewrite_696_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && predicates[54] && true && true && true && true) {
    return rewrite_696_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && predicates[0] && true && true && true && true && true) {
    return rewrite_696_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && predicates[124] && true && true && true && true && true) {
    return rewrite_696_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && predicates[54] && true && true && true && true) {
    return rewrite_696_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && predicates[54] && true && true && true && true) {
    return rewrite_696_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && predicates[124] && true && true && true && true && true) {
    return rewrite_696_7(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && predicates[124] && true && true && true && true && true) {
    return rewrite_696_8(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && predicates[23] && true && true && true && true && true) {
    return rewrite_696_9(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && true && predicates[3] && true && true) {
    return rewrite_696_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && predicates[54] && true && true && true && true) {
    return rewrite_696_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && true && predicates[100] && true && true && true && true) {
    return rewrite_696_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && predicates[124] && true && true && true && true && true) {
    return rewrite_696_13(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && predicates[23] && true && true && true && true && true) {
    return rewrite_696_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && true && predicates[131] && true && true && true) {
    return rewrite_696_15(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && true && predicates[3] && true && true) {
    return rewrite_696_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && predicates[20] && true && true && true && true && true && true) {
    return rewrite_696_17(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && true && predicates[3] && true && true) {
    return rewrite_696_18(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && predicates[91] && true && true && true && true) {
    return rewrite_696_19(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && predicates[104] && true && true && true && true) {
    return rewrite_696_20(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && true && predicates[67] && true && true && true) {
    return rewrite_696_21(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && predicates[0] && true && true && true && true && true) {
    return rewrite_696_22(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && true && predicates[131] && true && true && true) {
    return rewrite_696_23(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && true && predicates[67] && true && true && true) {
    return rewrite_696_24(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && predicates[20] && true && true && true && true && true && true) {
    return rewrite_696_25(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && predicates[33] && true && true && true) {
    return rewrite_696_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && predicates[20] && true && true && true && true && true && true) {
    return rewrite_696_27(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && predicates[33] && true && true && true) {
    return rewrite_696_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && predicates[0] && true && true && true && true && true) {
    return rewrite_696_29(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && true && predicates[100] && true && true && true && true) {
    return rewrite_696_30(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && predicates[91] && true && true && true && true) {
    return rewrite_696_31(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && predicates[104] && true && true && true && true) {
    return rewrite_696_32(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && predicates[91] && true && true && true && true) {
    return rewrite_696_33(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && predicates[0] && true && true && true && true && true) {
    return rewrite_696_34(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && true && predicates[100] && true && true && true && true) {
    return rewrite_696_35(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && true && predicates[3] && true && true) {
    return rewrite_696_36(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && predicates[91] && true && true && true && true) {
    return rewrite_696_37(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && true && true && predicates[100] && true && true && true && true) {
    return rewrite_696_38(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[94] && predicates[20] && true && true && true && true && true && true) {
    return rewrite_696_39(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && true && predicates[67] && true && true && true) {
    return rewrite_696_40(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && predicates[104] && true && true && true && true) {
    return rewrite_696_41(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && predicates[104] && true && true && true && true) {
    return rewrite_696_42(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && true && predicates[131] && true && true && true) {
    return rewrite_696_43(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && predicates[23] && true && true && true && true && true) {
    return rewrite_696_44(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[59] && true && true && predicates[67] && true && true && true) {
    return rewrite_696_45(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[2] && true && true && predicates[131] && true && true && true) {
    return rewrite_696_46(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[83] && true && predicates[33] && true && true && true) {
    return rewrite_696_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_696(TNode node, const bool* predicates) {
  if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && true) {
    return rewrite_702_0(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_702_1(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && true && true) {
    return rewrite_702_2(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && true) {
    return rewrite_702_3(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && true && true && true) {
    return rewrite_702_4(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && true) {
    return rewrite_702_5(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && true) {
    return rewrite_702_6(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_702_7(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && true) {
    return rewrite_702_8(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && true) {
    return rewrite_702_9(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && predicates[19] && true) {
    return rewrite_702_10(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && true) {
    return rewrite_702_11(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && true && true && true) {
    return rewrite_702_12(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && true) {
    return rewrite_702_13(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && true) {
    return rewrite_702_14(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && true) {
    return rewrite_702_15(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && true) {
    return rewrite_702_16(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && true && true && true && true) {
    return rewrite_702_17(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && predicates[19] && true) {
    return rewrite_702_18(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && true) {
    return rewrite_702_19(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && true) {
    return rewrite_702_20(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_702_21(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_702_22(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && true) {
    return rewrite_702_23(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && true && true) {
    return rewrite_702_24(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && true) {
    return rewrite_702_25(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && true) {
    return rewrite_702_26(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && true) {
    return rewrite_702_27(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && true && true && true && true) {
    return rewrite_702_28(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_702_29(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && predicates[125] && true && true && true) {
    return rewrite_702_30(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && predicates[19] && true) {
    return rewrite_702_31(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && true && true) {
    return rewrite_702_32(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_702_33(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && true && true && true && true) {
    return rewrite_702_34(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && predicates[90] && true && true) {
    return rewrite_702_35(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true && true) {
    return rewrite_702_36(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && true) {
    return rewrite_702_37(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && predicates[125] && true && true && true) {
    return rewrite_702_38(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && true) {
    return rewrite_702_39(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && true) {
    return rewrite_702_40(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && true && true && true) {
    return rewrite_702_41(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && predicates[135] && true && true && true) {
    return rewrite_702_42(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && true) {
    return rewrite_702_43(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && predicates[90] && true && true) {
    return rewrite_702_44(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && true) {
    return rewrite_702_45(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && true) {
    return rewrite_702_46(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && true) {
    return rewrite_702_47(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && predicates[146] && true && true) {
    return rewrite_702_48(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && true) {
    return rewrite_702_49(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true && true) {
    return rewrite_702_50(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && true) {
    return rewrite_702_51(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && predicates[90] && true && true) {
    return rewrite_702_52(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && true) {
    return rewrite_702_53(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && true) {
    return rewrite_702_54(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true && true) {
    return rewrite_702_55(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true && true) {
    return rewrite_702_56(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true && true) {
    return rewrite_702_57(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true && true) {
    return rewrite_702_58(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && predicates[125] && true && true && true) {
    return rewrite_702_59(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && predicates[90] && true && true) {
    return rewrite_702_60(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && predicates[19] && true) {
    return rewrite_702_61(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true && true) {
    return rewrite_702_62(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true && true) {
    return rewrite_702_63(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && true) {
    return rewrite_702_64(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true && true) {
    return rewrite_702_65(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true && true) {
    return rewrite_702_66(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true && true) {
    return rewrite_702_67(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && predicates[125] && true && true && true) {
    return rewrite_702_68(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && true) {
    return rewrite_702_69(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && predicates[46] && true && true && true && true) {
    return rewrite_702_70(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true && true) {
    return rewrite_702_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_702(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && predicates[109] && true) {
    return rewrite_538_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_538_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && predicates[109] && true) {
    return rewrite_538_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_538_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && predicates[109] && true) {
    return rewrite_538_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_538_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_538_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && predicates[109] && true) {
    return rewrite_538_7(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_538_8(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && predicates[109] && true) {
    return rewrite_538_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_538_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && predicates[109] && true) {
    return rewrite_538_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && predicates[109] && true) {
    return rewrite_538_12(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && predicates[109] && true) {
    return rewrite_538_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_538_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_538_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_538(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_540_0(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_540_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_540_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_540_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_540_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_540_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_540_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_540_7(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_540_8(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && predicates[109] && true) {
    return rewrite_540_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_540_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && predicates[109] && true) {
    return rewrite_540_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && predicates[109] && true) {
    return rewrite_540_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_540_13(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && predicates[109] && true) {
    return rewrite_540_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_540_15(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_540_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && predicates[109] && true) {
    return rewrite_540_17(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_540_18(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_540_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_540_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && predicates[109] && true) {
    return rewrite_540_21(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_540_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_540_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_540(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_541_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_541_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_541_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_541_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_9(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_541_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_541_11(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_541_12(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_541_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_541_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_541(TNode node, const bool* predicates) {
  if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_0(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_548_1(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_2(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_3(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_4(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_548_5(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_548_6(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_7(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_8(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_9(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_10(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_548_11(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_548_12(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_548_13(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_14(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_15(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_16(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_17(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_18(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_548_19(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_20(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_548_21(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_548_22(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_548_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_548(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && predicates[113] && true && true) {
    return rewrite_549_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && predicates[25] && true) {
    return rewrite_549_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && predicates[25] && true) {
    return rewrite_549_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_549_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && predicates[25] && true) {
    return rewrite_549_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_549_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && predicates[25] && true) {
    return rewrite_549_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_549_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_549_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_549_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_549_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && predicates[113] && true && true) {
    return rewrite_549_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && predicates[113] && true && true) {
    return rewrite_549_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_549_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && predicates[113] && true && true) {
    return rewrite_549_14(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_549_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_549(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_8(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_10(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_551_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_551_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_551(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_558_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && predicates[109] && true) {
    return rewrite_558_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_558_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_558_3(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && predicates[109] && true) {
    return rewrite_558_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_558_5(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && predicates[109] && true) {
    return rewrite_558_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && predicates[109] && true) {
    return rewrite_558_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && predicates[109] && true) {
    return rewrite_558_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && predicates[109] && true) {
    return rewrite_558_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && predicates[109] && true) {
    return rewrite_558_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && predicates[109] && true) {
    return rewrite_558_11(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_558_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_558_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && predicates[109] && true) {
    return rewrite_558_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_558_15(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_558_16(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_558_17(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_558_18(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_558_19(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && predicates[109] && true) {
    return rewrite_558_20(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_558_21(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && predicates[109] && true) {
    return rewrite_558_22(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && predicates[109] && true) {
    return rewrite_558_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_558(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_569_0(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && predicates[103] && true && true && true) {
    return rewrite_569_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && predicates[121] && true && true) {
    return rewrite_569_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && predicates[121] && true && true) {
    return rewrite_569_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && predicates[40] && true) {
    return rewrite_569_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && predicates[25] && true && true) {
    return rewrite_569_5(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_569_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_569_7(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && predicates[25] && true && true) {
    return rewrite_569_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_569_9(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && predicates[40] && true) {
    return rewrite_569_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && predicates[154] && true && true && true && true) {
    return rewrite_569_11(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_569_12(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && predicates[113] && true && true && true) {
    return rewrite_569_13(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && predicates[121] && true && true) {
    return rewrite_569_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && predicates[113] && true && true && true) {
    return rewrite_569_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_569_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && predicates[121] && true && true) {
    return rewrite_569_17(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && predicates[40] && true) {
    return rewrite_569_18(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && predicates[40] && true) {
    return rewrite_569_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_569_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_569_21(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_569_22(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_569_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_569(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_570_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_570_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_570_3(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_4(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_5(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_570_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_8(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_570_9(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_570_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_570_11(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_570_12(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_570_15(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_17(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_570_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_19(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_20(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_570_21(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_570_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_570_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_570(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_576_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && predicates[45] && true && true) {
    return rewrite_576_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && true && predicates[117] && true && true) {
    return rewrite_576_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && predicates[47] && true && true && true) {
    return rewrite_576_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_576_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && true && predicates[117] && true && true) {
    return rewrite_576_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_576_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && predicates[47] && true && true && true) {
    return rewrite_576_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && predicates[45] && true && true) {
    return rewrite_576_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && predicates[45] && true && true) {
    return rewrite_576_9(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && true && predicates[117] && true && true) {
    return rewrite_576_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && true && predicates[117] && true && true) {
    return rewrite_576_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && predicates[47] && true && true && true) {
    return rewrite_576_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && predicates[47] && true && true && true) {
    return rewrite_576_13(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_576_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && predicates[45] && true && true) {
    return rewrite_576_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_576(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_581_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_581_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_581_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_581_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_9(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_581_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_13(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_581_15(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_581_16(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_581_17(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_581_18(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_19(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_581_20(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_581_21(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_581_22(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_581_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_581(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && predicates[109] && true) {
    return rewrite_594_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_594_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && predicates[109] && true) {
    return rewrite_594_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && predicates[109] && true) {
    return rewrite_594_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_594_4(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && predicates[109] && true) {
    return rewrite_594_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && predicates[109] && true) {
    return rewrite_594_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_594_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && predicates[109] && true) {
    return rewrite_594_8(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_594_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_594_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && predicates[109] && true) {
    return rewrite_594_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && predicates[109] && true) {
    return rewrite_594_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_594_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_594_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_594_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && predicates[109] && true) {
    return rewrite_594_16(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_594_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && predicates[109] && true) {
    return rewrite_594_18(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_594_19(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_594_20(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && predicates[109] && true) {
    return rewrite_594_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && predicates[109] && true) {
    return rewrite_594_22(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_594_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_594(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && predicates[117] && true && true) {
    return rewrite_595_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && predicates[117] && true && true) {
    return rewrite_595_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_595_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_595_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_595_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && predicates[117] && true && true) {
    return rewrite_595_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && predicates[117] && true && true) {
    return rewrite_595_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_595_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && predicates[117] && true && true) {
    return rewrite_595_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && predicates[117] && true && true) {
    return rewrite_595_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_595_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_595_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_595_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && predicates[117] && true && true) {
    return rewrite_595_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_595_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && predicates[117] && true && true) {
    return rewrite_595_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_595(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_606_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[109] && true) {
    return rewrite_606_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[109] && true) {
    return rewrite_606_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_606_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_606_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_606_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_606_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[109] && true) {
    return rewrite_606_7(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[109] && true) {
    return rewrite_606_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[109] && true) {
    return rewrite_606_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && predicates[109] && true) {
    return rewrite_606_10(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[109] && true) {
    return rewrite_606_11(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_606_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_606_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[109] && true) {
    return rewrite_606_14(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_606_15(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_606_16(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[109] && true) {
    return rewrite_606_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[109] && true) {
    return rewrite_606_18(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && predicates[109] && true) {
    return rewrite_606_19(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_606_20(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && predicates[109] && true) {
    return rewrite_606_21(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_606_22(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_606_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_606(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && true && predicates[87] && node[0][0][0][0] == node[0][1][0] && true && true) {
    return rewrite_615_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[107] && node[1][0][1] == node[1][1][0][0] && true) {
    return rewrite_615_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[103] && node[0][0][1] == node[0][1][1][0] && true) {
    return rewrite_615_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[12] && node[1][0][0] == node[1][1][1][0]) {
    return rewrite_615_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[154] && node[0][0][1] == node[0][1][0][0] && true && true) {
    return rewrite_615_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[154] && node[0][0][0] == node[0][1][0][0] && true && true) {
    return rewrite_615_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && true && predicates[52] && node[1][0][1][0] == node[1][1][0] && true) {
    return rewrite_615_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[12] && node[1][0][1] == node[1][1][1][0]) {
    return rewrite_615_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && true && predicates[87] && node[0][0][1][0] == node[0][1][0] && true && true) {
    return rewrite_615_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && true && predicates[52] && true && node[1][0][0][0] == node[1][1][1]) {
    return rewrite_615_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[107] && node[1][0][0] == node[1][1][0][0] && true) {
    return rewrite_615_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && true && predicates[52] && true && node[1][0][1][0] == node[1][1][1]) {
    return rewrite_615_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && true && predicates[87] && true && node[0][0][0][0] == node[0][1][1] && true) {
    return rewrite_615_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && true && predicates[87] && true && node[0][0][1][0] == node[0][1][1] && true) {
    return rewrite_615_13(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && true && predicates[52] && node[1][0][0][0] == node[1][1][0] && true) {
    return rewrite_615_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[103] && node[0][0][0] == node[0][1][1][0] && true) {
    return rewrite_615_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_615(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && predicates[120] && true && true && true && true && true) {
    return rewrite_618_0(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && predicates[99] && true && true && true && true) {
    return rewrite_618_1(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[45] && predicates[138] && true && true && true) {
    return rewrite_618_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && predicates[82] && true && true && true && true) {
    return rewrite_618_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && predicates[36] && true && true && true && true) {
    return rewrite_618_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && predicates[78] && true && true && true) {
    return rewrite_618_5(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[45] && true && predicates[14] && true && true) {
    return rewrite_618_6(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[45] && true && predicates[14] && true && true) {
    return rewrite_618_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && predicates[120] && true && true && true && true && true) {
    return rewrite_618_8(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && predicates[78] && true && true && true) {
    return rewrite_618_9(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && predicates[99] && true && true && true && true) {
    return rewrite_618_10(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[45] && predicates[138] && true && true && true) {
    return rewrite_618_11(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && predicates[36] && true && true && true && true) {
    return rewrite_618_12(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && true && predicates[148] && true && true && true) {
    return rewrite_618_13(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && predicates[82] && true && true && true && true) {
    return rewrite_618_14(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && true && predicates[148] && true && true && true) {
    return rewrite_618_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_618(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && predicates[110] && true && true && true && true) {
    return rewrite_619_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && predicates[63] && true && true && true) {
    return rewrite_619_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && predicates[32] && true && true) {
    return rewrite_619_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && predicates[62] && true && true && true) {
    return rewrite_619_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && predicates[139] && true && true && true) {
    return rewrite_619_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && predicates[133] && true && true) {
    return rewrite_619_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && predicates[68] && true && true && true) {
    return rewrite_619_6(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[61] && predicates[43] && true && true) {
    return rewrite_619_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && predicates[30] && true && true && true && true) {
    return rewrite_619_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && predicates[127] && true && true && true && true && true) {
    return rewrite_619_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && predicates[53] && true && true && true && true) {
    return rewrite_619_10(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && predicates[8] && true) {
    return rewrite_619_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && predicates[58] && true && true && true) {
    return rewrite_619_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && predicates[105] && true && true && true && true) {
    return rewrite_619_13(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && predicates[115] && true && true) {
    return rewrite_619_14(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && predicates[143] && true && true && true) {
    return rewrite_619_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_619(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && true && true && true && predicates[117] && true && true) {
    return rewrite_627_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && predicates[41] && true) {
    return rewrite_627_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && true && true && true && predicates[117] && true && true) {
    return rewrite_627_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && true && true && predicates[117] && true && true) {
    return rewrite_627_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && true && predicates[117] && true && true) {
    return rewrite_627_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && predicates[41] && true) {
    return rewrite_627_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && predicates[114] && true && true && true) {
    return rewrite_627_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && predicates[34] && true && true) {
    return rewrite_627_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && true && true && predicates[117] && true && true) {
    return rewrite_627_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && predicates[41] && true) {
    return rewrite_627_9(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && true && true && true && predicates[117] && true && true) {
    return rewrite_627_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && true && predicates[117] && true && true) {
    return rewrite_627_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && predicates[114] && true && true && true) {
    return rewrite_627_12(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && true && true && predicates[117] && true && true) {
    return rewrite_627_13(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && true && predicates[117] && true && true) {
    return rewrite_627_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && true && true && predicates[117] && true && true) {
    return rewrite_627_15(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && predicates[34] && true && true) {
    return rewrite_627_16(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && true && true && true && predicates[117] && true && true) {
    return rewrite_627_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && predicates[41] && true) {
    return rewrite_627_18(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && true && predicates[117] && true && true) {
    return rewrite_627_19(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && predicates[114] && true && true && true) {
    return rewrite_627_20(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && predicates[114] && true && true && true) {
    return rewrite_627_21(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && predicates[34] && true && true) {
    return rewrite_627_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && predicates[34] && true && true) {
    return rewrite_627_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_627(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && true && predicates[117] && true && true) {
    return rewrite_631_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_631_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && true && predicates[117] && true && true) {
    return rewrite_631_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && true && predicates[117] && true && true) {
    return rewrite_631_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[49] && true && true) {
    return rewrite_631_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_631_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_631_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[47] && true && true && true) {
    return rewrite_631_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[49] && true && true) {
    return rewrite_631_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[47] && true && true && true) {
    return rewrite_631_9(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && true && true && predicates[117] && true && true) {
    return rewrite_631_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[49] && true && true) {
    return rewrite_631_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && true && predicates[117] && true && true) {
    return rewrite_631_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && predicates[49] && true && true) {
    return rewrite_631_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[47] && true && true && true) {
    return rewrite_631_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && predicates[47] && true && true && true) {
    return rewrite_631_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_631(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && predicates[51] && true && true && true && true) {
    return rewrite_634_0(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && predicates[51] && true && true && true && true) {
    return rewrite_634_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && predicates[79] && true && true && true && true) {
    return rewrite_634_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && predicates[24] && true && true && true && true && true) {
    return rewrite_634_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && predicates[79] && true && true && true && true) {
    return rewrite_634_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && predicates[24] && true && true && true && true && true) {
    return rewrite_634_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && predicates[24] && true && true && true && true && true) {
    return rewrite_634_6(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && predicates[102] && true && true && true) {
    return rewrite_634_7(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && predicates[102] && true && true && true) {
    return rewrite_634_8(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && predicates[51] && true && true && true && true) {
    return rewrite_634_9(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && predicates[79] && true && true && true && true) {
    return rewrite_634_10(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && predicates[102] && true && true && true) {
    return rewrite_634_11(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && predicates[24] && true && true && true && true && true) {
    return rewrite_634_12(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && predicates[79] && true && true && true && true) {
    return rewrite_634_13(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && predicates[79] && true && true && true && true) {
    return rewrite_634_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && predicates[24] && true && true && true && true && true) {
    return rewrite_634_15(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && predicates[51] && true && true && true && true) {
    return rewrite_634_16(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && predicates[102] && true && true && true) {
    return rewrite_634_17(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && predicates[51] && true && true && true && true) {
    return rewrite_634_18(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && predicates[79] && true && true && true && true) {
    return rewrite_634_19(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && predicates[24] && true && true && true && true && true) {
    return rewrite_634_20(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && predicates[102] && true && true && true) {
    return rewrite_634_21(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && predicates[51] && true && true && true && true) {
    return rewrite_634_22(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && predicates[102] && true && true && true) {
    return rewrite_634_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_634(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[103] && predicates[64] && true && true && true) {
    return rewrite_636_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[103] && predicates[64] && true && true && true) {
    return rewrite_636_1(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[12] && predicates[122] && true && true) {
    return rewrite_636_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && predicates[99] && true && true && true && true) {
    return rewrite_636_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && predicates[82] && true && true && true && true) {
    return rewrite_636_4(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && predicates[89] && true && true && true) {
    return rewrite_636_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && predicates[99] && true && true && true && true) {
    return rewrite_636_6(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[12] && predicates[122] && true && true) {
    return rewrite_636_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && predicates[97] && true && true && true && true) {
    return rewrite_636_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && predicates[120] && true && true && true && true && true) {
    return rewrite_636_9(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && predicates[82] && true && true && true && true) {
    return rewrite_636_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && predicates[138] && true && true && true) {
    return rewrite_636_11(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && predicates[89] && true && true && true) {
    return rewrite_636_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && predicates[120] && true && true && true && true && true) {
    return rewrite_636_13(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && predicates[97] && true && true && true && true) {
    return rewrite_636_14(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && predicates[138] && true && true && true) {
    return rewrite_636_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_636(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && true && predicates[87] && true && true && true) {
    return rewrite_641_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[103] && true && true) {
    return rewrite_641_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && true && predicates[52] && true && true) {
    return rewrite_641_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[12] && true) {
    return rewrite_641_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[154] && true && true && true) {
    return rewrite_641_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[107] && true && true) {
    return rewrite_641_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && true && predicates[87] && true && true && true) {
    return rewrite_641_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && predicates[107] && true && true) {
    return rewrite_641_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && true && predicates[87] && true && true && true) {
    return rewrite_641_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && true && predicates[52] && true && true) {
    return rewrite_641_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && true && predicates[52] && true && true) {
    return rewrite_641_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && true && predicates[87] && true && true && true) {
    return rewrite_641_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && predicates[103] && true && true) {
    return rewrite_641_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && predicates[12] && true) {
    return rewrite_641_13(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && true && predicates[52] && true && true) {
    return rewrite_641_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && predicates[154] && true && true && true) {
    return rewrite_641_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_641(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true) {
    return rewrite_644_0(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true) {
    return rewrite_644_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true && true) {
    return rewrite_644_2(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true) {
    return rewrite_644_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true) {
    return rewrite_644_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true) {
    return rewrite_644_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true) {
    return rewrite_644_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true) {
    return rewrite_644_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true) {
    return rewrite_644_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && predicates[157] && true && true && true) {
    return rewrite_644_9(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true) {
    return rewrite_644_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true) {
    return rewrite_644_11(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true) {
    return rewrite_644_12(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true) {
    return rewrite_644_13(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true && true) {
    return rewrite_644_14(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true && true) {
    return rewrite_644_15(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && predicates[129] && true && true) {
    return rewrite_644_16(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && predicates[115] && true && true) {
    return rewrite_644_17(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && predicates[105] && true && true && true && true) {
    return rewrite_644_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && predicates[75] && true && true) {
    return rewrite_644_19(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && predicates[143] && true && true && true) {
    return rewrite_644_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true && true) {
    return rewrite_644_21(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && predicates[88] && true) {
    return rewrite_644_22(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && predicates[68] && true && true && true) {
    return rewrite_644_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_644(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[74] && true && predicates[34] && predicates[138] && true && true && true) {
    return rewrite_651_0(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && predicates[41] && predicates[80] && true && true) {
    return rewrite_651_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && predicates[82] && true && true && true && true) {
    return rewrite_651_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && predicates[120] && true && true && true && true && true) {
    return rewrite_651_3(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && predicates[41] && predicates[80] && true && true) {
    return rewrite_651_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && predicates[152] && true && true && true) {
    return rewrite_651_5(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && predicates[41] && predicates[80] && true && true) {
    return rewrite_651_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && predicates[152] && true && true && true) {
    return rewrite_651_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && predicates[152] && true && true && true) {
    return rewrite_651_8(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && predicates[120] && true && true && true && true && true) {
    return rewrite_651_9(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && predicates[114] && predicates[99] && true && true && true && true) {
    return rewrite_651_10(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && predicates[41] && predicates[80] && true && true) {
    return rewrite_651_11(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && predicates[82] && true && true && true && true) {
    return rewrite_651_12(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && predicates[114] && predicates[99] && true && true && true && true) {
    return rewrite_651_13(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && predicates[82] && true && true && true && true) {
    return rewrite_651_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && predicates[120] && true && true && true && true && true) {
    return rewrite_651_15(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && predicates[82] && true && true && true && true) {
    return rewrite_651_16(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && predicates[152] && true && true && true) {
    return rewrite_651_17(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && predicates[120] && true && true && true && true && true) {
    return rewrite_651_18(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && predicates[34] && predicates[138] && true && true && true) {
    return rewrite_651_19(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && predicates[34] && predicates[138] && true && true && true) {
    return rewrite_651_20(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && predicates[114] && predicates[99] && true && true && true && true) {
    return rewrite_651_21(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && predicates[34] && predicates[138] && true && true && true) {
    return rewrite_651_22(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && predicates[114] && predicates[99] && true && true && true && true) {
    return rewrite_651_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_651(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][0] == node[1][0][0] && predicates[52] && true && true) {
    return rewrite_653_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_653_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[25] && node[0][1] == node[1][1][0]) {
    return rewrite_653_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_653_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_653_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[25] && node[0][0] == node[1][1][0]) {
    return rewrite_653_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][0] == node[1][0][0] && predicates[52] && true && true) {
    return rewrite_653_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[25] && node[0][1] == node[1][1][0]) {
    return rewrite_653_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][1] == node[1][0][0] && predicates[52] && true && true) {
    return rewrite_653_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_653_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][1] == node[1][0][0] && predicates[52] && true && true) {
    return rewrite_653_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_653_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_653_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && predicates[25] && node[0][0] == node[1][1][0]) {
    return rewrite_653_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_653_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_653_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_653(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[49] && predicates[89] && true && true && true) {
    return rewrite_654_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && predicates[57] && true && true && true) {
    return rewrite_654_1(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[49] && true && predicates[22] && true && true) {
    return rewrite_654_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[47] && true && predicates[148] && true && true && true) {
    return rewrite_654_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[47] && true && predicates[148] && true && true && true) {
    return rewrite_654_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && predicates[120] && true && true && true && true && true) {
    return rewrite_654_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && predicates[120] && true && true && true && true && true) {
    return rewrite_654_6(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[49] && predicates[89] && true && true && true) {
    return rewrite_654_7(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && predicates[97] && true && true && true && true) {
    return rewrite_654_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && predicates[36] && true && true && true && true) {
    return rewrite_654_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[47] && predicates[99] && true && true && true && true) {
    return rewrite_654_10(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && predicates[57] && true && true && true) {
    return rewrite_654_11(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[49] && true && predicates[22] && true && true) {
    return rewrite_654_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[47] && predicates[99] && true && true && true && true) {
    return rewrite_654_13(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && predicates[97] && true && true && true && true) {
    return rewrite_654_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && predicates[36] && true && true && true && true) {
    return rewrite_654_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_654(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_0(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_2(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_5(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_8(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_10(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_12(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_14(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_16(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_17(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_18(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_19(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_20(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_22(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_23(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_24(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_25(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_26(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_27(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_28(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_29(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[52] && true && true && true) {
    return rewrite_413_30(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_31(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_32(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_33(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_34(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_35(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[145] && true && true && true) {
    return rewrite_413_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_37(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_38(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_39(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_41(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_42(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_43(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[145] && true && true && true) {
    return rewrite_413_44(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[65] && true && true) {
    return rewrite_413_45(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[87] && true && true && true && true) {
    return rewrite_413_46(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[65] && true && true) {
    return rewrite_413_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_413(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_427_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_427_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && true) {
    return rewrite_427_2(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_427_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_427_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_427_5(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_427_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_427_7(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_427_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_427_9(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_427_10(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_427_11(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_427_12(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_427_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_427_14(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_427_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_427_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_427_17(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_427_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_427_19(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_427_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_427_21(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && true) {
    return rewrite_427_22(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_427_23(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && true) {
    return rewrite_427_24(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_427_25(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_427_26(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[66] && true && true && true && true && true) {
    return rewrite_427_27(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_427_28(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_427_29(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && true) {
    return rewrite_427_30(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_427_31(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[5] && true && true && true && true) {
    return rewrite_427_32(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_427_33(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_427_34(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_427_35(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && true) {
    return rewrite_427_36(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[85] && true && true && true && true) {
    return rewrite_427_37(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[147] && true && true && true && true) {
    return rewrite_427_38(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[92] && true && true) {
    return rewrite_427_39(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[17] && true && true && true) {
    return rewrite_427_40(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[61] && true && true && true) {
    return rewrite_427_41(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[112] && true && true && true && true) {
    return rewrite_427_42(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_427_43(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[137] && true && true && true && true && true) {
    return rewrite_427_44(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[38] && true && true && true) {
    return rewrite_427_45(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && true) {
    return rewrite_427_46(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[81] && true && true && true && true && true) {
    return rewrite_427_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_427(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && true) {
    return rewrite_450_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && true) {
    return rewrite_450_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_450_2(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_450_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_450_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_450_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && true) {
    return rewrite_450_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_450_7(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_450_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_450_9(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_450_10(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && true) {
    return rewrite_450_11(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_450_12(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_450_13(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_450_14(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_450_15(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_450_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && true) {
    return rewrite_450_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_450_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && true) {
    return rewrite_450_19(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_450_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_450_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && true) {
    return rewrite_450_22(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_450_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && true) {
    return rewrite_450_24(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && true) {
    return rewrite_450_25(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && true) {
    return rewrite_450_26(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_450_27(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_450_28(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_450_29(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_450_30(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_450_31(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[118] && true && true && true && true && true) {
    return rewrite_450_32(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[28] && true && true && true && true) {
    return rewrite_450_33(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && true) {
    return rewrite_450_34(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_450_35(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_450_36(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[141] && true && true && true) {
    return rewrite_450_37(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && true) {
    return rewrite_450_38(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[2] && true && true && true && true && true) {
    return rewrite_450_39(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && true) {
    return rewrite_450_40(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && true) {
    return rewrite_450_41(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_450_42(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && true) {
    return rewrite_450_43(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[59] && true && true && true && true && true) {
    return rewrite_450_44(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[94] && true && true && true && true && true && true) {
    return rewrite_450_45(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[69] && true && true && true && true) {
    return rewrite_450_46(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[83] && true && true && true && true) {
    return rewrite_450_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_450(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_1(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_2(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_6(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_7(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_8(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_9(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_12(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_13(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_14(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_15(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_16(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_19(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_20(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_22(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_23(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_24(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_25(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_26(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_27(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_28(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_29(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_30(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_31(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_32(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_33(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_34(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_35(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_36(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_37(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_38(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_39(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_40(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_41(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_42(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_43(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_44(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_45(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_46(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_47(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_48(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_49(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_50(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_51(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_52(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_53(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_54(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[27] && true && true && true && true) {
    return rewrite_460_55(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_56(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_57(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_58(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_59(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_60(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_61(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_62(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_63(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_64(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_65(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[130] && true && true && true && true) {
    return rewrite_460_66(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[98] && true && true && true && true && true) {
    return rewrite_460_67(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_68(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[158] && true && true && true) {
    return rewrite_460_69(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[6] && true && true && true && true && true) {
    return rewrite_460_70(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[95] && true && true && true && true && true && true) {
    return rewrite_460_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_460(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_475_0(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_1(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && true && true) {
    return rewrite_475_2(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_475_3(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_475_4(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_475_5(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_6(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_475_7(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && true && true) {
    return rewrite_475_8(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_9(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_10(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && true) {
    return rewrite_475_11(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_12(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_475_13(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_475_14(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_15(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_16(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_17(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_18(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_19(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_20(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && true) {
    return rewrite_475_21(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_22(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_475_23(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_24(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_25(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_26(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_27(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_475_28(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_475_29(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_475_30(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_475_31(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_32(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_33(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && true && true) {
    return rewrite_475_34(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && true && true) {
    return rewrite_475_35(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && true) {
    return rewrite_475_36(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_475_37(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_38(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_39(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_475_40(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_475_41(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_42(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_43(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && true) {
    return rewrite_475_44(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_475_45(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_46(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && true) {
    return rewrite_475_47(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_48(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && true && true) {
    return rewrite_475_49(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_475_50(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_475_51(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_475_52(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_475_53(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_54(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_55(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_56(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_57(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_475_58(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_59(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[48] && true && true && true) {
    return rewrite_475_60(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_61(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_62(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_63(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[39] && true && true && true && true) {
    return rewrite_475_64(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_475_65(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_475_66(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_475_67(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[48] && true && true && true) {
    return rewrite_475_68(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_475_69(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_70(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_475_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_475(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_3(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_8(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_15(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_16(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_18(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_20(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_21(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_23(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_24(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_25(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_26(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_27(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_28(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_29(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_30(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_31(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_32(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_501_33(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_34(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_35(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_36(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_37(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_501_38(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_39(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_40(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[117] && true && true) {
    return rewrite_501_41(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_42(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_43(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_44(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[117] && true && true) {
    return rewrite_501_45(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_501_46(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[117] && true && true) {
    return rewrite_501_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_501(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_9(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_13(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_14(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_15(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_17(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_18(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_19(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_20(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_21(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_22(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_23(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_24(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_25(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_26(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_27(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_28(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_29(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_31(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_32(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_33(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_34(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_35(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_36(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_37(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_38(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_39(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && predicates[87] && true && true && true) {
    return rewrite_506_40(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_41(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_42(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[126] && true && true && true) {
    return rewrite_506_43(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_44(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_45(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && predicates[52] && true && true) {
    return rewrite_506_46(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[7] && true && true && true && true) {
    return rewrite_506_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_506(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_0(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_507_1(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_507_2(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_3(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_5(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && true && true) {
    return rewrite_507_6(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true && true) {
    return rewrite_507_7(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true && true) {
    return rewrite_507_8(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && true && true) {
    return rewrite_507_9(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_507_10(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_11(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_12(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_507_13(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_507_14(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && true && true) {
    return rewrite_507_15(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_16(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_17(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && true && true) {
    return rewrite_507_18(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_19(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_20(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_507_21(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true && true) {
    return rewrite_507_22(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_23(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_24(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_25(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_26(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_27(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && true && true) {
    return rewrite_507_28(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_29(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true && true) {
    return rewrite_507_30(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_507_31(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_507_32(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_507_33(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_507_34(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_507_35(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_507_36(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_37(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_38(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_507_39(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && true && true) {
    return rewrite_507_40(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_41(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_42(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && predicates[128] && true && true) {
    return rewrite_507_43(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_44(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_507_45(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true && true) {
    return rewrite_507_46(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_47(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true && true) {
    return rewrite_507_48(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_507_49(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_507_50(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_51(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true && true) {
    return rewrite_507_52(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_53(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true && true) {
    return rewrite_507_54(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_507_55(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_507_56(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_57(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_58(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_59(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && predicates[128] && true && true) {
    return rewrite_507_60(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_507_61(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && true && true) {
    return rewrite_507_62(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && true && true) {
    return rewrite_507_63(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && true && true) {
    return rewrite_507_64(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_507_65(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_507_66(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_507_67(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_68(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && predicates[128] && true && true) {
    return rewrite_507_69(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && predicates[128] && true && true) {
    return rewrite_507_70(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_507_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_507(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_1(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_3(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_5(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_10(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_11(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_12(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_14(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_15(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_16(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_17(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_18(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_19(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_20(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_21(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_22(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_23(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_24(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_25(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_26(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_27(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_28(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_29(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_30(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_31(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_32(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_33(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_34(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_35(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_36(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_37(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_38(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_39(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_40(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_41(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_42(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_43(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_44(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_45(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_46(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_47(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_48(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_49(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_50(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_51(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_52(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_53(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_54(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_55(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_56(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_57(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_58(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_59(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_60(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_61(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_62(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_63(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_64(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_65(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_66(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_67(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_68(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_509_69(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_70(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[39] && true && true && true) {
    return rewrite_509_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_509(TNode node, const bool* predicates) {
  if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_0(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_1(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_2(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_3(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_4(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_5(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_6(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_7(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_8(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_9(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_10(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_11(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_12(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_13(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_14(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_15(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_16(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_17(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_18(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_19(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_20(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_21(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_22(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_23(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_24(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_25(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_26(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_27(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_28(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_29(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_30(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_31(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_32(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_33(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_34(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_35(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_36(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_37(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_38(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_39(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_40(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_41(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_42(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_43(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_44(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_45(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_46(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_47(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_48(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_49(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_50(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true && true) {
    return rewrite_510_51(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true && true) {
    return rewrite_510_52(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_53(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_54(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_55(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_56(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && predicates[4] && true && true) {
    return rewrite_510_57(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_58(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_59(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_60(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_61(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_62(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_63(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_64(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_65(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true && true) {
    return rewrite_510_66(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && predicates[35] && true && true && true) {
    return rewrite_510_67(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true && true) {
    return rewrite_510_68(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true && true) {
    return rewrite_510_69(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && predicates[106] && true && true && true && true) {
    return rewrite_510_70(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true && true) {
    return rewrite_510_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_510(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_517_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_517_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_517_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_517_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_517_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_517_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_517_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_517_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && true) {
    return rewrite_517_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && true) {
    return rewrite_517_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_517_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && true) {
    return rewrite_517_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_517_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_517_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_517_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_517_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_517_16(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && true) {
    return rewrite_517_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_517_18(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_517_19(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && true) {
    return rewrite_517_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_517_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_517_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && true) {
    return rewrite_517_23(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && true) {
    return rewrite_517_24(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && true) {
    return rewrite_517_25(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_517_26(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_517_27(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && true) {
    return rewrite_517_28(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_517_29(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_517_30(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && true) {
    return rewrite_517_31(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_517_32(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_517_33(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_517_34(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_517_35(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_517_36(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && true) {
    return rewrite_517_37(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_517_38(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_517_39(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_517_40(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_517_41(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_517_42(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_517_43(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_517_44(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_517_45(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && true) {
    return rewrite_517_46(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_517_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_517(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_519_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && true) {
    return rewrite_519_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_519_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && true) {
    return rewrite_519_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_519_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_519_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_519_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_519_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_519_8(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_519_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_519_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][0] == node[1][0][2] && true) {
    return rewrite_519_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && true) {
    return rewrite_519_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && true) {
    return rewrite_519_13(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_519_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_519_15(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][1] == node[1][1][0] && true && true) {
    return rewrite_519_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_519_17(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][1] == node[1][1]) {
    return rewrite_519_18(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_519_19(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_519_20(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][2] == node[1][1]) {
    return rewrite_519_21(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && true) {
    return rewrite_519_22(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][2] == node[1][1]) {
    return rewrite_519_23(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][1] == node[1][0][1] && true && true) {
    return rewrite_519_24(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][0] == node[1][0][0] && true && true && true) {
    return rewrite_519_25(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][1] == node[1][0] && true) {
    return rewrite_519_26(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_519_27(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_519_28(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_519_29(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_519_30(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_519_31(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && true && node[0][1] == node[1][0][2] && true) {
    return rewrite_519_32(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_519_33(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][2] == node[1][0] && true) {
    return rewrite_519_34(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][1] == node[1][1][1] && true) {
    return rewrite_519_35(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][0] == node[1][1][2]) {
    return rewrite_519_36(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && true) {
    return rewrite_519_37(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && node[0][0] == node[1][1][0] && true && true) {
    return rewrite_519_38(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && node[0][1][1] == node[1][0] && true) {
    return rewrite_519_39(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && predicates[117] && true && node[0][1][1] == node[1][1]) {
    return rewrite_519_40(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && true && node[0][1] == node[1][1][2]) {
    return rewrite_519_41(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && node[0][1] == node[1][0][0] && true && true && true) {
    return rewrite_519_42(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_519_43(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[132] && true && node[0][0] == node[1][0][1] && true && true) {
    return rewrite_519_44(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_519_45(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[126] && true && node[0][0] == node[1][1][1] && true) {
    return rewrite_519_46(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && predicates[117] && node[0][0][2] == node[1][0] && true) {
    return rewrite_519_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_519(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_525_0(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_525_1(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_525_2(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_525_3(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && node[0][1] == node[2][1]) {
    return rewrite_525_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && node[0][0] == node[2][1]) {
    return rewrite_525_5(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_525_6(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && node[1][1] == node[2][1]) {
    return rewrite_525_7(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_525_8(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && node[0][0] == node[2][1]) {
    return rewrite_525_9(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && node[1][1] == node[2][1]) {
    return rewrite_525_10(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_525_11(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_525_12(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_525_13(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && node[1][1] == node[2][1]) {
    return rewrite_525_14(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && node[1][0] == node[2][1]) {
    return rewrite_525_15(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_525_16(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && node[1][0] == node[2][1]) {
    return rewrite_525_17(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_525_18(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_525_19(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_525_20(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_525_21(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && node[0][1] == node[2][1]) {
    return rewrite_525_22(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_525_23(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_525_24(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_525_25(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && node[0][0] == node[2][1]) {
    return rewrite_525_26(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_525_27(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && node[0][1] == node[2][1]) {
    return rewrite_525_28(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && node[1][1] == node[2][1]) {
    return rewrite_525_29(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_525_30(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_525_31(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_525_32(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && node[0][0] == node[2][1]) {
    return rewrite_525_33(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_525_34(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && node[1][0] == node[2][1]) {
    return rewrite_525_35(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && node[1][0] == node[2][1]) {
    return rewrite_525_36(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_525_37(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_525_38(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_525_39(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_525_40(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_525_41(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_525_42(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_525_43(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_525_44(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && node[0][1] == node[2][1]) {
    return rewrite_525_45(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_525_46(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_525_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_525(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_532_0(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_1(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_2(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_3(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_532_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_532_5(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_532_6(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_532_7(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_532_8(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_532_9(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_10(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_11(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_12(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_532_13(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_532_14(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_532_15(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_532_16(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_17(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_532_18(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_532_19(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_532_20(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_532_21(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_532_22(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_532_23(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_24(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_532_25(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_26(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_532_27(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_532_28(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_29(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_532_30(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_31(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_32(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_532_33(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_532_34(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_35(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_532_36(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_532_37(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_532_38(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_532_39(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_40(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_532_41(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_532_42(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && predicates[128] && true && true) {
    return rewrite_532_43(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_532_44(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && predicates[128] && true && true) {
    return rewrite_532_45(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_532_46(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_532_47(node);
  }
  else {
    return node;
  }
}
Node rewrite_532(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_553_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && predicates[109] && true) {
    return rewrite_553_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_553_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[25] && true) {
    return rewrite_553_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && true && predicates[52] && true && true) {
    return rewrite_553_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && predicates[25] && true) {
    return rewrite_553_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && true && predicates[52] && true && true) {
    return rewrite_553_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && predicates[109] && true) {
    return rewrite_553_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_553(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_555_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && true && true) {
    return rewrite_555_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && true && true) {
    return rewrite_555_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && true && true) {
    return rewrite_555_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_555_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && true && true) {
    return rewrite_555_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_555_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_555_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_555(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[159] && predicates[137] && true && true && predicates[25] && true) {
    return rewrite_590_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_590_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && predicates[81] && true && true && true) {
    return rewrite_590_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && predicates[113] && true && true) {
    return rewrite_590_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[137] && true && true && predicates[25] && true) {
    return rewrite_590_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_590_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && predicates[113] && true && true) {
    return rewrite_590_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && predicates[81] && true && true && true) {
    return rewrite_590_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_590(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && true && predicates[117] && true && true) {
    return rewrite_591_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && true && true && predicates[117] && true && true) {
    return rewrite_591_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && true && predicates[117] && true && true) {
    return rewrite_591_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && true && true && predicates[117] && true && true) {
    return rewrite_591_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && predicates[114] && true && true) {
    return rewrite_591_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && predicates[34] && true) {
    return rewrite_591_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && predicates[34] && true) {
    return rewrite_591_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && predicates[114] && true && true) {
    return rewrite_591_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_591(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && predicates[12] && true) {
    return rewrite_592_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && true && true && predicates[109] && true) {
    return rewrite_592_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && true && predicates[109] && true) {
    return rewrite_592_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && predicates[34] && true && true) {
    return rewrite_592_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && predicates[114] && true && true && true) {
    return rewrite_592_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && predicates[107] && true && true) {
    return rewrite_592_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[103] && true && predicates[109] && true) {
    return rewrite_592_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && true && true && predicates[109] && true) {
    return rewrite_592_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_592(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_610_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_610_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_610_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_610_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_610_4(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_610_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_610_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_610_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_610(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && true && predicates[45] && true && true) {
    return rewrite_624_0(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && true && true && predicates[34] && true) {
    return rewrite_624_1(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && true && predicates[45] && true && true) {
    return rewrite_624_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && true && predicates[56] && true && true && true) {
    return rewrite_624_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && predicates[76] && true && true) {
    return rewrite_624_4(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && true && true && predicates[34] && true) {
    return rewrite_624_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && true && predicates[56] && true && true && true) {
    return rewrite_624_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && predicates[76] && true && true) {
    return rewrite_624_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_624(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_630_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && predicates[109] && true) {
    return rewrite_630_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && predicates[109] && true) {
    return rewrite_630_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_630_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_630_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && predicates[109] && true) {
    return rewrite_630_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && predicates[109] && true) {
    return rewrite_630_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_630_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_630(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[159] && predicates[137] && true && predicates[68] && true && true) {
    return rewrite_632_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && predicates[127] && true && true && true && true) {
    return rewrite_632_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && predicates[58] && true && true) {
    return rewrite_632_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && predicates[53] && true && true && true) {
    return rewrite_632_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[137] && predicates[105] && true && true && true) {
    return rewrite_632_4(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[5] && predicates[143] && true && true) {
    return rewrite_632_5(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[5] && true && predicates[115] && true) {
    return rewrite_632_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && predicates[110] && true && true && true) {
    return rewrite_632_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_632(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_667_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_667_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_667_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_667_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_667_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_667_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_667_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_667_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_667(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_693_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_693_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && predicates[25] && node[0][0] == node[1][1][0]) {
    return rewrite_693_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][0] == node[1][0][0] && predicates[25] && true) {
    return rewrite_693_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && predicates[25] && node[0][1] == node[1][1][0]) {
    return rewrite_693_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][1] == node[1][0][0] && predicates[25] && true) {
    return rewrite_693_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_693_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_693_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_693(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_374_0(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[128] && true && true) {
    return rewrite_374_1(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[128] && true && true) {
    return rewrite_374_2(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_374_3(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_374_4(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[128] && true && true) {
    return rewrite_374_5(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_374_6(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_374_7(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[117] && true && true && true) {
    return rewrite_374_8(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_374_9(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[117] && true && true && true) {
    return rewrite_374_10(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_374_11(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_374_12(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_374_13(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && predicates[128] && true && true) {
    return rewrite_374_14(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[128] && true && true) {
    return rewrite_374_15(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && predicates[117] && true && true && true) {
    return rewrite_374_16(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && predicates[117] && true && true && true) {
    return rewrite_374_17(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_374_18(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && predicates[128] && true && true) {
    return rewrite_374_19(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_374_20(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_374_21(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && predicates[128] && true && true) {
    return rewrite_374_22(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && predicates[128] && true && true) {
    return rewrite_374_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_374(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_388_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_388_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_388_2(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && true) {
    return rewrite_388_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && true) {
    return rewrite_388_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_388_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_388_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_388_7(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_388_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_388_9(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_388_10(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_388_11(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_388_12(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_388_13(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_388_14(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_388_15(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_388_16(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_388_17(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && predicates[109] && true) {
    return rewrite_388_18(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && true) {
    return rewrite_388_19(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_388_20(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_388_21(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && predicates[109] && true) {
    return rewrite_388_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && predicates[109] && true) {
    return rewrite_388_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_388(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_392_0(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_392_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && true) {
    return rewrite_392_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[13] && true && true && true && true && true) {
    return rewrite_392_3(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_392_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && true) {
    return rewrite_392_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_392_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_392_7(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[61] && true && true) {
    return rewrite_392_8(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[112] && true && true && true) {
    return rewrite_392_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[147] && true && true && true) {
    return rewrite_392_10(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[5] && true && true && true) {
    return rewrite_392_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[81] && true && true && true && true) {
    return rewrite_392_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_392_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && predicates[66] && true && true && true && true) {
    return rewrite_392_14(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[137] && true && true && true && true) {
    return rewrite_392_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_392(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && true) {
    return rewrite_399_0(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && true) {
    return rewrite_399_1(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_399_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_399_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && predicates[52] && true && true && true) {
    return rewrite_399_4(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_399_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_399_6(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_399_7(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && true) {
    return rewrite_399_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_399_9(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_399_10(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && predicates[65] && true && true) {
    return rewrite_399_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && true) {
    return rewrite_399_12(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && predicates[87] && true && true && true && true) {
    return rewrite_399_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && predicates[65] && true && true) {
    return rewrite_399_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && predicates[113] && true && true && true) {
    return rewrite_399_15(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_399_16(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && predicates[121] && true && true) {
    return rewrite_399_17(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && predicates[40] && true) {
    return rewrite_399_18(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && predicates[25] && true && true) {
    return rewrite_399_19(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && predicates[145] && true && true && true) {
    return rewrite_399_20(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && predicates[145] && true && true && true) {
    return rewrite_399_21(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && predicates[40] && true) {
    return rewrite_399_22(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && predicates[121] && true && true) {
    return rewrite_399_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_399(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_5(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_10(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_11(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_12(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_15(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_16(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_17(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_18(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_19(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_20(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_21(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_407_22(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[39] && true && true && true) {
    return rewrite_407_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_407(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_416_0(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_416_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && true) {
    return rewrite_416_2(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && predicates[12] && true && true) {
    return rewrite_416_3(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && true) {
    return rewrite_416_4(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_416_5(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && predicates[156] && true && true && true && true && true) {
    return rewrite_416_6(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && predicates[34] && true && true && true) {
    return rewrite_416_7(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && true) {
    return rewrite_416_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_416_9(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && predicates[16] && true) {
    return rewrite_416_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_416_11(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && predicates[103] && true && true && true) {
    return rewrite_416_12(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_416_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_416_14(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && predicates[107] && true && true && true) {
    return rewrite_416_15(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && predicates[37] && true && true) {
    return rewrite_416_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && true) {
    return rewrite_416_17(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_416_18(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && predicates[114] && true && true && true && true) {
    return rewrite_416_19(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && predicates[9] && true && true) {
    return rewrite_416_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && predicates[76] && true && true && true && true) {
    return rewrite_416_21(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && predicates[10] && true && true && true) {
    return rewrite_416_22(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && predicates[154] && true && true && true && true) {
    return rewrite_416_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_416(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_7(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_9(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_12(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[87] && true && true && true) {
    return rewrite_419_14(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[52] && true && true) {
    return rewrite_419_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_419(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_8(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_9(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_10(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_13(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_14(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_15(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_16(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_17(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_18(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_19(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && predicates[117] && true && true) {
    return rewrite_437_20(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_21(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_437_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_437(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_439_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_439_1(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_439_2(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_439_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_439_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_439_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && true) {
    return rewrite_439_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && true) {
    return rewrite_439_7(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && true) {
    return rewrite_439_8(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && true) {
    return rewrite_439_9(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_439_10(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_439_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_439_12(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_439_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && true) {
    return rewrite_439_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_439_15(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_439_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[95] && true && true && true && true && true) {
    return rewrite_439_17(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_439_18(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_439_19(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_439_20(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[130] && true && true && true) {
    return rewrite_439_21(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[98] && true && true && true && true) {
    return rewrite_439_22(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[6] && true && true && true && true) {
    return rewrite_439_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_439(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_456_0(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_456_1(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_456_2(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_456_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_456_4(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_456_5(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_456_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_456_7(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_456_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_456_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true) {
    return rewrite_456_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_456_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true) {
    return rewrite_456_12(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_456_13(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_456_14(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && predicates[85] && true && true && true) {
    return rewrite_456_15(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true) {
    return rewrite_456_16(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_456_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && predicates[81] && true && true && true && true) {
    return rewrite_456_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_456_19(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && predicates[137] && true && true && true && true) {
    return rewrite_456_20(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && predicates[13] && true && true && true && true && true) {
    return rewrite_456_21(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && predicates[38] && true && true) {
    return rewrite_456_22(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && predicates[5] && true && true && true) {
    return rewrite_456_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_456(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_482_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_482_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && true) {
    return rewrite_482_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_482_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && true) {
    return rewrite_482_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_482_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_482_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && true) {
    return rewrite_482_7(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_482_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_482_9(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && true) {
    return rewrite_482_10(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && true) {
    return rewrite_482_11(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && true) {
    return rewrite_482_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_482_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[117] && true && true) {
    return rewrite_482_14(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[117] && true && true) {
    return rewrite_482_15(node);
  }
  else {
    return node;
  }
}
Node rewrite_482(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_505_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_505_1(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_505_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_505_3(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_505_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_505_5(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true) {
    return rewrite_505_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_505_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_505_8(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_505_9(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_505_10(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true) {
    return rewrite_505_11(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_505_12(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_505_13(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true) {
    return rewrite_505_14(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[117] && true && true) {
    return rewrite_505_15(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_505_16(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_505_17(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[117] && true && true) {
    return rewrite_505_18(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_505_19(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[117] && true && true) {
    return rewrite_505_20(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_505_21(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_505_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_505_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_505(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_597_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_597_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[109] && true) {
    return rewrite_597_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && predicates[109] && true) {
    return rewrite_597_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_597(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_376_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && true && true) {
    return rewrite_376_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && true && true) {
    return rewrite_376_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_376_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && true && true) {
    return rewrite_376_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && true && true) {
    return rewrite_376_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_376_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_376_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_376(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_377_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_377_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[109] && true) {
    return rewrite_377_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_377_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_377_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_377_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && predicates[109] && true) {
    return rewrite_377_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && predicates[109] && true) {
    return rewrite_377_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_377(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[109] && true) {
    return rewrite_395_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_395_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_395_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_395_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_395_4(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_395_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_395_6(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[109] && true) {
    return rewrite_395_7(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && predicates[109] && true) {
    return rewrite_395_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[109] && true) {
    return rewrite_395_9(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && predicates[109] && true) {
    return rewrite_395_10(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && predicates[109] && true) {
    return rewrite_395_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_395(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_403_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && true) {
    return rewrite_403_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && true) {
    return rewrite_403_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_403_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_403_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && true) {
    return rewrite_403_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_403_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && predicates[117] && true && true) {
    return rewrite_403_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_403(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && true) {
    return rewrite_410_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[52] && true && true) {
    return rewrite_410_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[52] && true && true) {
    return rewrite_410_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && true) {
    return rewrite_410_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && true) {
    return rewrite_410_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[87] && true && true && true) {
    return rewrite_410_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && predicates[25] && true) {
    return rewrite_410_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && predicates[113] && true && true) {
    return rewrite_410_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_410(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && true) {
    return rewrite_438_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && true) {
    return rewrite_438_1(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_438_2(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[81] && true && true && true) {
    return rewrite_438_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_438_4(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[5] && true && true) {
    return rewrite_438_5(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[137] && true && true && true) {
    return rewrite_438_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[13] && true && true && true && true) {
    return rewrite_438_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_438(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && predicates[101] && true && predicates[76] && true && true && true) {
    return rewrite_443_0(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && predicates[107] && true && true) {
    return rewrite_443_1(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && predicates[12] && true) {
    return rewrite_443_2(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && predicates[114] && true && true && true) {
    return rewrite_443_3(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && predicates[156] && true && true && true && true) {
    return rewrite_443_4(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && predicates[103] && true && true) {
    return rewrite_443_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && predicates[154] && true && true && true) {
    return rewrite_443_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && predicates[34] && true && true) {
    return rewrite_443_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_443(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[45] && true && true) {
    return rewrite_447_0(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[45] && true && true) {
    return rewrite_447_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && true && true) {
    return rewrite_447_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[56] && true && true && true) {
    return rewrite_447_3(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && true && true && true) {
    return rewrite_447_4(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && true && true) {
    return rewrite_447_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[11] && true && true && true && true) {
    return rewrite_447_6(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[47] && true && true && true) {
    return rewrite_447_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_447(TNode node, const bool* predicates) {
  if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_0(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_1(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_2(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_3(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_5(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_6(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_7(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_8(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_9(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_10(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_11(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_12(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_13(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_14(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_15(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_16(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_17(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_18(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_19(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_20(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_21(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_22(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_23(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_24(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_25(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_26(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_27(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_28(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_29(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_30(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_31(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_32(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_33(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_34(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_35(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_36(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_37(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_38(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_39(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_40(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_41(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_42(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_43(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_44(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_45(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_46(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_47(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_48(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_49(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_50(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_51(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_52(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && predicates[128] && true && true) {
    return rewrite_451_53(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_54(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_55(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_56(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_57(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_58(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_59(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_60(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_61(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_62(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && predicates[128] && true && true) {
    return rewrite_451_63(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[39] && true && true && true && true) {
    return rewrite_451_64(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_65(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[48] && true && true && true) {
    return rewrite_451_66(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_67(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_68(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && predicates[117] && true && true && true) {
    return rewrite_451_69(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_70(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[48] && true && true && true) {
    return rewrite_451_71(node);
  }
  else {
    return node;
  }
}
Node rewrite_451(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[74] && true && true && predicates[41] && true) {
    return rewrite_464_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && true && true && true) {
    return rewrite_464_1(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && predicates[114] && true && true && true) {
    return rewrite_464_2(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && predicates[34] && true && true) {
    return rewrite_464_3(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && true && true && true && true) {
    return rewrite_464_4(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && predicates[114] && true && true && true) {
    return rewrite_464_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && predicates[76] && true && true && true) {
    return rewrite_464_6(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && predicates[156] && true && true && true && true) {
    return rewrite_464_7(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && true && true) {
    return rewrite_464_8(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && predicates[41] && true) {
    return rewrite_464_9(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && predicates[34] && true && true) {
    return rewrite_464_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && predicates[31] && true && true) {
    return rewrite_464_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_464(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && true && true) {
    return rewrite_465_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && predicates[15] && true && true && true) {
    return rewrite_465_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[47] && true && true && true) {
    return rewrite_465_2(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[49] && true && true) {
    return rewrite_465_3(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && predicates[49] && true && true) {
    return rewrite_465_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && true && true && true) {
    return rewrite_465_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && predicates[11] && true && true && true && true) {
    return rewrite_465_6(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && predicates[47] && true && true && true) {
    return rewrite_465_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_465(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && node[0][1] == node[1][1][0]) {
    return rewrite_477_0(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && true && node[0][0][0] == node[1][1]) {
    return rewrite_477_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && predicates[25] && node[0][0] == node[1][1][0]) {
    return rewrite_477_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][0] == node[1][0][0] && true) {
    return rewrite_477_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && true && node[0][1][0] == node[1][1]) {
    return rewrite_477_4(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[117] && node[0][0][0] == node[1][0] && true) {
    return rewrite_477_5(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[117] && node[0][1][0] == node[1][0] && true) {
    return rewrite_477_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && predicates[159] && node[0][1] == node[1][0][0] && true) {
    return rewrite_477_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_477(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_0(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_1(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_2(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_3(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_5(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_6(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_7(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_8(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_9(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_10(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_11(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_12(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_13(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_14(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_15(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_16(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_17(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_18(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_19(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_20(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && true && true) {
    return rewrite_367_21(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && true) {
    return rewrite_367_22(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && true) {
    return rewrite_367_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_367(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && true && predicates[109] && true) {
    return rewrite_387_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_387_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && predicates[109] && true) {
    return rewrite_387_2(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_387_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_387(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_411_0(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && predicates[25] && true) {
    return rewrite_411_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && true) {
    return rewrite_411_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && predicates[113] && true && true) {
    return rewrite_411_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_411(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[153] && true && predicates[34] && true) {
    return rewrite_444_0(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && predicates[114] && true && true) {
    return rewrite_444_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && predicates[156] && true && true && true) {
    return rewrite_444_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && predicates[76] && true && true) {
    return rewrite_444_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_444(TNode node, const bool* predicates) {
  if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && node[1][1][0] == node[2]) {
    return rewrite_471_0(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && node[1][2][0] == node[2]) {
    return rewrite_471_1(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && node[0] == node[2][2][0]) {
    return rewrite_471_2(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && node[0][0][0] == node[1] && true) {
    return rewrite_471_3(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && node[0][1][0] == node[1] && true) {
    return rewrite_471_4(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && node[0][0][0] == node[2]) {
    return rewrite_471_5(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && node[0] == node[1][2][0] && true) {
    return rewrite_471_6(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && node[1][1][0] == node[2]) {
    return rewrite_471_7(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && node[1][0][0] == node[2]) {
    return rewrite_471_8(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && node[1] == node[2][1][0] && true) {
    return rewrite_471_9(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && node[1] == node[2][1][0] && true) {
    return rewrite_471_10(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && node[0][0][0] == node[2]) {
    return rewrite_471_11(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && node[0] == node[2][1][0] && true) {
    return rewrite_471_12(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && node[0][0][0] == node[1] && true) {
    return rewrite_471_13(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && node[0][1][0] == node[2]) {
    return rewrite_471_14(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && node[0][2][0] == node[1] && true) {
    return rewrite_471_15(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && node[0][1][0] == node[2]) {
    return rewrite_471_16(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && node[0][1][0] == node[1] && true) {
    return rewrite_471_17(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && node[0] == node[1][0][0] && true && true && true) {
    return rewrite_471_18(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && node[0] == node[1][1][0] && true && true) {
    return rewrite_471_19(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && node[0][2][0] == node[2]) {
    return rewrite_471_20(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && node[0][2][0] == node[1] && true) {
    return rewrite_471_21(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && node[0] == node[2][0][0] && true && true) {
    return rewrite_471_22(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && node[0][2][0] == node[2]) {
    return rewrite_471_23(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && node[1] == node[2][2][0]) {
    return rewrite_471_24(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && node[1] == node[2][0][0] && true && true) {
    return rewrite_471_25(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && node[0] == node[1][2][0] && true) {
    return rewrite_471_26(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && node[0] == node[1][0][0] && true && true && true) {
    return rewrite_471_27(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && node[0] == node[2][0][0] && true && true) {
    return rewrite_471_28(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && node[0] == node[1][1][0] && true && true) {
    return rewrite_471_29(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && node[1] == node[2][2][0]) {
    return rewrite_471_30(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && node[0] == node[2][1][0] && true) {
    return rewrite_471_31(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && node[0] == node[2][2][0]) {
    return rewrite_471_32(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && node[1] == node[2][0][0] && true && true) {
    return rewrite_471_33(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && node[1][2][0] == node[2]) {
    return rewrite_471_34(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && node[1][0][0] == node[2]) {
    return rewrite_471_35(node);
  }
  else {
    return node;
  }
}
Node rewrite_471(TNode node, const bool* predicates) {
  if (predicates[26] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_476_0(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_476_1(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_476_2(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_476_3(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && true) {
    return rewrite_476_4(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_476_5(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && true) {
    return rewrite_476_6(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_476_7(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_476_8(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && true) {
    return rewrite_476_9(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_476_10(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_476_11(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_476_12(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && true) {
    return rewrite_476_13(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_476_14(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_476_15(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && true) {
    return rewrite_476_16(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && true) {
    return rewrite_476_17(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_476_18(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_476_19(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && true) {
    return rewrite_476_20(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && predicates[77] && true && true) {
    return rewrite_476_21(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_476_22(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_476_23(node);
  }
  else if (predicates[26] && true && predicates[39] && predicates[159] && true && true && true && true) {
    return rewrite_476_24(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && true) {
    return rewrite_476_25(node);
  }
  else if (predicates[26] && predicates[70] && true && predicates[113] && true && true && true && true) {
    return rewrite_476_26(node);
  }
  else if (predicates[26] && true && true && predicates[48] && predicates[144] && true && true && true) {
    return rewrite_476_27(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && true) {
    return rewrite_476_28(node);
  }
  else if (predicates[26] && predicates[70] && true && true && predicates[121] && true && true && true) {
    return rewrite_476_29(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_476_30(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && predicates[134] && true) {
    return rewrite_476_31(node);
  }
  else if (predicates[26] && true && predicates[39] && true && predicates[25] && true && true && true) {
    return rewrite_476_32(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_476_33(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && predicates[40] && true && true) {
    return rewrite_476_34(node);
  }
  else if (predicates[26] && predicates[70] && predicates[71] && true && true && true && true && true) {
    return rewrite_476_35(node);
  }
  else {
    return node;
  }
}
Node rewrite_476(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_3(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_5(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_10(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_11(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_12(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_13(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_14(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_15(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_16(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_17(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_18(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_19(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_20(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_21(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[117] && true && true) {
    return rewrite_488_22(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[39] && true && true && true) {
    return rewrite_488_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_488(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && true) {
    return rewrite_500_0(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && true) {
    return rewrite_500_1(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && true) {
    return rewrite_500_2(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_500_3(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_500_4(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && true) {
    return rewrite_500_5(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_500_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_500_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && true) {
    return rewrite_500_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_500_9(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && true) {
    return rewrite_500_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_500_11(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && true) {
    return rewrite_500_12(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_500_13(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_500_14(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[65] && true && true) {
    return rewrite_500_15(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_500_16(node);
  }
  else if (predicates[111] && predicates[70] && predicates[101] && true && true && true && true && true) {
    return rewrite_500_17(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[50] && true && true && true && true) {
    return rewrite_500_18(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[52] && true && true && true) {
    return rewrite_500_19(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && true) {
    return rewrite_500_20(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[87] && true && true && true && true) {
    return rewrite_500_21(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && true) {
    return rewrite_500_22(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[145] && true && true && true) {
    return rewrite_500_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_500(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && true && predicates[126] && true && true && true) {
    return rewrite_512_0(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && true) {
    return rewrite_512_1(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && true) {
    return rewrite_512_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && true) {
    return rewrite_512_3(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && true) {
    return rewrite_512_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && true) {
    return rewrite_512_5(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && true) {
    return rewrite_512_6(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && true) {
    return rewrite_512_7(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[126] && true && true && true) {
    return rewrite_512_8(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && true) {
    return rewrite_512_9(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[126] && true && true && true) {
    return rewrite_512_10(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[126] && true && true && true) {
    return rewrite_512_11(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && true) {
    return rewrite_512_12(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && true) {
    return rewrite_512_13(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && true) {
    return rewrite_512_14(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[126] && true && true && true) {
    return rewrite_512_15(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && true) {
    return rewrite_512_16(node);
  }
  else if (predicates[111] && predicates[149] && predicates[18] && true && true && true && true && true) {
    return rewrite_512_17(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && true) {
    return rewrite_512_18(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && true) {
    return rewrite_512_19(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[126] && true && true && true) {
    return rewrite_512_20(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && true) {
    return rewrite_512_21(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[132] && true && true && true && true) {
    return rewrite_512_22(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[7] && true && true && true && true) {
    return rewrite_512_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_512(TNode node, const bool* predicates) {
  if (predicates[26] && predicates[149] && true && true && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_526_0(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && true) {
    return rewrite_526_1(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_526_2(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && node[1][0] == node[2][1]) {
    return rewrite_526_3(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_526_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_526_5(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][0] == node[1][0] && true && true) {
    return rewrite_526_6(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_526_7(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && node[0][0] == node[2][1]) {
    return rewrite_526_8(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_526_9(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_526_10(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && true) {
    return rewrite_526_11(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && true && node[0][1] == node[2][1]) {
    return rewrite_526_12(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && true) {
    return rewrite_526_13(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && node[1][0] == node[2][0] && true) {
    return rewrite_526_14(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_526_15(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && node[1][1] == node[2][0] && true) {
    return rewrite_526_16(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && node[0][1] == node[1][0] && true && true) {
    return rewrite_526_17(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && true) {
    return rewrite_526_18(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][1] == node[1][1] && true) {
    return rewrite_526_19(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && node[0][1] == node[2][0] && true) {
    return rewrite_526_20(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && predicates[128] && node[0][0] == node[2][0] && true) {
    return rewrite_526_21(node);
  }
  else if (predicates[26] && predicates[149] && true && true && predicates[117] && true && node[0][0] == node[1][1] && true) {
    return rewrite_526_22(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && predicates[128] && true && node[1][1] == node[2][1]) {
    return rewrite_526_23(node);
  }
  else {
    return node;
  }
}
Node rewrite_526(TNode node, const bool* predicates) {
  if (predicates[26] && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_369_0(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && true) {
    return rewrite_369_1(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && true) {
    return rewrite_369_2(node);
  }
  else if (predicates[26] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_369_3(node);
  }
  else if (predicates[26] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_369_4(node);
  }
  else if (predicates[26] && predicates[149] && predicates[71] && true && true && true && true) {
    return rewrite_369_5(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_369_6(node);
  }
  else if (predicates[26] && true && true && predicates[128] && predicates[144] && true && true) {
    return rewrite_369_7(node);
  }
  else if (predicates[26] && predicates[149] && true && predicates[113] && true && true && true) {
    return rewrite_369_8(node);
  }
  else if (predicates[26] && true && predicates[117] && predicates[159] && true && true && true) {
    return rewrite_369_9(node);
  }
  else if (predicates[26] && true && predicates[117] && true && predicates[25] && true && true) {
    return rewrite_369_10(node);
  }
  else if (predicates[26] && true && true && predicates[128] && true && predicates[77] && true) {
    return rewrite_369_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_369(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_0(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_3(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_4(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_5(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_6(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[117] && true && true) {
    return rewrite_371_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_371(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[39] && true && true && true) {
    return rewrite_400_0(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && true) {
    return rewrite_400_1(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && true) {
    return rewrite_400_2(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && true) {
    return rewrite_400_3(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && true) {
    return rewrite_400_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && true) {
    return rewrite_400_5(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && true) {
    return rewrite_400_6(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && true) {
    return rewrite_400_7(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && true) {
    return rewrite_400_8(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && true) {
    return rewrite_400_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && predicates[109] && true) {
    return rewrite_400_10(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[39] && true && true && true) {
    return rewrite_400_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_400(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_430_0(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_430_1(node);
  }
  else if (predicates[111] && true && predicates[39] && true && predicates[25] && true && true) {
    return rewrite_430_2(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && predicates[40] && true) {
    return rewrite_430_3(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_430_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && true) {
    return rewrite_430_5(node);
  }
  else if (predicates[111] && true && predicates[39] && predicates[159] && true && true && true) {
    return rewrite_430_6(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && true) {
    return rewrite_430_7(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && true) {
    return rewrite_430_8(node);
  }
  else if (predicates[111] && predicates[70] && predicates[71] && true && true && true && true) {
    return rewrite_430_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && predicates[121] && true && true) {
    return rewrite_430_10(node);
  }
  else if (predicates[111] && predicates[70] && true && predicates[113] && true && true && true) {
    return rewrite_430_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_430(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_440_0(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_440_1(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && true) {
    return rewrite_440_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && true) {
    return rewrite_440_3(node);
  }
  else if (predicates[111] && predicates[149] && true && predicates[87] && true && true && true) {
    return rewrite_440_4(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[50] && true && true && true) {
    return rewrite_440_5(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[52] && true && true) {
    return rewrite_440_6(node);
  }
  else if (predicates[111] && predicates[149] && predicates[101] && true && true && true && true) {
    return rewrite_440_7(node);
  }
  else {
    return node;
  }
}
Node rewrite_440(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_462_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && true) {
    return rewrite_462_1(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && true) {
    return rewrite_462_2(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && true) {
    return rewrite_462_3(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_462_4(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_462_5(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && true) {
    return rewrite_462_6(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_462_7(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_462_8(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && true) {
    return rewrite_462_9(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[74] && true && true && true) {
    return rewrite_462_10(node);
  }
  else if (predicates[111] && predicates[123] && predicates[150] && true && true && true && true) {
    return rewrite_462_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_462(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[149] && true && predicates[113] && true && true) {
    return rewrite_372_0(node);
  }
  else if (predicates[111] && true && predicates[117] && true && predicates[25] && true) {
    return rewrite_372_1(node);
  }
  else if (predicates[111] && true && predicates[117] && predicates[159] && true && true) {
    return rewrite_372_2(node);
  }
  else if (predicates[111] && predicates[149] && predicates[71] && true && true && true) {
    return rewrite_372_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_372(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && true && predicates[117] && true && true) {
    return rewrite_405_0(node);
  }
  else if (predicates[111] && predicates[123] && true && predicates[117] && true && true) {
    return rewrite_405_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && true) {
    return rewrite_405_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && predicates[109] && true) {
    return rewrite_405_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_405(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[123] && predicates[72] && true && true && true) {
    return rewrite_415_0(node);
  }
  else if (predicates[111] && predicates[123] && predicates[72] && true && true && true) {
    return rewrite_415_1(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_415_2(node);
  }
  else if (predicates[111] && true && predicates[109] && predicates[153] && true && true) {
    return rewrite_415_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_415(TNode node, const bool* predicates) {
  if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_0(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_1(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_2(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_3(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_4(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_5(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_6(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_7(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_8(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_9(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_10(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_11(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_12(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_13(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_14(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_15(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_16(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_17(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_18(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_19(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_20(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_21(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_22(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_23(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_24(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_25(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_26(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_27(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_28(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_29(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_30(node);
  }
  else if (predicates[26] && true && true && predicates[48] && true && true && true) {
    return rewrite_463_31(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_32(node);
  }
  else if (predicates[26] && predicates[70] && true && true && true && true && true) {
    return rewrite_463_33(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_34(node);
  }
  else if (predicates[26] && true && predicates[39] && true && true && true && true) {
    return rewrite_463_35(node);
  }
  else {
    return node;
  }
}
Node rewrite_463(TNode node, const bool* predicates) {
  if (predicates[26] && true && true && predicates[128] && true && true) {
    return rewrite_370_0(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && true) {
    return rewrite_370_1(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && true) {
    return rewrite_370_2(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && true) {
    return rewrite_370_3(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && true) {
    return rewrite_370_4(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && true) {
    return rewrite_370_5(node);
  }
  else if (predicates[26] && true && true && predicates[128] && true && true) {
    return rewrite_370_6(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && true) {
    return rewrite_370_7(node);
  }
  else if (predicates[26] && true && true && predicates[128] && true && true) {
    return rewrite_370_8(node);
  }
  else if (predicates[26] && true && true && predicates[128] && true && true) {
    return rewrite_370_9(node);
  }
  else if (predicates[26] && true && predicates[117] && true && true && true) {
    return rewrite_370_10(node);
  }
  else if (predicates[26] && predicates[149] && true && true && true && true) {
    return rewrite_370_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_370(TNode node, const bool* predicates) {
  if (predicates[111] && predicates[70] && true && true && true && true) {
    return rewrite_442_0(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && true) {
    return rewrite_442_1(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && true) {
    return rewrite_442_2(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && true) {
    return rewrite_442_3(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && true) {
    return rewrite_442_4(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && true) {
    return rewrite_442_5(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && true) {
    return rewrite_442_6(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && true) {
    return rewrite_442_7(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && true) {
    return rewrite_442_8(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && true) {
    return rewrite_442_9(node);
  }
  else if (predicates[111] && predicates[70] && true && true && true && true) {
    return rewrite_442_10(node);
  }
  else if (predicates[111] && true && predicates[39] && true && true && true) {
    return rewrite_442_11(node);
  }
  else {
    return node;
  }
}
Node rewrite_442(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[117] && true && true) {
    return rewrite_375_0(node);
  }
  else if (predicates[111] && true && predicates[117] && true && true) {
    return rewrite_375_1(node);
  }
  else if (predicates[111] && predicates[149] && true && true && true) {
    return rewrite_375_2(node);
  }
  else if (predicates[111] && predicates[149] && true && true && true) {
    return rewrite_375_3(node);
  }
  else {
    return node;
  }
}
Node rewrite_375(TNode node, const bool* predicates) {
  if (predicates[111] && true && predicates[109] && true) {
    return rewrite_394_0(node);
  }
  else if (predicates[111] && predicates[123] && true && true) {
    return rewrite_394_1(node);
  }
  else {
    return node;
  }
}
Node rewrite_394(TNode node, const bool* predicates) {
  if (predicates[26] && true && true && true) {
    return rewrite_534_0(node);
  }
  else if (predicates[26] && true && true && true) {
    return rewrite_534_1(node);
  }
  else if (predicates[26] && true && true && true) {
    return rewrite_534_2(node);
  }
  else if (predicates[26] && true && true && true) {
    return rewrite_534_3(node);
  }
  else if (predicates[26] && true && true && true) {
    return rewrite_534_4(node);
  }
  else if (predicates[26] && true && true && true) {
    return rewrite_534_5(node);
  }
  else {
    return node;
  }
}
Node rewrite_534(TNode node, const bool* predicates) {
  if (predicates[111] && true && true) {
    return rewrite_704_0(node);
  }
  else if (predicates[111] && true && true) {
    return rewrite_704_1(node);
  }
  else {
    return node;
  }
}
RewriteResponse TheoryBVSpecialRewriter::RewriteBITVECTOR_OR(TNode node,  bool prewrite) {
  bool predicates[160];
  for (int i = 0; i < 160; i++) {
    predicates[i] = false;
  }
  predicates[26] = node.getKind() == kind::BITVECTOR_OR && node.getNumChildren() == 3;
  predicates[111] = node.getKind() == kind::BITVECTOR_OR && node.getNumChildren() == 2;
  if (node.getNumChildren() > 0) {
    predicates[70] = node[0].getKind() == kind::BITVECTOR_AND && node[0].getNumChildren() == 3;
    predicates[123] = node[0].getKind() == kind::BITVECTOR_NOT && node[0].getNumChildren() == 1;
    predicates[149] = node[0].getKind() == kind::BITVECTOR_AND && node[0].getNumChildren() == 2;
    if (node[0].getNumChildren() > 2) {
      predicates[121] = node[0][2].getKind() == kind::BITVECTOR_NOT && node[0][2].getNumChildren() == 1;
      predicates[145] = node[0][2].getKind() == kind::BITVECTOR_OR && node[0][2].getNumChildren() == 2;
      if (node[0][2].getNumChildren() > 1) {
        predicates[17] = node[0][2][1].getKind() == kind::BITVECTOR_AND && node[0][2][1].getNumChildren() == 2;
        predicates[37] = node[0][2][1].getKind() == kind::BITVECTOR_NOT && node[0][2][1].getNumChildren() == 1;
        if (node[0][2][1].getNumChildren() > 0) {
          predicates[29] = node[0][2][1][0].getKind() == kind::BITVECTOR_AND && node[0][2][1][0].getNumChildren() == 2;
          predicates[140] = node[0][2][1][0].getKind() == kind::BITVECTOR_NOT && node[0][2][1][0].getNumChildren() == 1;
        }
        if (node[0][2][1].getNumChildren() > 1) {
          predicates[60] = node[0][2][1][1].getKind() == kind::BITVECTOR_NOT && node[0][2][1][1].getNumChildren() == 1;
        }
      }
      if (node[0][2].getNumChildren() > 0) {
        predicates[10] = node[0][2][0].getKind() == kind::BITVECTOR_NOT && node[0][2][0].getNumChildren() == 1;
        predicates[27] = node[0][2][0].getKind() == kind::BITVECTOR_OR && node[0][2][0].getNumChildren() == 3;
        predicates[85] = node[0][2][0].getKind() == kind::BITVECTOR_AND && node[0][2][0].getNumChildren() == 2;
        if (node[0][2][0].getNumChildren() > 1) {
          predicates[129] = node[0][2][0][1].getKind() == kind::BITVECTOR_NOT && node[0][2][0][1].getNumChildren() == 1;
        }
        if (node[0][2][0].getNumChildren() > 0) {
          predicates[55] = node[0][2][0][0].getKind() == kind::BITVECTOR_AND && node[0][2][0][0].getNumChildren() == 2;
          predicates[157] = node[0][2][0][0].getKind() == kind::BITVECTOR_NOT && node[0][2][0][0].getNumChildren() == 1;
        }
      }
    }
    if (node[0].getNumChildren() > 0) {
      predicates[18] = node[0][0].getKind() == kind::BITVECTOR_OR && node[0][0].getNumChildren() == 3;
      predicates[71] = node[0][0].getKind() == kind::BITVECTOR_NOT && node[0][0].getNumChildren() == 1;
      predicates[72] = node[0][0].getKind() == kind::BITVECTOR_AND && node[0][0].getNumChildren() == 2;
      predicates[101] = node[0][0].getKind() == kind::BITVECTOR_OR && node[0][0].getNumChildren() == 2;
      predicates[150] = node[0][0].getKind() == kind::BITVECTOR_AND && node[0][0].getNumChildren() == 3;
      if (node[0][0].getNumChildren() > 1) {
        predicates[56] = node[0][0][1].getKind() == kind::BITVECTOR_OR && node[0][0][1].getNumChildren() == 2;
        predicates[66] = node[0][0][1].getKind() == kind::BITVECTOR_AND && node[0][0][1].getNumChildren() == 2;
        predicates[76] = node[0][0][1].getKind() == kind::BITVECTOR_NOT && node[0][0][1].getNumChildren() == 1;
        predicates[118] = node[0][0][1].getKind() == kind::BITVECTOR_AND && node[0][0][1].getNumChildren() == 3;
        if (node[0][0][1].getNumChildren() > 0) {
          predicates[30] = node[0][0][1][0].getKind() == kind::BITVECTOR_NOT && node[0][0][1][0].getNumChildren() == 1;
          predicates[79] = node[0][0][1][0].getKind() == kind::BITVECTOR_OR && node[0][0][1][0].getNumChildren() == 3;
          predicates[82] = node[0][0][1][0].getKind() == kind::BITVECTOR_AND && node[0][0][1][0].getNumChildren() == 2;
        }
        if (node[0][0][1].getNumChildren() > 1) {
          predicates[62] = node[0][0][1][1].getKind() == kind::BITVECTOR_NOT && node[0][0][1][1].getNumChildren() == 1;
          predicates[78] = node[0][0][1][1].getKind() == kind::BITVECTOR_AND && node[0][0][1][1].getNumChildren() == 2;
        }
        if (node[0][0][1].getNumChildren() > 2) {
          predicates[93] = node[0][0][1][2].getKind() == kind::BITVECTOR_NOT && node[0][0][1][2].getNumChildren() == 1;
        }
      }
      if (node[0][0].getNumChildren() > 2) {
        predicates[31] = node[0][0][2].getKind() == kind::BITVECTOR_NOT && node[0][0][2].getNumChildren() == 1;
        if (node[0][0][2].getNumChildren() > 0) {
          predicates[152] = node[0][0][2][0].getKind() == kind::BITVECTOR_AND && node[0][0][2][0].getNumChildren() == 2;
        }
      }
      if (node[0][0].getNumChildren() > 0) {
        predicates[11] = node[0][0][0].getKind() == kind::BITVECTOR_OR && node[0][0][0].getNumChildren() == 2;
        predicates[13] = node[0][0][0].getKind() == kind::BITVECTOR_AND && node[0][0][0].getNumChildren() == 2;
        predicates[94] = node[0][0][0].getKind() == kind::BITVECTOR_AND && node[0][0][0].getNumChildren() == 3;
        predicates[95] = node[0][0][0].getKind() == kind::BITVECTOR_OR && node[0][0][0].getNumChildren() == 3;
        predicates[156] = node[0][0][0].getKind() == kind::BITVECTOR_NOT && node[0][0][0].getNumChildren() == 1;
        if (node[0][0][0].getNumChildren() > 1) {
          predicates[0] = node[0][0][0][1].getKind() == kind::BITVECTOR_OR && node[0][0][0][1].getNumChildren() == 2;
          predicates[36] = node[0][0][0][1].getKind() == kind::BITVECTOR_AND && node[0][0][0][1].getNumChildren() == 2;
          predicates[110] = node[0][0][0][1].getKind() == kind::BITVECTOR_NOT && node[0][0][0][1].getNumChildren() == 1;
        }
        if (node[0][0][0].getNumChildren() > 0) {
          predicates[20] = node[0][0][0][0].getKind() == kind::BITVECTOR_OR && node[0][0][0][0].getNumChildren() == 2;
          predicates[24] = node[0][0][0][0].getKind() == kind::BITVECTOR_OR && node[0][0][0][0].getNumChildren() == 3;
          predicates[120] = node[0][0][0][0].getKind() == kind::BITVECTOR_AND && node[0][0][0][0].getNumChildren() == 2;
          predicates[127] = node[0][0][0][0].getKind() == kind::BITVECTOR_NOT && node[0][0][0][0].getNumChildren() == 1;
        }
        if (node[0][0][0].getNumChildren() > 2) {
          predicates[1] = node[0][0][0][2].getKind() == kind::BITVECTOR_NOT && node[0][0][0][2].getNumChildren() == 1;
          predicates[100] = node[0][0][0][2].getKind() == kind::BITVECTOR_OR && node[0][0][0][2].getNumChildren() == 2;
          predicates[136] = node[0][0][0][2].getKind() == kind::BITVECTOR_AND && node[0][0][0][2].getNumChildren() == 2;
        }
      }
    }
    if (node[0].getNumChildren() > 1) {
      predicates[7] = node[0][1].getKind() == kind::BITVECTOR_OR && node[0][1].getNumChildren() == 3;
      predicates[87] = node[0][1].getKind() == kind::BITVECTOR_OR && node[0][1].getNumChildren() == 2;
      predicates[113] = node[0][1].getKind() == kind::BITVECTOR_NOT && node[0][1].getNumChildren() == 1;
      if (node[0][1].getNumChildren() > 1) {
        predicates[69] = node[0][1][1].getKind() == kind::BITVECTOR_AND && node[0][1][1].getNumChildren() == 3;
        predicates[103] = node[0][1][1].getKind() == kind::BITVECTOR_NOT && node[0][1][1].getNumChildren() == 1;
        predicates[147] = node[0][1][1].getKind() == kind::BITVECTOR_AND && node[0][1][1].getNumChildren() == 2;
        if (node[0][1][1].getNumChildren() > 2) {
          predicates[116] = node[0][1][1][2].getKind() == kind::BITVECTOR_NOT && node[0][1][1][2].getNumChildren() == 1;
        }
        if (node[0][1][1].getNumChildren() > 1) {
          predicates[32] = node[0][1][1][1].getKind() == kind::BITVECTOR_NOT && node[0][1][1][1].getNumChildren() == 1;
        }
        if (node[0][1][1].getNumChildren() > 0) {
          predicates[63] = node[0][1][1][0].getKind() == kind::BITVECTOR_NOT && node[0][1][1][0].getNumChildren() == 1;
          predicates[64] = node[0][1][1][0].getKind() == kind::BITVECTOR_AND && node[0][1][1][0].getNumChildren() == 2;
        }
      }
      if (node[0][1].getNumChildren() > 0) {
        predicates[2] = node[0][1][0].getKind() == kind::BITVECTOR_AND && node[0][1][0].getNumChildren() == 3;
        predicates[15] = node[0][1][0].getKind() == kind::BITVECTOR_OR && node[0][1][0].getNumChildren() == 2;
        predicates[81] = node[0][1][0].getKind() == kind::BITVECTOR_AND && node[0][1][0].getNumChildren() == 2;
        predicates[98] = node[0][1][0].getKind() == kind::BITVECTOR_OR && node[0][1][0].getNumChildren() == 3;
        predicates[154] = node[0][1][0].getKind() == kind::BITVECTOR_NOT && node[0][1][0].getNumChildren() == 1;
        if (node[0][1][0].getNumChildren() > 1) {
          predicates[57] = node[0][1][0][1].getKind() == kind::BITVECTOR_AND && node[0][1][0][1].getNumChildren() == 2;
          predicates[58] = node[0][1][0][1].getKind() == kind::BITVECTOR_NOT && node[0][1][0][1].getNumChildren() == 1;
          predicates[104] = node[0][1][0][1].getKind() == kind::BITVECTOR_OR && node[0][1][0][1].getNumChildren() == 2;
        }
        if (node[0][1][0].getNumChildren() > 2) {
          predicates[119] = node[0][1][0][2].getKind() == kind::BITVECTOR_AND && node[0][1][0][2].getNumChildren() == 2;
          predicates[131] = node[0][1][0][2].getKind() == kind::BITVECTOR_OR && node[0][1][0][2].getNumChildren() == 2;
          predicates[155] = node[0][1][0][2].getKind() == kind::BITVECTOR_NOT && node[0][1][0][2].getNumChildren() == 1;
        }
        if (node[0][1][0].getNumChildren() > 0) {
          predicates[23] = node[0][1][0][0].getKind() == kind::BITVECTOR_OR && node[0][1][0][0].getNumChildren() == 2;
          predicates[53] = node[0][1][0][0].getKind() == kind::BITVECTOR_NOT && node[0][1][0][0].getNumChildren() == 1;
          predicates[97] = node[0][1][0][0].getKind() == kind::BITVECTOR_AND && node[0][1][0][0].getNumChildren() == 2;
        }
      }
    }
  }
  if (node.getNumChildren() > 1) {
    predicates[39] = node[1].getKind() == kind::BITVECTOR_AND && node[1].getNumChildren() == 3;
    predicates[109] = node[1].getKind() == kind::BITVECTOR_NOT && node[1].getNumChildren() == 1;
    predicates[117] = node[1].getKind() == kind::BITVECTOR_AND && node[1].getNumChildren() == 2;
    if (node[1].getNumChildren() > 2) {
      predicates[40] = node[1][2].getKind() == kind::BITVECTOR_NOT && node[1][2].getNumChildren() == 1;
      predicates[65] = node[1][2].getKind() == kind::BITVECTOR_OR && node[1][2].getNumChildren() == 2;
      if (node[1][2].getNumChildren() > 0) {
        predicates[9] = node[1][2][0].getKind() == kind::BITVECTOR_NOT && node[1][2][0].getNumChildren() == 1;
        predicates[38] = node[1][2][0].getKind() == kind::BITVECTOR_AND && node[1][2][0].getNumChildren() == 2;
        predicates[158] = node[1][2][0].getKind() == kind::BITVECTOR_OR && node[1][2][0].getNumChildren() == 3;
        if (node[1][2][0].getNumChildren() > 0) {
          predicates[75] = node[1][2][0][0].getKind() == kind::BITVECTOR_NOT && node[1][2][0][0].getNumChildren() == 1;
          predicates[84] = node[1][2][0][0].getKind() == kind::BITVECTOR_AND && node[1][2][0][0].getNumChildren() == 2;
        }
        if (node[1][2][0].getNumChildren() > 1) {
          predicates[88] = node[1][2][0][1].getKind() == kind::BITVECTOR_NOT && node[1][2][0][1].getNumChildren() == 1;
        }
      }
      if (node[1][2].getNumChildren() > 1) {
        predicates[16] = node[1][2][1].getKind() == kind::BITVECTOR_NOT && node[1][2][1].getNumChildren() == 1;
        predicates[92] = node[1][2][1].getKind() == kind::BITVECTOR_AND && node[1][2][1].getNumChildren() == 2;
        if (node[1][2][1].getNumChildren() > 1) {
          predicates[151] = node[1][2][1][1].getKind() == kind::BITVECTOR_NOT && node[1][2][1][1].getNumChildren() == 1;
        }
        if (node[1][2][1].getNumChildren() > 0) {
          predicates[21] = node[1][2][1][0].getKind() == kind::BITVECTOR_AND && node[1][2][1][0].getNumChildren() == 2;
          predicates[44] = node[1][2][1][0].getKind() == kind::BITVECTOR_NOT && node[1][2][1][0].getNumChildren() == 1;
        }
      }
    }
    if (node[1].getNumChildren() > 1) {
      predicates[25] = node[1][1].getKind() == kind::BITVECTOR_NOT && node[1][1].getNumChildren() == 1;
      predicates[52] = node[1][1].getKind() == kind::BITVECTOR_OR && node[1][1].getNumChildren() == 2;
      predicates[126] = node[1][1].getKind() == kind::BITVECTOR_OR && node[1][1].getNumChildren() == 3;
      if (node[1][1].getNumChildren() > 0) {
        predicates[5] = node[1][1][0].getKind() == kind::BITVECTOR_AND && node[1][1][0].getNumChildren() == 2;
        predicates[49] = node[1][1][0].getKind() == kind::BITVECTOR_OR && node[1][1][0].getNumChildren() == 2;
        predicates[83] = node[1][1][0].getKind() == kind::BITVECTOR_AND && node[1][1][0].getNumChildren() == 3;
        predicates[107] = node[1][1][0].getKind() == kind::BITVECTOR_NOT && node[1][1][0].getNumChildren() == 1;
        predicates[130] = node[1][1][0].getKind() == kind::BITVECTOR_OR && node[1][1][0].getNumChildren() == 3;
        if (node[1][1][0].getNumChildren() > 2) {
          predicates[3] = node[1][1][0][2].getKind() == kind::BITVECTOR_OR && node[1][1][0][2].getNumChildren() == 2;
          predicates[108] = node[1][1][0][2].getKind() == kind::BITVECTOR_AND && node[1][1][0][2].getNumChildren() == 2;
          predicates[142] = node[1][1][0][2].getKind() == kind::BITVECTOR_NOT && node[1][1][0][2].getNumChildren() == 1;
        }
        if (node[1][1][0].getNumChildren() > 1) {
          predicates[22] = node[1][1][0][1].getKind() == kind::BITVECTOR_AND && node[1][1][0][1].getNumChildren() == 2;
          predicates[33] = node[1][1][0][1].getKind() == kind::BITVECTOR_OR && node[1][1][0][1].getNumChildren() == 2;
          predicates[115] = node[1][1][0][1].getKind() == kind::BITVECTOR_NOT && node[1][1][0][1].getNumChildren() == 1;
        }
        if (node[1][1][0].getNumChildren() > 0) {
          predicates[89] = node[1][1][0][0].getKind() == kind::BITVECTOR_AND && node[1][1][0][0].getNumChildren() == 2;
          predicates[91] = node[1][1][0][0].getKind() == kind::BITVECTOR_OR && node[1][1][0][0].getNumChildren() == 2;
          predicates[143] = node[1][1][0][0].getKind() == kind::BITVECTOR_NOT && node[1][1][0][0].getNumChildren() == 1;
        }
      }
      if (node[1][1].getNumChildren() > 1) {
        predicates[12] = node[1][1][1].getKind() == kind::BITVECTOR_NOT && node[1][1][1].getNumChildren() == 1;
        predicates[61] = node[1][1][1].getKind() == kind::BITVECTOR_AND && node[1][1][1].getNumChildren() == 2;
        predicates[141] = node[1][1][1].getKind() == kind::BITVECTOR_AND && node[1][1][1].getNumChildren() == 3;
        if (node[1][1][1].getNumChildren() > 1) {
          predicates[8] = node[1][1][1][1].getKind() == kind::BITVECTOR_NOT && node[1][1][1][1].getNumChildren() == 1;
        }
        if (node[1][1][1].getNumChildren() > 2) {
          predicates[42] = node[1][1][1][2].getKind() == kind::BITVECTOR_NOT && node[1][1][1][2].getNumChildren() == 1;
        }
        if (node[1][1][1].getNumChildren() > 0) {
          predicates[43] = node[1][1][1][0].getKind() == kind::BITVECTOR_NOT && node[1][1][1][0].getNumChildren() == 1;
          predicates[122] = node[1][1][1][0].getKind() == kind::BITVECTOR_AND && node[1][1][1][0].getNumChildren() == 2;
        }
      }
    }
    if (node[1].getNumChildren() > 0) {
      predicates[50] = node[1][0].getKind() == kind::BITVECTOR_OR && node[1][0].getNumChildren() == 2;
      predicates[74] = node[1][0].getKind() == kind::BITVECTOR_AND && node[1][0].getNumChildren() == 3;
      predicates[132] = node[1][0].getKind() == kind::BITVECTOR_OR && node[1][0].getNumChildren() == 3;
      predicates[153] = node[1][0].getKind() == kind::BITVECTOR_AND && node[1][0].getNumChildren() == 2;
      predicates[159] = node[1][0].getKind() == kind::BITVECTOR_NOT && node[1][0].getNumChildren() == 1;
      if (node[1][0].getNumChildren() > 2) {
        predicates[41] = node[1][0][2].getKind() == kind::BITVECTOR_NOT && node[1][0][2].getNumChildren() == 1;
        if (node[1][0][2].getNumChildren() > 0) {
          predicates[80] = node[1][0][2][0].getKind() == kind::BITVECTOR_AND && node[1][0][2][0].getNumChildren() == 2;
        }
      }
      if (node[1][0].getNumChildren() > 0) {
        predicates[6] = node[1][0][0].getKind() == kind::BITVECTOR_OR && node[1][0][0].getNumChildren() == 3;
        predicates[47] = node[1][0][0].getKind() == kind::BITVECTOR_OR && node[1][0][0].getNumChildren() == 2;
        predicates[59] = node[1][0][0].getKind() == kind::BITVECTOR_AND && node[1][0][0].getNumChildren() == 3;
        predicates[114] = node[1][0][0].getKind() == kind::BITVECTOR_NOT && node[1][0][0].getNumChildren() == 1;
        predicates[137] = node[1][0][0].getKind() == kind::BITVECTOR_AND && node[1][0][0].getNumChildren() == 2;
        if (node[1][0][0].getNumChildren() > 2) {
          predicates[67] = node[1][0][0][2].getKind() == kind::BITVECTOR_OR && node[1][0][0][2].getNumChildren() == 2;
          predicates[73] = node[1][0][0][2].getKind() == kind::BITVECTOR_AND && node[1][0][0][2].getNumChildren() == 2;
          predicates[86] = node[1][0][0][2].getKind() == kind::BITVECTOR_NOT && node[1][0][0][2].getNumChildren() == 1;
        }
        if (node[1][0][0].getNumChildren() > 0) {
          predicates[51] = node[1][0][0][0].getKind() == kind::BITVECTOR_OR && node[1][0][0][0].getNumChildren() == 3;
          predicates[99] = node[1][0][0][0].getKind() == kind::BITVECTOR_AND && node[1][0][0][0].getNumChildren() == 2;
          predicates[105] = node[1][0][0][0].getKind() == kind::BITVECTOR_NOT && node[1][0][0][0].getNumChildren() == 1;
          predicates[124] = node[1][0][0][0].getKind() == kind::BITVECTOR_OR && node[1][0][0][0].getNumChildren() == 2;
        }
        if (node[1][0][0].getNumChildren() > 1) {
          predicates[54] = node[1][0][0][1].getKind() == kind::BITVECTOR_OR && node[1][0][0][1].getNumChildren() == 2;
          predicates[68] = node[1][0][0][1].getKind() == kind::BITVECTOR_NOT && node[1][0][0][1].getNumChildren() == 1;
          predicates[148] = node[1][0][0][1].getKind() == kind::BITVECTOR_AND && node[1][0][0][1].getNumChildren() == 2;
        }
      }
      if (node[1][0].getNumChildren() > 1) {
        predicates[28] = node[1][0][1].getKind() == kind::BITVECTOR_AND && node[1][0][1].getNumChildren() == 3;
        predicates[34] = node[1][0][1].getKind() == kind::BITVECTOR_NOT && node[1][0][1].getNumChildren() == 1;
        predicates[45] = node[1][0][1].getKind() == kind::BITVECTOR_OR && node[1][0][1].getNumChildren() == 2;
        predicates[112] = node[1][0][1].getKind() == kind::BITVECTOR_AND && node[1][0][1].getNumChildren() == 2;
        if (node[1][0][1].getNumChildren() > 0) {
          predicates[102] = node[1][0][1][0].getKind() == kind::BITVECTOR_OR && node[1][0][1][0].getNumChildren() == 3;
          predicates[138] = node[1][0][1][0].getKind() == kind::BITVECTOR_AND && node[1][0][1][0].getNumChildren() == 2;
          predicates[139] = node[1][0][1][0].getKind() == kind::BITVECTOR_NOT && node[1][0][1][0].getNumChildren() == 1;
        }
        if (node[1][0][1].getNumChildren() > 2) {
          predicates[96] = node[1][0][1][2].getKind() == kind::BITVECTOR_NOT && node[1][0][1][2].getNumChildren() == 1;
        }
        if (node[1][0][1].getNumChildren() > 1) {
          predicates[14] = node[1][0][1][1].getKind() == kind::BITVECTOR_AND && node[1][0][1][1].getNumChildren() == 2;
          predicates[133] = node[1][0][1][1].getKind() == kind::BITVECTOR_NOT && node[1][0][1][1].getNumChildren() == 1;
        }
      }
    }
  }
  if (node.getNumChildren() > 2) {
    predicates[48] = node[2].getKind() == kind::BITVECTOR_AND && node[2].getNumChildren() == 3;
    predicates[128] = node[2].getKind() == kind::BITVECTOR_AND && node[2].getNumChildren() == 2;
    if (node[2].getNumChildren() > 0) {
      predicates[144] = node[2][0].getKind() == kind::BITVECTOR_NOT && node[2][0].getNumChildren() == 1;
      if (node[2][0].getNumChildren() > 0) {
        predicates[106] = node[2][0][0].getKind() == kind::BITVECTOR_AND && node[2][0][0].getNumChildren() == 2;
        if (node[2][0][0].getNumChildren() > 1) {
          predicates[125] = node[2][0][0][1].getKind() == kind::BITVECTOR_NOT && node[2][0][0][1].getNumChildren() == 1;
        }
        if (node[2][0][0].getNumChildren() > 0) {
          predicates[46] = node[2][0][0][0].getKind() == kind::BITVECTOR_NOT && node[2][0][0][0].getNumChildren() == 1;
        }
      }
    }
    if (node[2].getNumChildren() > 2) {
      predicates[134] = node[2][2].getKind() == kind::BITVECTOR_NOT && node[2][2].getNumChildren() == 1;
      if (node[2][2].getNumChildren() > 0) {
        predicates[4] = node[2][2][0].getKind() == kind::BITVECTOR_AND && node[2][2][0].getNumChildren() == 2;
        if (node[2][2][0].getNumChildren() > 0) {
          predicates[146] = node[2][2][0][0].getKind() == kind::BITVECTOR_NOT && node[2][2][0][0].getNumChildren() == 1;
        }
        if (node[2][2][0].getNumChildren() > 1) {
          predicates[19] = node[2][2][0][1].getKind() == kind::BITVECTOR_NOT && node[2][2][0][1].getNumChildren() == 1;
        }
      }
    }
    if (node[2].getNumChildren() > 1) {
      predicates[77] = node[2][1].getKind() == kind::BITVECTOR_NOT && node[2][1].getNumChildren() == 1;
      if (node[2][1].getNumChildren() > 0) {
        predicates[35] = node[2][1][0].getKind() == kind::BITVECTOR_AND && node[2][1][0].getNumChildren() == 2;
        if (node[2][1][0].getNumChildren() > 0) {
          predicates[135] = node[2][1][0][0].getKind() == kind::BITVECTOR_NOT && node[2][1][0][0].getNumChildren() == 1;
        }
        if (node[2][1][0].getNumChildren() > 1) {
          predicates[90] = node[2][1][0][1].getKind() == kind::BITVECTOR_NOT && node[2][1][0][1].getNumChildren() == 1;
        }
      }
    }
  }
  Node response;
  response = rewrite_658(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_478(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_681(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_682(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_543(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_552(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_561(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_562(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_567(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_572(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_582(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_585(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_587(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_596(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_604(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_605(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_609(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_612(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_616(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_625(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_633(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_642(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_648(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_659(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_660(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_669(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_671(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_676(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_696(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_702(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_538(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_540(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_541(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_548(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_549(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_551(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_558(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_569(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_570(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_576(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_581(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_594(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_595(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_606(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_615(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_618(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_619(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_627(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_631(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_634(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_636(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_641(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_644(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_651(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_653(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_654(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_413(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_427(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_450(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_460(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_475(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_501(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_506(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_507(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_509(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_510(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_517(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_519(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_525(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_532(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_553(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_555(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_590(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_591(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_592(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_610(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_624(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_630(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_632(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_667(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_693(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_374(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_388(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_392(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_399(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_407(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_416(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_419(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_437(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_439(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_456(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_482(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_505(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_597(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_376(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_377(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_395(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_403(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_410(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_438(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_443(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_447(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_451(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_464(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_465(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_477(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_367(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_387(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_411(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_444(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_471(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_476(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_488(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_500(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_512(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_526(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_369(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_371(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_400(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_430(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_440(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_462(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_372(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_405(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_415(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_463(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_370(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_442(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_375(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_394(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_534(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  response = rewrite_704(node, predicates);
  if (response != node) return RewriteResponse(REWRITE_DONE, response);
  if (options::printStats()) TheoryBVSpecialRewriter::counter[1999]++;
  return RewriteResponse(REWRITE_DONE, node);
}
